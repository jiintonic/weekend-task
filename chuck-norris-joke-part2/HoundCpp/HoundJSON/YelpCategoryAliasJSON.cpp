/* file "YelpCategoryAliasJSON.cpp" */

/* Generated automatically by Classy JSON. */


#pragma implementation "YelpCategoryAliasJSON.h"

#include "YelpCategoryAliasJSON.h"


YelpCategoryAliasJSON::TypeValue::TypeValue(void)
  {
  }

YelpCategoryAliasJSON::TypeValue::TypeValue(const TypeValue &other) : in_known_list(other.in_known_list)
  {
    if (in_known_list)
        list_value = other.list_value;
    else
        string_value = other.string_value;
  }

YelpCategoryAliasJSON::TypeValue::TypeValue(TypeValueKnownValues other) : in_known_list(true), list_value(other)

  {
  }

bool YelpCategoryAliasJSON::TypeValue::operator==(const TypeValue &other) const
  {
    if (in_known_list != other.in_known_list)
        return false;
    if (in_known_list)
        return list_value == other.list_value;
    else
        return (strcmp(string_value.c_str(), other.string_value.c_str()) == 0);
  }

bool YelpCategoryAliasJSON::TypeValue::operator!=(const TypeValue &other) const
  {
    return !(operator==(other));
  }

bool YelpCategoryAliasJSON::TypeValue::operator<(const TypeValue &other) const
  {
    if (in_known_list != other.in_known_list)
        return in_known_list;
    if (in_known_list)
        return list_value < other.list_value;
    else
        return (strcmp(string_value.c_str(), other.string_value.c_str()) < 0);
  }

bool YelpCategoryAliasJSON::TypeValue::operator>(const TypeValue &other) const
  {
    return other.operator<(*this);
  }

bool YelpCategoryAliasJSON::TypeValue::operator>=(const TypeValue &other) const
  {
    return !(operator<(other));
  }

bool YelpCategoryAliasJSON::TypeValue::operator<=(const TypeValue &other) const
  {
    return !(other.operator<(*this));
  }

YelpCategoryAliasJSON::TypeValueKnownValues YelpCategoryAliasJSON::stringToValue(const char *chars)
  {
    switch ((unsigned char)(chars[0]))
      {
        case '3':
            if (strcmp(&(chars[1]), "dprinting") == 0)
                return Value_3dprinting;
            break;
        case 'a':
            switch ((unsigned char)(chars[1]))
              {
                case 'c':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "ibowls") == 0)
                                return Value_acaibowls;
                            break;
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ssories") == 0)
                                        return Value_accessories;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "untants") == 0)
                                        return Value_accountants;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "etreatment") == 0)
                                return Value_acnetreatment;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ive") == 0)
                                return Value_active;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "puncture") == 0)
                                return Value_acupuncture;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'd':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "ictionmedicine") == 0)
                                return Value_addictionmedicine;
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "ptionservices") == 0)
                                return Value_adoptionservices;
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "lt", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 0:
                                        return Value_adult;
                                    case 'e':
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'd':
                                                if (strcmp(&(chars[7]), "u") == 0)
                                                    return Value_adultedu;
                                                break;
                                            case 'n':
                                                if (strcmp(&(chars[7]), "tertainment") == 0)
                                                    return Value_adultentertainment;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "ertising") == 0)
                                return Value_advertising;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'r':
                            if (strncmp(&(chars[3]), "ial", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'f':
                                        if (strcmp(&(chars[7]), "itness") == 0)
                                            return Value_aerialfitness;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[7]), "ours") == 0)
                                            return Value_aerialtours;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "theticians") == 0)
                                return Value_aestheticians;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'f':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            if (strcmp(&(chars[3]), "hani") == 0)
                                return Value_afghani;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "ican") == 0)
                                return Value_african;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'g':
                    if (strcmp(&(chars[2]), "riturismi") == 0)
                        return Value_agriturismi;
                    break;
                case 'i':
                    if (strncmp(&(chars[2]), "r", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'c':
                                if (strncmp(&(chars[4]), "raft", 4) == 0)
                                  {
                                    switch ((unsigned char)(chars[8]))
                                      {
                                        case 'd':
                                            if (strcmp(&(chars[9]), "ealers") == 0)
                                                return Value_aircraftdealers;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[9]), "epairs") == 0)
                                                return Value_aircraftrepairs;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'd':
                                if (strcmp(&(chars[4]), "uctcleaning") == 0)
                                    return Value_airductcleaning;
                                break;
                            case 'l':
                                if (strcmp(&(chars[4]), "ines") == 0)
                                    return Value_airlines;
                                break;
                            case 'p':
                                if (strncmp(&(chars[4]), "ort", 3) == 0)
                                  {
                                    switch ((unsigned char)(chars[7]))
                                      {
                                        case '_':
                                            if (strcmp(&(chars[8]), "shuttles") == 0)
                                                return Value_airport_shuttles;
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[8]), "ounges") == 0)
                                                return Value_airportlounges;
                                            break;
                                        case 's':
                                            if (chars[8] == 0)
                                                return Value_airports;
                                            break;
                                        case 't':
                                            if (strcmp(&(chars[8]), "erminals") == 0)
                                                return Value_airportterminals;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 's':
                                if (strcmp(&(chars[4]), "oft") == 0)
                                    return Value_airsoft;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'l':
                            if (strcmp(&(chars[3]), "ergist") == 0)
                                return Value_allergist;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "atian") == 0)
                                return Value_alsatian;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ernativemedicine") == 0)
                                return Value_alternativemedicine;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'm':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "teursportsteams") == 0)
                                return Value_amateursportsteams;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "sementparks") == 0)
                                return Value_amusementparks;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            if (strcmp(&(chars[3]), "sthesiologists") == 0)
                                return Value_anesthesiologists;
                            break;
                        case 'i':
                            if (strncmp(&(chars[3]), "mal", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[7]), "ssistedtherapy") == 0)
                                            return Value_animalassistedtherapy;
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[7]), "olistic") == 0)
                                            return Value_animalholistic;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[7]), "hysicaltherapy") == 0)
                                            return Value_animalphysicaltherapy;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[7]), "helters") == 0)
                                            return Value_animalshelters;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "iques") == 0)
                                return Value_antiques;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strncmp(&(chars[3]), "rtment", 6) == 0)
                              {
                                switch ((unsigned char)(chars[9]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[10]), "gents") == 0)
                                            return Value_apartmentagents;
                                        break;
                                    case 's':
                                        if (chars[10] == 0)
                                            return Value_apartments;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'l':
                                    if (strcmp(&(chars[4]), "iances") == 0)
                                        return Value_appliances;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "aisalservices") == 0)
                                        return Value_appraisalservices;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'q':
                    if (strncmp(&(chars[2]), "uariums", 7) == 0)
                      {
                        switch ((unsigned char)(chars[9]))
                          {
                            case 0:
                                return Value_aquariums;
                            case 'e':
                                if (strcmp(&(chars[10]), "rvices") == 0)
                                    return Value_aquariumservices;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "bian") == 0)
                                return Value_arabian;
                            break;
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "des") == 0)
                                        return Value_arcades;
                                    break;
                                case 'h':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "ry") == 0)
                                                return Value_archery;
                                            break;
                                        case 'i':
                                            if (strncmp(&(chars[5]), "tect", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[9]))
                                                  {
                                                    case 's':
                                                        if (chars[10] == 0)
                                                            return Value_architects;
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(chars[10]), "raltours") == 0)
                                                            return Value_architecturaltours;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "entine") == 0)
                                return Value_argentine;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "enian") == 0)
                                return Value_armenian;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "oceria_paella") == 0)
                                return Value_arroceria_paella;
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "lasses") == 0)
                                        return Value_artclasses;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "ficialturf") == 0)
                                        return Value_artificialturf;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "useums") == 0)
                                        return Value_artmuseums;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "estoration") == 0)
                                        return Value_artrestoration;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 0:
                                            return Value_arts;
                                        case 'a':
                                            if (strcmp(&(chars[5]), "ndcrafts") == 0)
                                                return Value_artsandcrafts;
                                            break;
                                        case 'c':
                                            if (strcmp(&(chars[5]), "hools") == 0)
                                                return Value_artschools;
                                            break;
                                        case 'p':
                                            if (strcmp(&(chars[5]), "acerentals") == 0)
                                                return Value_artspacerentals;
                                            break;
                                        case 'u':
                                            if (strcmp(&(chars[5]), "pplies") == 0)
                                                return Value_artsupplies;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ours") == 0)
                                        return Value_arttours;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "anfusion") == 0)
                                return Value_asianfusion;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "istedliving") == 0)
                                return Value_assistedliving;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "rologers") == 0)
                                return Value_astrologers;
                            break;
                        default:
                            break;
                      }
                    break;
                case 't':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            if (strcmp(&(chars[3]), "liers") == 0)
                                return Value_ateliers;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ractionfarms") == 0)
                                return Value_attractionfarms;
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "rentals") == 0)
                                return Value_atvrentals;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "tionhouses") == 0)
                                return Value_auctionhouses;
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "io", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'l':
                                        if (strcmp(&(chars[6]), "ogist") == 0)
                                            return Value_audiologist;
                                        break;
                                    case 'v':
                                        if (strcmp(&(chars[6]), "isualequipmentrental") == 0)
                                            return Value_audiovisualequipmentrental;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strncmp(&(chars[3]), "tr", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[6]), "lian") == 0)
                                            return Value_australian;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[6]), "an") == 0)
                                            return Value_austrian;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "o", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 0:
                                        return Value_auto;
                                    case '_':
                                        if (strcmp(&(chars[5]), "detailing") == 0)
                                            return Value_auto_detailing;
                                        break;
                                    case 'c':
                                        if (strcmp(&(chars[5]), "ustomization") == 0)
                                            return Value_autocustomization;
                                        break;
                                    case 'd':
                                        if (strcmp(&(chars[5]), "amageassessment") == 0)
                                            return Value_autodamageassessment;
                                        break;
                                    case 'e':
                                        if (strcmp(&(chars[5]), "lectric") == 0)
                                            return Value_autoelectric;
                                        break;
                                    case 'g':
                                        if (strcmp(&(chars[5]), "lass") == 0)
                                            return Value_autoglass;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "nsurance") == 0)
                                            return Value_autoinsurance;
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[5]), "oanproviders") == 0)
                                            return Value_autoloanproviders;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[5]), "artssupplies") == 0)
                                            return Value_autopartssupplies;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[5]), "epair") == 0)
                                            return Value_autorepair;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "ecurity") == 0)
                                            return Value_autosecurity;
                                        break;
                                    case 'u':
                                        if (strcmp(&(chars[5]), "pholstery") == 0)
                                            return Value_autoupholstery;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "ergnat") == 0)
                                return Value_auvergnat;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    if (strcmp(&(chars[2]), "iationservices") == 0)
                        return Value_aviationservices;
                    break;
                case 'w':
                    if (strcmp(&(chars[2]), "nings") == 0)
                        return Value_awnings;
                    break;
                case 'x':
                    if (strcmp(&(chars[2]), "ethrowing") == 0)
                        return Value_axethrowing;
                    break;
                case 'y':
                    if (strcmp(&(chars[2]), "urveda") == 0)
                        return Value_ayurveda;
                    break;
                default:
                    break;
              }
            break;
        case 'b':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "y_gear") == 0)
                                return Value_baby_gear;
                            break;
                        case 'c':
                            if (strncmp(&(chars[3]), "k", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'f':
                                        if (strcmp(&(chars[5]), "lowservices") == 0)
                                            return Value_backflowservices;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "hop") == 0)
                                            return Value_backshop;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "n") == 0)
                                        return Value_baden;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "inton") == 0)
                                        return Value_badminton;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ls") == 0)
                                        return Value_bagels;
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "ettes") == 0)
                                        return Value_baguettes;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "lbondsmen") == 0)
                                return Value_bailbondsmen;
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "eries") == 0)
                                return Value_bakeries;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "loonservices") == 0)
                                return Value_balloonservices;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'g':
                                    if (strcmp(&(chars[4]), "ladeshi") == 0)
                                        return Value_bangladeshi;
                                    break;
                                case 'k':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'r':
                                            if (strcmp(&(chars[5]), "uptcy") == 0)
                                                return Value_bankruptcy;
                                            break;
                                        case 's':
                                            if (chars[5] == 0)
                                                return Value_banks;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'b':
                                    if (strcmp(&(chars[4]), "ers") == 0)
                                        return Value_barbers;
                                    break;
                                case 'c':
                                    if (strcmp(&(chars[4]), "rawl") == 0)
                                        return Value_barcrawl;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "eclasses") == 0)
                                        return Value_barreclasses;
                                    break;
                                case 's':
                                    if (chars[4] == 0)
                                        return Value_bars;
                                    break;
                                case 't':
                                    if (strncmp(&(chars[4]), "end", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[8]), "rs") == 0)
                                                    return Value_bartenders;
                                                break;
                                            case 'i':
                                                if (strcmp(&(chars[8]), "ngschools") == 0)
                                                    return Value_bartendingschools;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ballfields") == 0)
                                        return Value_baseballfields;
                                    break;
                                case 'k':
                                    if (strcmp(&(chars[4]), "etballcourts") == 0)
                                        return Value_basketballcourts;
                                    break;
                                case 'q':
                                    if (strcmp(&(chars[4]), "ue") == 0)
                                        return Value_basque;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'h':
                                    if (strcmp(&(chars[4]), "ing_area") == 0)
                                        return Value_bathing_area;
                                    break;
                                case 't':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "rystores") == 0)
                                                return Value_batterystores;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ngcages") == 0)
                                                return Value_battingcages;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "arian") == 0)
                                return Value_bavarian;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'b':
                    if (strcmp(&(chars[2]), "q") == 0)
                        return Value_bbq;
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "h", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'b':
                                                if (strcmp(&(chars[6]), "ars") == 0)
                                                    return Value_beachbars;
                                                break;
                                            case 'e':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'q':
                                                        if (strcmp(&(chars[7]), "uipmentrental") == 0)
                                                            return Value_beachequipmentrental;
                                                        break;
                                                    case 's':
                                                        if (chars[7] == 0)
                                                            return Value_beaches;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'v':
                                                if (strcmp(&(chars[6]), "olleyball") == 0)
                                                    return Value_beachvolleyball;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "tysvc") == 0)
                                        return Value_beautysvc;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'd':
                            if (strcmp(&(chars[3]), "breakfast") == 0)
                                return Value_bedbreakfast;
                            break;
                        case 'e':
                            if (strncmp(&(chars[3]), "r", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[5]), "and_wine") == 0)
                                            return Value_beer_and_wine;
                                        break;
                                    case 'b':
                                        if (strcmp(&(chars[5]), "ar") == 0)
                                            return Value_beerbar;
                                        break;
                                    case 'g':
                                        if (strncmp(&(chars[5]), "arden", 5) == 0)
                                          {
                                            switch ((unsigned char)(chars[10]))
                                              {
                                                case 0:
                                                    return Value_beergarden;
                                                case 's':
                                                    if (chars[11] == 0)
                                                        return Value_beergardens;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[5]), "all") == 0)
                                            return Value_beerhall;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "ours") == 0)
                                            return Value_beertours;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'h':
                            if (strcmp(&(chars[3]), "avioranalysts") == 0)
                                return Value_behavioranalysts;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "gian") == 0)
                                return Value_belgian;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "richon") == 0)
                                return Value_berrichon;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "poke") == 0)
                                return Value_bespoke;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "tingcenters") == 0)
                                return Value_bettingcenters;
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "erage_stores") == 0)
                                return Value_beverage_stores;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strncmp(&(chars[3]), "ycle", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 'p':
                                        if (strcmp(&(chars[8]), "aths") == 0)
                                            return Value_bicyclepaths;
                                        break;
                                    case 's':
                                        if (chars[8] == 0)
                                            return Value_bicycles;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[5]), "repair_maintenance") == 0)
                                            return Value_bike_repair_maintenance;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[5]), "arking") == 0)
                                            return Value_bikeparking;
                                        break;
                                    case 'r':
                                        if (strncmp(&(chars[5]), "e", 1) == 0)
                                          {
                                            switch ((unsigned char)(chars[6]))
                                              {
                                                case 'n':
                                                    if (strcmp(&(chars[7]), "tals") == 0)
                                                        return Value_bikerentals;
                                                    break;
                                                case 'p':
                                                    if (strcmp(&(chars[7]), "air") == 0)
                                                        return Value_bikerepair;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 's':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 0:
                                                return Value_bikes;
                                            case 'h':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(chars[7]), "ring") == 0)
                                                            return Value_bikesharing;
                                                        break;
                                                    case 'o':
                                                        if (strcmp(&(chars[7]), "p") == 0)
                                                            return Value_bikeshop;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "ours") == 0)
                                            return Value_biketours;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "lingservices") == 0)
                                return Value_billingservices;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "go") == 0)
                                return Value_bingo;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "dshops") == 0)
                                return Value_birdshops;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "tros") == 0)
                                return Value_bistros;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "nds") == 0)
                                return Value_blinds;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    if (strcmp(&(chars[4]), "ddonation") == 0)
                                        return Value_blooddonation;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "outservices") == 0)
                                        return Value_blowoutservices;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strncmp(&(chars[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "harters") == 0)
                                            return Value_boatcharters;
                                        break;
                                    case 'd':
                                        if (strcmp(&(chars[5]), "ealers") == 0)
                                            return Value_boatdealers;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "ng") == 0)
                                            return Value_boating;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[5]), "artsandsupplies") == 0)
                                            return Value_boatpartsandsupplies;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[5]), "epair") == 0)
                                            return Value_boatrepair;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "ours") == 0)
                                            return Value_boattours;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'b':
                            if (strcmp(&(chars[3]), "sledding") == 0)
                                return Value_bobsledding;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "ceball") == 0)
                                return Value_bocceball;
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "y", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "ontouring") == 0)
                                            return Value_bodycontouring;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "hops") == 0)
                                            return Value_bodyshops;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'k':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(chars[5]), "inding") == 0)
                                                return Value_bookbinding;
                                            break;
                                        case 'k':
                                            if (strcmp(&(chars[5]), "eepers") == 0)
                                                return Value_bookkeepers;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "tores") == 0)
                                                return Value_bookstores;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "camps") == 0)
                                        return Value_bootcamps;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "oirphotography") == 0)
                                        return Value_boudoirphotography;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "cehouserentals") == 0)
                                        return Value_bouncehouserentals;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "guignon") == 0)
                                        return Value_bourguignon;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'w':
                            if (strcmp(&(chars[3]), "ling") == 0)
                                return Value_bowling;
                            break;
                        case 'x':
                            if (strcmp(&(chars[3]), "ing") == 0)
                                return Value_boxing;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 's':
                                    if (strcmp(&(chars[4]), "series") == 0)
                                        return Value_brasseries;
                                    break;
                                case 'z':
                                    if (strncmp(&(chars[4]), "ilian", 5) == 0)
                                      {
                                        switch ((unsigned char)(chars[9]))
                                          {
                                            case 0:
                                                return Value_brazilian;
                                            case 'j':
                                                if (strcmp(&(chars[10]), "iujitsu") == 0)
                                                    return Value_brazilianjiujitsu;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "kfast_brunch") == 0)
                                        return Value_breakfast_brunch;
                                    break;
                                case 'w':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "ries") == 0)
                                                return Value_breweries;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ngsupplies") == 0)
                                                return Value_brewingsupplies;
                                            break;
                                        case 'p':
                                            if (strcmp(&(chars[5]), "ubs") == 0)
                                                return Value_brewpubs;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "al") == 0)
                                        return Value_bridal;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ish") == 0)
                                        return Value_british;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strncmp(&(chars[3]), "ble", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 's':
                                        if (strcmp(&(chars[7]), "occer") == 0)
                                            return Value_bubblesoccer;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[7]), "ea") == 0)
                                            return Value_bubbletea;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            if (strcmp(&(chars[3]), "dhist_temples") == 0)
                                return Value_buddhist_temples;
                            break;
                        case 'f':
                            if (strcmp(&(chars[3]), "fets") == 0)
                                return Value_buffets;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ldingsupplies") == 0)
                                return Value_buildingsupplies;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'g':
                                    if (strcmp(&(chars[4]), "arian") == 0)
                                        return Value_bulgarian;
                                    break;
                                case 'k':
                                    if (strcmp(&(chars[4]), "billing") == 0)
                                        return Value_bulkbilling;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "geejumping") == 0)
                                return Value_bungeejumping;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'g':
                                    if (strcmp(&(chars[4]), "ers") == 0)
                                        return Value_burgers;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "ese") == 0)
                                        return Value_burmese;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "s") == 0)
                                        return Value_buses;
                                    break;
                                case 'i':
                                    if (strncmp(&(chars[4]), "ness", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[8]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[9]), "onsulting") == 0)
                                                    return Value_businessconsulting;
                                                break;
                                            case 'f':
                                                if (strcmp(&(chars[9]), "inancing") == 0)
                                                    return Value_businessfinancing;
                                                break;
                                            case 'l':
                                                if (strcmp(&(chars[9]), "awyers") == 0)
                                                    return Value_businesslawyers;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "ental") == 0)
                                        return Value_busrental;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "tations") == 0)
                                        return Value_busstations;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ours") == 0)
                                        return Value_bustours;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "cher") == 0)
                                return Value_butcher;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'c':
            switch ((unsigned char)(chars[1]))
              {
                case '_':
                    if (strcmp(&(chars[2]), "and_mh") == 0)
                        return Value_c_and_mh;
                    break;
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "ret") == 0)
                                        return Value_cabaret;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "netry") == 0)
                                        return Value_cabinetry;
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "ecars") == 0)
                                        return Value_cablecars;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'f':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 's':
                                        if (chars[5] == 0)
                                            return Value_cafes;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "eria") == 0)
                                            return Value_cafeteria;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'j':
                            if (strcmp(&(chars[3]), "un") == 0)
                                return Value_cajun;
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "eshop") == 0)
                                return Value_cakeshop;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "brian") == 0)
                                        return Value_calabrian;
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "igraphy") == 0)
                                        return Value_calligraphy;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'b':
                                    if (strcmp(&(chars[4]), "odian") == 0)
                                        return Value_cambodian;
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "grounds") == 0)
                                        return Value_campgrounds;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'l':
                                            if (strcmp(&(chars[5]), "estores") == 0)
                                                return Value_candlestores;
                                            break;
                                        case 'y':
                                            if (chars[5] == 0)
                                                return Value_candy;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'n':
                                    if (strncmp(&(chars[4]), "abis", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[8]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[9]), "clinics") == 0)
                                                    return Value_cannabis_clinics;
                                                break;
                                            case 'c':
                                                if (strcmp(&(chars[9]), "ollective") == 0)
                                                    return Value_cannabiscollective;
                                                break;
                                            case 'd':
                                                if (strcmp(&(chars[9]), "ispensaries") == 0)
                                                    return Value_cannabisdispensaries;
                                                break;
                                            case 'r':
                                                if (strcmp(&(chars[9]), "eferrals") == 0)
                                                    return Value_cannabisreferrals;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[9]), "ours") == 0)
                                                    return Value_cannabistours;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "en") == 0)
                                                return Value_canteen;
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[5]), "nese") == 0)
                                                return Value_cantonese;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case '_':
                                    if (strcmp(&(chars[4]), "dealers") == 0)
                                        return Value_car_dealers;
                                    break;
                                case 'a':
                                    if (strcmp(&(chars[4]), "uctions") == 0)
                                        return Value_carauctions;
                                    break;
                                case 'b':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'r':
                                            if (strcmp(&(chars[5]), "okers") == 0)
                                                return Value_carbrokers;
                                            break;
                                        case 'u':
                                            if (strcmp(&(chars[5]), "yers") == 0)
                                                return Value_carbuyers;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'd':
                                    if (strncmp(&(chars[4]), "io", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[7]), "lasses") == 0)
                                                    return Value_cardioclasses;
                                                break;
                                            case 'l':
                                                if (strcmp(&(chars[7]), "ogy") == 0)
                                                    return Value_cardiology;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "ercounseling") == 0)
                                        return Value_careercounseling;
                                    break;
                                case 'i':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(chars[5]), "bean") == 0)
                                                return Value_caribbean;
                                            break;
                                        case 'c':
                                            if (strcmp(&(chars[5]), "atures") == 0)
                                                return Value_caricatures;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "usels") == 0)
                                        return Value_carousels;
                                    break;
                                case 'p':
                                    if (strncmp(&(chars[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'n':
                                                if (strcmp(&(chars[6]), "ters") == 0)
                                                    return Value_carpenters;
                                                break;
                                            case 't':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case '_':
                                                        if (strcmp(&(chars[7]), "cleaning") == 0)
                                                            return Value_carpet_cleaning;
                                                        break;
                                                    case 'd':
                                                        if (strcmp(&(chars[7]), "yeing") == 0)
                                                            return Value_carpetdyeing;
                                                        break;
                                                    case 'i':
                                                        if (strncmp(&(chars[7]), "n", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[8]))
                                                              {
                                                                case 'g':
                                                                    if (chars[9] == 0)
                                                                        return Value_carpeting;
                                                                    break;
                                                                case 's':
                                                                    if (strcmp(&(chars[9]), "tallation") == 0)
                                                                        return Value_carpetinstallation;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "ental") == 0)
                                        return Value_carrental;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "hares") == 0)
                                        return Value_carshares;
                                    break;
                                case 'w':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[5]), "sh") == 0)
                                                return Value_carwash;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ndowtinting") == 0)
                                                return Value_carwindowtinting;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "nos") == 0)
                                        return Value_casinos;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "les") == 0)
                                        return Value_castles;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "lan") == 0)
                                        return Value_catalan;
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "ring") == 0)
                                        return Value_catering;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'l':
                            if (strcmp(&(chars[3]), "lphoneaccessories") == 0)
                                return Value_cellphoneaccessories;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "emonialclothing") == 0)
                                return Value_ceremonialclothing;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'l':
                                    if (strcmp(&(chars[4]), "lengecourses") == 0)
                                        return Value_challengecourses;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "pagne_bars") == 0)
                                        return Value_champagne_bars;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'k':
                                        if (strcmp(&(chars[5]), "ufta") == 0)
                                            return Value_cheekufta;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[5]), "leading") == 0)
                                            return Value_cheerleading;
                                        break;
                                    case 's':
                                        if (strncmp(&(chars[5]), "e", 1) == 0)
                                          {
                                            switch ((unsigned char)(chars[6]))
                                              {
                                                case 0:
                                                    return Value_cheese;
                                                case 's':
                                                    if (strcmp(&(chars[7]), "teaks") == 0)
                                                        return Value_cheesesteaks;
                                                    break;
                                                case 't':
                                                    if (strcmp(&(chars[7]), "astingclasses") == 0)
                                                        return Value_cheesetastingclasses;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "ken", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[8]), "wings") == 0)
                                                    return Value_chicken_wings;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[8]), "hop") == 0)
                                                    return Value_chickenshop;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'd':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'b':
                                                    if (strcmp(&(chars[6]), "irthedu") == 0)
                                                        return Value_childbirthedu;
                                                    break;
                                                case 'c':
                                                    switch ((unsigned char)(chars[6]))
                                                      {
                                                        case 'a':
                                                            if (strcmp(&(chars[7]), "re") == 0)
                                                                return Value_childcare;
                                                            break;
                                                        case 'l':
                                                            if (strcmp(&(chars[7]), "oth") == 0)
                                                                return Value_childcloth;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'p':
                                                    if (strcmp(&(chars[6]), "roofing") == 0)
                                                        return Value_childproofing;
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(chars[6]), "ensmuseums") == 0)
                                                        return Value_childrensmuseums;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'e':
                                            if (strcmp(&(chars[5]), "an") == 0)
                                                return Value_chilean;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'm':
                                    if (strncmp(&(chars[4]), "ney", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[8]), "akes") == 0)
                                                    return Value_chimneycakes;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[8]), "weeps") == 0)
                                                    return Value_chimneysweeps;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'n':
                                    if (strncmp(&(chars[4]), "ese", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 0:
                                                return Value_chinese;
                                            case 'm':
                                                if (strcmp(&(chars[8]), "artialarts") == 0)
                                                    return Value_chinesemartialarts;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "opractors") == 0)
                                        return Value_chiropractors;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "olate") == 0)
                                        return Value_chocolate;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "rs") == 0)
                                        return Value_choirs;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "istmastrees") == 0)
                                return Value_christmastrees;
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "r", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "hes") == 0)
                                            return Value_churches;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[5]), "os") == 0)
                                            return Value_churros;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "eries") == 0)
                                return Value_cideries;
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "arbars") == 0)
                                return Value_cigarbars;
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "cu", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(chars[6]), "ttraininggyms") == 0)
                                            return Value_circuittraininggyms;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[6]), "schools") == 0)
                                            return Value_circusschools;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "iccenter") == 0)
                                return Value_civiccenter;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "mbing") == 0)
                                return Value_climbing;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "krepair") == 0)
                                        return Value_clockrepair;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "hingrental") == 0)
                                        return Value_clothingrental;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "ns") == 0)
                                        return Value_clowns;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "bcrawl") == 0)
                                return Value_clubcrawl;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "ktailbars") == 0)
                                return Value_cocktailbars;
                            break;
                        case 'f':
                            if (strncmp(&(chars[3]), "fee", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 0:
                                        return Value_coffee;
                                    case 'r':
                                        if (strcmp(&(chars[7]), "oasteries") == 0)
                                            return Value_coffeeroasteries;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[7]), "hops") == 0)
                                            return Value_coffeeshops;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[7]), "easupplies") == 0)
                                            return Value_coffeeteasupplies;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'l':
                                    if (strncmp(&(chars[4]), "ege", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[8]), "ounseling") == 0)
                                                    return Value_collegecounseling;
                                                break;
                                            case 'u':
                                                if (strcmp(&(chars[8]), "niv") == 0)
                                                    return Value_collegeuniv;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'o':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'm':
                                            if (strcmp(&(chars[5]), "bian") == 0)
                                                return Value_colombian;
                                            break;
                                        case 'n':
                                            if (strcmp(&(chars[5]), "ics") == 0)
                                                return Value_colonics;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "dyclubs") == 0)
                                        return Value_comedyclubs;
                                    break;
                                case 'f':
                                    if (strcmp(&(chars[4]), "ortfood") == 0)
                                        return Value_comfortfood;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "cbooks") == 0)
                                        return Value_comicbooks;
                                    break;
                                case 'm':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "rcialrealestate") == 0)
                                                return Value_commercialrealestate;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ssionedartists") == 0)
                                                return Value_commissionedartists;
                                            break;
                                        case 'u':
                                            if (strncmp(&(chars[5]), "nity", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[9]))
                                                  {
                                                    case 'b':
                                                        if (strcmp(&(chars[10]), "ookbox") == 0)
                                                            return Value_communitybookbox;
                                                        break;
                                                    case 'c':
                                                        if (strcmp(&(chars[10]), "enters") == 0)
                                                            return Value_communitycenters;
                                                        break;
                                                    case 'g':
                                                        if (strcmp(&(chars[10]), "ardens") == 0)
                                                            return Value_communitygardens;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "uters") == 0)
                                        return Value_computers;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "pt_shops") == 0)
                                                return Value_concept_shops;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ergemedicine") == 0)
                                                return Value_conciergemedicine;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'd':
                                    if (strcmp(&(chars[4]), "ominiums") == 0)
                                        return Value_condominiums;
                                    break;
                                case 't':
                                    if (strncmp(&(chars[4]), "ract", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[8]))
                                          {
                                            case 'l':
                                                if (strcmp(&(chars[9]), "aw") == 0)
                                                    return Value_contractlaw;
                                                break;
                                            case 'o':
                                                if (strcmp(&(chars[9]), "rs") == 0)
                                                    return Value_contractors;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'v':
                                    if (strncmp(&(chars[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'n':
                                                if (strcmp(&(chars[6]), "ience") == 0)
                                                    return Value_convenience;
                                                break;
                                            case 'y':
                                                if (strcmp(&(chars[6]), "orsushi") == 0)
                                                    return Value_conveyorsushi;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "king", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[8]), "lasses") == 0)
                                            return Value_cookingclasses;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[8]), "chools") == 0)
                                            return Value_cookingschools;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "yshops") == 0)
                                return Value_copyshops;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "sican") == 0)
                                return Value_corsican;
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    if (strncmp(&(chars[4]), "et", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'i':
                                                if (strncmp(&(chars[7]), "c", 1) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[8]))
                                                      {
                                                        case 'd':
                                                            if (strcmp(&(chars[9]), "entists") == 0)
                                                                return Value_cosmeticdentists;
                                                            break;
                                                        case 's':
                                                            switch ((unsigned char)(chars[9]))
                                                              {
                                                                case 0:
                                                                    return Value_cosmetics;
                                                                case 'u':
                                                                    if (strcmp(&(chars[10]), "rgeons") == 0)
                                                                        return Value_cosmeticsurgeons;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'o':
                                                if (strcmp(&(chars[7]), "logy_schools") == 0)
                                                    return Value_cosmetology_schools;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "umes") == 0)
                                        return Value_costumes;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strncmp(&(chars[4]), "t", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[6]), "rtopinstall") == 0)
                                                    return Value_countertopinstall;
                                                break;
                                            case 'r':
                                                if (strncmp(&(chars[6]), "y", 1) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[7]))
                                                      {
                                                        case 'c':
                                                            if (strcmp(&(chars[8]), "lubs") == 0)
                                                                return Value_countryclubs;
                                                            break;
                                                        case 'd':
                                                            if (strcmp(&(chars[8]), "ancehalls") == 0)
                                                                return Value_countrydancehalls;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ers") == 0)
                                                return Value_couriers;
                                            break;
                                        case 't':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'h':
                                                    if (strcmp(&(chars[6]), "ouses") == 0)
                                                        return Value_courthouses;
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(chars[6]), "eporters") == 0)
                                                        return Value_courtreporters;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    if (strcmp(&(chars[2]), "rclasses") == 0)
                        return Value_cprclasses;
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "neservices") == 0)
                                return Value_craneservices;
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    if (strcmp(&(chars[4]), "ationservices") == 0)
                                        return Value_cremationservices;
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "eries") == 0)
                                        return Value_creperies;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "minaldefense") == 0)
                                return Value_criminaldefense;
                            break;
                        case 'y':
                            if (strcmp(&(chars[3]), "otherapy") == 0)
                                return Value_cryotherapy;
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strcmp(&(chars[2]), "a") == 0)
                        return Value_csa;
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "an") == 0)
                                return Value_cuban;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "turalcenter") == 0)
                                return Value_culturalcenter;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "cakes") == 0)
                                return Value_cupcakes;
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "r", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(chars[5]), "ncyexchange") == 0)
                                            return Value_currencyexchange;
                                        break;
                                    case 'y':
                                        if (strcmp(&(chars[5]), "sausage") == 0)
                                            return Value_currysausage;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strncmp(&(chars[3]), "tom", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[7]), "akes") == 0)
                                            return Value_customcakes;
                                        break;
                                    case 'm':
                                        if (strcmp(&(chars[7]), "erchandise") == 0)
                                            return Value_custommerchandise;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[7]), "brokers") == 0)
                                            return Value_customsbrokers;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "lingclasses") == 0)
                                return Value_cyclingclasses;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "riot") == 0)
                                return Value_cypriot;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'z':
                    if (strncmp(&(chars[2]), "ech", 3) == 0)
                      {
                        switch ((unsigned char)(chars[5]))
                          {
                            case 0:
                                return Value_czech;
                            case 's':
                                if (strcmp(&(chars[6]), "lovakian") == 0)
                                    return Value_czechslovakian;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'd':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'm':
                            if (strcmp(&(chars[3]), "agerestoration") == 0)
                                return Value_damagerestoration;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[6]), "schools") == 0)
                                                    return Value_dance_schools;
                                                break;
                                            case 'c':
                                                if (strcmp(&(chars[6]), "lubs") == 0)
                                                    return Value_danceclubs;
                                                break;
                                            case 'r':
                                                if (strcmp(&(chars[6]), "estaurants") == 0)
                                                    return Value_dancerestaurants;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "tudio") == 0)
                                                    return Value_dancestudio;
                                                break;
                                            case 'w':
                                                if (strcmp(&(chars[6]), "ear") == 0)
                                                    return Value_dancewear;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "sh") == 0)
                                        return Value_danish;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "arecovery") == 0)
                                return Value_datarecovery;
                            break;
                        case 'y':
                            if (strcmp(&(chars[3]), "camps") == 0)
                                return Value_daycamps;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "trelief") == 0)
                                return Value_debtrelief;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "ksrailing") == 0)
                                return Value_decksrailing;
                            break;
                        case 'l':
                            if (strncmp(&(chars[3]), "i", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "atessen") == 0)
                                            return Value_delicatessen;
                                        break;
                                    case 's':
                                        if (chars[5] == 0)
                                            return Value_delis;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "olitionservices") == 0)
                                return Value_demolitionservices;
                            break;
                        case 'n':
                            if (strncmp(&(chars[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "lhyg", 4) == 0)
                                          {
                                            switch ((unsigned char)(chars[9]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(chars[10]), "iniststorefront") == 0)
                                                        return Value_dentalhygeiniststorefront;
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(chars[10]), "enists", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[16]))
                                                          {
                                                            case 0:
                                                                return Value_dentalhygienists;
                                                            case 'm':
                                                                if (strcmp(&(chars[17]), "obile") == 0)
                                                                    return Value_dentalhygienistsmobile;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "sts") == 0)
                                            return Value_dentists;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "rtmentsofmotorvehicles") == 0)
                                        return Value_departmentsofmotorvehicles;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "stores") == 0)
                                        return Value_deptstores;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "matology") == 0)
                                return Value_dermatology;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "serts") == 0)
                                return Value_desserts;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'g':
                                    if (strncmp(&(chars[4]), "nostic", 6) == 0)
                                      {
                                        switch ((unsigned char)(chars[10]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[11]), "maging") == 0)
                                                    return Value_diagnosticimaging;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[11]), "ervices") == 0)
                                                    return Value_diagnosticservices;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "ysisclinics") == 0)
                                        return Value_dialysisclinics;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "titians") == 0)
                                return Value_dietitians;
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "itizingservices") == 0)
                                return Value_digitizingservices;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "sum") == 0)
                                return Value_dimsum;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "rs") == 0)
                                        return Value_diners;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "ertheater") == 0)
                                        return Value_dinnertheater;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "bilitylaw") == 0)
                                        return Value_disabilitylaw;
                                    break;
                                case 'c':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'g':
                                            if (strcmp(&(chars[5]), "olf") == 0)
                                                return Value_discgolf;
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[5]), "untstore") == 0)
                                                return Value_discountstore;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "illeries") == 0)
                                        return Value_distilleries;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(chars[5]), "ars") == 0)
                                                return Value_divebars;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "hops") == 0)
                                                return Value_diveshops;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "ng") == 0)
                                        return Value_diving;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "rce") == 0)
                                        return Value_divorce;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "utoshop") == 0)
                                        return Value_diyautoshop;
                                    break;
                                case 'f':
                                    if (strcmp(&(chars[4]), "ood") == 0)
                                        return Value_diyfood;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'j':
                    if (strcmp(&(chars[2]), "s") == 0)
                        return Value_djs;
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            switch ((unsigned char)(chars[3]))
                              {
                                case '_':
                                    if (strcmp(&(chars[4]), "parks") == 0)
                                        return Value_dog_parks;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "alkers") == 0)
                                        return Value_dogwalkers;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "inican") == 0)
                                return Value_dominican;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "rs") == 0)
                                                return Value_donairs;
                                            break;
                                        case 't':
                                            if (strcmp(&(chars[5]), "ioncenter") == 0)
                                                return Value_donationcenter;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "ts") == 0)
                                        return Value_donuts;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "rsales") == 0)
                                return Value_doorsales;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "las") == 0)
                                return Value_doulas;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "maschools") == 0)
                                return Value_dramaschools;
                            break;
                        case 'i':
                            if (strncmp(&(chars[3]), "v", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[6]), "ntheater") == 0)
                                                    return Value_driveintheater;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[6]), "hrubars") == 0)
                                                    return Value_drivethrubars;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "ng_schools") == 0)
                                            return Value_driving_schools;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "nes") == 0)
                                return Value_drones;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "gstores") == 0)
                                return Value_drugstores;
                            break;
                        case 'y':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "lean", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[8]))
                                          {
                                            case 0:
                                                return Value_dryclean;
                                            case 'i':
                                                if (strcmp(&(chars[9]), "nglaundry") == 0)
                                                    return Value_drycleaninglaundry;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "all") == 0)
                                        return Value_drywall;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'l':
                                    if (strcmp(&(chars[4]), "awyers") == 0)
                                        return Value_duilawyers;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "chools") == 0)
                                        return Value_duischools;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "psterrental") == 0)
                                return Value_dumpsterrental;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "licationservices") == 0)
                                return Value_duplicationservices;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "yfreeshops") == 0)
                                return Value_dutyfreeshops;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'e':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'r':
                            if (strcmp(&(chars[3]), "nosethroat") == 0)
                                return Value_earnosethroat;
                            break;
                        case 's':
                            if (strncmp(&(chars[3]), "tern", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[8]), "european") == 0)
                                            return Value_eastern_european;
                                        break;
                                    case 'g':
                                        if (strcmp(&(chars[8]), "erman") == 0)
                                            return Value_easterngerman;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ertainment") == 0)
                                return Value_eatertainment;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'd':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "torialservices") == 0)
                                return Value_editorialservices;
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "cation", 6) == 0)
                              {
                                switch ((unsigned char)(chars[9]))
                                  {
                                    case 0:
                                        return Value_education;
                                    case 's':
                                        if (strcmp(&(chars[10]), "ervices") == 0)
                                            return Value_educationservices;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'g':
                    if (strcmp(&(chars[2]), "yptian") == 0)
                        return Value_egyptian;
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "ercareplanning") == 0)
                                return Value_eldercareplanning;
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "tr", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'i':
                                                if (strncmp(&(chars[7]), "ci", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[9]))
                                                      {
                                                        case 'a':
                                                            if (strcmp(&(chars[10]), "ns") == 0)
                                                                return Value_electricians;
                                                            break;
                                                        case 't':
                                                            if (strcmp(&(chars[10]), "ysuppliers") == 0)
                                                                return Value_electricitysuppliers;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'o':
                                                if (strncmp(&(chars[7]), "nics", 4) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[11]))
                                                      {
                                                        case 0:
                                                            return Value_electronics;
                                                        case 'r':
                                                            if (strcmp(&(chars[12]), "epair") == 0)
                                                                return Value_electronicsrepair;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "entaryschools") == 0)
                                        return Value_elementaryschools;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ern_cafes") == 0)
                                return Value_eltern_cafes;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'm':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "ssy") == 0)
                                        return Value_embassy;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "oideryandcrochet") == 0)
                                        return Value_embroideryandcrochet;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strncmp(&(chars[3]), "rgency", 6) == 0)
                              {
                                switch ((unsigned char)(chars[9]))
                                  {
                                    case 'm':
                                        if (strcmp(&(chars[10]), "edicine") == 0)
                                            return Value_emergencymedicine;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[10]), "ethospital") == 0)
                                            return Value_emergencypethospital;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[10]), "ooms") == 0)
                                            return Value_emergencyrooms;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "nadas") == 0)
                                        return Value_empanadas;
                                    break;
                                case 'l':
                                    if (strncmp(&(chars[4]), "oyment", 6) == 0)
                                      {
                                        switch ((unsigned char)(chars[10]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[11]), "gencies") == 0)
                                                    return Value_employmentagencies;
                                                break;
                                            case 'l':
                                                if (strcmp(&(chars[11]), "awyers") == 0)
                                                    return Value_employmentlawyers;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "training") == 0)
                                return Value_emstraining;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strncmp(&(chars[3]), "o", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "rinologists") == 0)
                                            return Value_endocrinologists;
                                        break;
                                    case 'd':
                                        if (strcmp(&(chars[5]), "ontists") == 0)
                                            return Value_endodontists;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "raving") == 0)
                                return Value_engraving;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ertainmentlaw") == 0)
                                return Value_entertainmentlaw;
                            break;
                        case 'v':
                            if (strncmp(&(chars[3]), "iro", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[7]), "batement") == 0)
                                            return Value_enviroabatement;
                                        break;
                                    case 'n':
                                        if (strcmp(&(chars[7]), "mentaltesting") == 0)
                                            return Value_environmentaltesting;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    if (strcmp(&(chars[2]), "oticmassage") == 0)
                        return Value_eroticmassage;
                    break;
                case 's':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "apegames") == 0)
                                return Value_escapegames;
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strncmp(&(chars[4]), "te", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'l':
                                                if (strcmp(&(chars[7]), "iquidation") == 0)
                                                    return Value_estateliquidation;
                                                break;
                                            case 'p':
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 'h':
                                                        if (strcmp(&(chars[8]), "otography") == 0)
                                                            return Value_estatephotography;
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(chars[8]), "anning") == 0)
                                                            return Value_estateplanning;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'h':
                                    if (strcmp(&(chars[4]), "eticians") == 0)
                                        return Value_estheticians;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 't':
                    if (strncmp(&(chars[2]), "h", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'i':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "grocery") == 0)
                                            return Value_ethicgrocery;
                                        break;
                                    case 'o':
                                        if (strcmp(&(chars[5]), "pian") == 0)
                                            return Value_ethiopian;
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'n':
                                if (strncmp(&(chars[4]), "ic", 2) == 0)
                                  {
                                    switch ((unsigned char)(chars[6]))
                                      {
                                        case 'g':
                                            if (strcmp(&(chars[7]), "rocery") == 0)
                                                return Value_ethnicgrocery;
                                            break;
                                        case 'm':
                                            if (strcmp(&(chars[7]), "arkets") == 0)
                                                return Value_ethnicmarkets;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'v':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "hargingstations") == 0)
                                return Value_evchargingstations;
                            break;
                        case 'e':
                            if (strncmp(&(chars[3]), "nt", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'p':
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'h':
                                                if (strcmp(&(chars[7]), "otography") == 0)
                                                    return Value_eventphotography;
                                                break;
                                            case 'l':
                                                if (strcmp(&(chars[7]), "anning") == 0)
                                                    return Value_eventplanning;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[6]), "ervices") == 0)
                                            return Value_eventservices;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'x':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "avationservices") == 0)
                                return Value_excavationservices;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "eriences") == 0)
                                return Value_experiences;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    if (strncmp(&(chars[2]), "e", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'b':
                                if (strcmp(&(chars[4]), "rowservices") == 0)
                                    return Value_eyebrowservices;
                                break;
                            case 'l':
                                if (strcmp(&(chars[4]), "ashservice") == 0)
                                    return Value_eyelashservice;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'f':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "ricstores") == 0)
                                return Value_fabricstores;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "epainting") == 0)
                                return Value_facepainting;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "afel") == 0)
                                return Value_falafel;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "ilydr") == 0)
                                return Value_familydr;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'q':
                                                    if (strcmp(&(chars[6]), "uipmentrepair") == 0)
                                                        return Value_farmequipmentrepair;
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(chars[6]), "smarket") == 0)
                                                        return Value_farmersmarket;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ngequipment") == 0)
                                                return Value_farmingequipment;
                                            break;
                                        case 's':
                                            if (chars[5] == 0)
                                                return Value_farms;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "iers") == 0)
                                        return Value_farriers;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'h':
                                    if (strcmp(&(chars[4]), "ion") == 0)
                                        return Value_fashion;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "l") == 0)
                                        return Value_fasil;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "sgates") == 0)
                                                return Value_fencesgates;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ng") == 0)
                                                return Value_fencing;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(chars[4]), "shui") == 0)
                                        return Value_fengshui;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'r':
                                    if (strcmp(&(chars[4]), "ies") == 0)
                                        return Value_ferries;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ility") == 0)
                                        return Value_fertility;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "tivals") == 0)
                                return Value_festivals;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'l':
                            if (strcmp(&(chars[3]), "ipino") == 0)
                                return Value_filipino;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strncmp(&(chars[4]), "ncial", 5) == 0)
                                      {
                                        switch ((unsigned char)(chars[9]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[10]), "dvising") == 0)
                                                    return Value_financialadvising;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[10]), "ervices") == 0)
                                                    return Value_financialservices;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(chars[4]), "erprinting") == 0)
                                        return Value_fingerprinting;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[5]), "rmtraining") == 0)
                                                return Value_firearmtraining;
                                            break;
                                        case 'd':
                                            if (strcmp(&(chars[5]), "epartments") == 0)
                                                return Value_firedepartments;
                                            break;
                                        case 'p':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'l':
                                                    if (strcmp(&(chars[6]), "ace") == 0)
                                                        return Value_fireplace;
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(chars[6]), "otection") == 0)
                                                        return Value_fireprotection;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'w':
                                            if (strncmp(&(chars[5]), "o", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'o':
                                                        if (strcmp(&(chars[7]), "d") == 0)
                                                            return Value_firewood;
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(chars[7]), "ks") == 0)
                                                            return Value_fireworks;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "taidclasses") == 0)
                                        return Value_firstaidclasses;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "hbroetchen") == 0)
                                        return Value_fischbroetchen;
                                    break;
                                case 'h':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ng") == 0)
                                                return Value_fishing;
                                            break;
                                        case 'm':
                                            if (strcmp(&(chars[5]), "onger") == 0)
                                                return Value_fishmonger;
                                            break;
                                        case 'n':
                                            if (strcmp(&(chars[5]), "chips") == 0)
                                                return Value_fishnchips;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "ness", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 0:
                                        return Value_fitness;
                                    case 'e':
                                        if (strcmp(&(chars[8]), "quipment") == 0)
                                            return Value_fitnessequipment;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "tbread") == 0)
                                return Value_flatbread;
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "markets") == 0)
                                        return Value_fleamarkets;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "ish") == 0)
                                        return Value_flemish;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ghtinstruction") == 0)
                                return Value_flightinstruction;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "tspa") == 0)
                                        return Value_floatspa;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "ring") == 0)
                                        return Value_flooring;
                                    break;
                                case 'r':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[5]), "ldesigners") == 0)
                                                return Value_floraldesigners;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[5]), "sts") == 0)
                                                return Value_florists;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'w':
                                    if (strncmp(&(chars[4]), "ers", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 0:
                                                return Value_flowers;
                                            case 'o':
                                                if (strcmp(&(chars[8]), "nly") == 0)
                                                    return Value_flowersonly;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            if (strcmp(&(chars[3]), "boarding") == 0)
                                return Value_flyboarding;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'n':
                            if (strcmp(&(chars[3]), "due") == 0)
                                return Value_fondue;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 0:
                                            return Value_food;
                                        case '_':
                                            if (strcmp(&(chars[5]), "court") == 0)
                                                return Value_food_court;
                                            break;
                                        case 'b':
                                            if (strcmp(&(chars[5]), "anks") == 0)
                                                return Value_foodbanks;
                                            break;
                                        case 'd':
                                            if (strcmp(&(chars[5]), "eliveryservices") == 0)
                                                return Value_fooddeliveryservices;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'a':
                                                    if (strcmp(&(chars[6]), "fety") == 0)
                                                        return Value_foodsafety;
                                                    break;
                                                case 't':
                                                    if (strcmp(&(chars[6]), "ands") == 0)
                                                        return Value_foodstands;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'o':
                                                    if (strcmp(&(chars[6]), "urs") == 0)
                                                        return Value_foodtours;
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(chars[6]), "ucks") == 0)
                                                        return Value_foodtrucks;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ball") == 0)
                                        return Value_football;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "stry") == 0)
                                        return Value_forestry;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "alwear") == 0)
                                        return Value_formalwear;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "ndationrepair") == 0)
                                return Value_foundationrepair;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    if (strcmp(&(chars[4]), "ing") == 0)
                                        return Value_framing;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "conian") == 0)
                                        return Value_franconian;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "diving") == 0)
                                        return Value_freediving;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "ch") == 0)
                                        return Value_french;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "terie") == 0)
                                return Value_friterie;
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "zenfood") == 0)
                                return Value_frozenfood;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            if (strcmp(&(chars[3]), "ldocks") == 0)
                                return Value_fueldocks;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ralservices") == 0)
                                        return Value_funeralservices;
                                    break;
                                case 'f':
                                    if (strcmp(&(chars[4]), "air") == 0)
                                        return Value_funfair;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "lothing") == 0)
                                        return Value_furclothing;
                                    break;
                                case 'n':
                                    if (strncmp(&(chars[4]), "iture", 5) == 0)
                                      {
                                        switch ((unsigned char)(chars[9]))
                                          {
                                            case 0:
                                                return Value_furniture;
                                            case 'a':
                                                if (strcmp(&(chars[10]), "ssembly") == 0)
                                                    return Value_furnitureassembly;
                                                break;
                                            case 'r':
                                                if (strcmp(&(chars[10]), "epair") == 0)
                                                    return Value_furniturerepair;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'z':
                            if (strcmp(&(chars[3]), "hou") == 0)
                                return Value_fuzhou;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'g':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "cian") == 0)
                                        return Value_galician;
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "eries") == 0)
                                        return Value_galleries;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'm':
                                        if (strcmp(&(chars[5]), "eat") == 0)
                                            return Value_gamemeat;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "ruckrental") == 0)
                                            return Value_gametruckrental;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "ge_door_services") == 0)
                                        return Value_garage_door_services;
                                    break;
                                case 'd':
                                    if (strncmp(&(chars[4]), "en", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[7]), "rs") == 0)
                                                    return Value_gardeners;
                                                break;
                                            case 'i':
                                                if (strcmp(&(chars[7]), "ng") == 0)
                                                    return Value_gardening;
                                                break;
                                            case 's':
                                                if (chars[7] == 0)
                                                    return Value_gardens;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 's':
                                    if (strcmp(&(chars[4]), "tations") == 0)
                                        return Value_gasstations;
                                    break;
                                case 't':
                                    if (strncmp(&(chars[4]), "ro", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[7]), "nterologist") == 0)
                                                    return Value_gastroenterologist;
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[7]), "ubs") == 0)
                                                    return Value_gastropubs;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            if (strcmp(&(chars[3]), "bars") == 0)
                                return Value_gaybars;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'l':
                            if (strcmp(&(chars[3]), "ato") == 0)
                                return Value_gelato;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "stonesandminerals") == 0)
                                return Value_gemstonesandminerals;
                            break;
                        case 'n':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'r':
                                        if (strncmp(&(chars[5]), "a", 1) == 0)
                                          {
                                            switch ((unsigned char)(chars[6]))
                                              {
                                                case 'l':
                                                    switch ((unsigned char)(chars[7]))
                                                      {
                                                        case '_':
                                                            if (strcmp(&(chars[8]), "litigation") == 0)
                                                                return Value_general_litigation;
                                                            break;
                                                        case 'd':
                                                            if (strcmp(&(chars[8]), "entistry") == 0)
                                                                return Value_generaldentistry;
                                                            break;
                                                        case 'f':
                                                            if (strcmp(&(chars[8]), "estivals") == 0)
                                                                return Value_generalfestivals;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(chars[7]), "orinstallrepair") == 0)
                                                        return Value_generatorinstallrepair;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "icists") == 0)
                                            return Value_geneticists;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "rgian") == 0)
                                return Value_georgian;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    if (strcmp(&(chars[4]), "an") == 0)
                                        return Value_german;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "ntologist") == 0)
                                        return Value_gerontologist;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    if (strcmp(&(chars[2]), "ftshops") == 0)
                        return Value_giftshops;
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strncmp(&(chars[3]), "ss", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[6]), "ndmirrors") == 0)
                                            return Value_glassandmirrors;
                                        break;
                                    case 'b':
                                        if (strcmp(&(chars[6]), "lowing") == 0)
                                            return Value_glassblowing;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ding") == 0)
                                return Value_gliding;
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'h':
                                    if (strcmp(&(chars[4]), "wein") == 0)
                                        return Value_gluhwein;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "en_free") == 0)
                                        return Value_gluten_free;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'k':
                            if (strcmp(&(chars[3]), "arts") == 0)
                                return Value_gokarts;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "buyers") == 0)
                                        return Value_goldbuyers;
                                    break;
                                case 'f':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 0:
                                            return Value_golf;
                                        case 'c':
                                            if (strncmp(&(chars[5]), "art", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[8]))
                                                  {
                                                    case 'd':
                                                        if (strcmp(&(chars[9]), "ealers") == 0)
                                                            return Value_golfcartdealers;
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(chars[9]), "entals") == 0)
                                                            return Value_golfcartrentals;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'e':
                                            if (strcmp(&(chars[5]), "quipment") == 0)
                                                return Value_golfequipment;
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[5]), "essons") == 0)
                                                return Value_golflessons;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "hops") == 0)
                                                return Value_golfshops;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "rmet") == 0)
                                return Value_gourmet;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "phicdesign") == 0)
                                return Value_graphicdesign;
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "ek") == 0)
                                return Value_greek;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "llingequipment") == 0)
                                return Value_grillingequipment;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "ery") == 0)
                                        return Value_grocery;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "mer") == 0)
                                        return Value_groomer;
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "tservices") == 0)
                                        return Value_groutservices;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "manian") == 0)
                                return Value_guamanian;
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "sthouses") == 0)
                                return Value_guesthouses;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "tarstores") == 0)
                                return Value_guitarstores;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case '_':
                                    if (strcmp(&(chars[4]), "ranges") == 0)
                                        return Value_gun_ranges;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case '_':
                                            if (strcmp(&(chars[5]), "and_ammo") == 0)
                                                return Value_guns_and_ammo;
                                            break;
                                        case 'm':
                                            if (strcmp(&(chars[5]), "ith") == 0)
                                                return Value_gunsmith;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "terservices") == 0)
                                return Value_gutterservices;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    if (strncmp(&(chars[2]), "m", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'n':
                                if (strcmp(&(chars[4]), "astics") == 0)
                                    return Value_gymnastics;
                                break;
                            case 's':
                                if (chars[4] == 0)
                                    return Value_gyms;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'h':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "ilitativeservices") == 0)
                                return Value_habilitativeservices;
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "an") == 0)
                                        return Value_hainan;
                                    break;
                                case 'r':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 0:
                                            return Value_hair;
                                        case '_':
                                            if (strcmp(&(chars[5]), "extensions") == 0)
                                                return Value_hair_extensions;
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[5]), "oss") == 0)
                                                return Value_hairloss;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[5]), "emoval") == 0)
                                                return Value_hairremoval;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "tylists") == 0)
                                                return Value_hairstylists;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ian") == 0)
                                        return Value_haitian;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "ka") == 0)
                                return Value_hakka;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "l") == 0)
                                        return Value_halal;
                                    break;
                                case 'f':
                                    if (strcmp(&(chars[4]), "wayhouses") == 0)
                                        return Value_halfwayhouses;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "therapy") == 0)
                                        return Value_halotherapy;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(chars[5]), "all") == 0)
                                                return Value_handball;
                                            break;
                                        case 'y':
                                            if (strcmp(&(chars[5]), "man") == 0)
                                                return Value_handyman;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(chars[4]), "gliding") == 0)
                                        return Value_hanggliding;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "dware") == 0)
                                return Value_hardware;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "s") == 0)
                                return Value_hats;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "ntedhouses") == 0)
                                return Value_hauntedhouses;
                            break;
                        case 'w':
                            if (strcmp(&(chars[3]), "aiian") == 0)
                                return Value_hawaiian;
                            break;
                        case 'z':
                            if (strcmp(&(chars[3]), "ardouswastedisposal") == 0)
                                return Value_hazardouswastedisposal;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "shops") == 0)
                                        return Value_headshops;
                                    break;
                                case 'l':
                                    if (strncmp(&(chars[4]), "th", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 0:
                                                return Value_health;
                                            case 'c':
                                                if (strcmp(&(chars[7]), "oach") == 0)
                                                    return Value_healthcoach;
                                                break;
                                            case 'i':
                                                if (strcmp(&(chars[7]), "nsurance") == 0)
                                                    return Value_healthinsurance;
                                                break;
                                            case 'm':
                                                if (strcmp(&(chars[7]), "arkets") == 0)
                                                    return Value_healthmarkets;
                                                break;
                                            case 'r':
                                                if (strcmp(&(chars[7]), "etreats") == 0)
                                                    return Value_healthretreats;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[7]), "rainers") == 0)
                                                    return Value_healthtrainers;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strncmp(&(chars[4]), "ing", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[8]), "aids") == 0)
                                                    return Value_hearing_aids;
                                                break;
                                            case 'a':
                                                if (strcmp(&(chars[8]), "idproviders") == 0)
                                                    return Value_hearingaidproviders;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "naartists") == 0)
                                return Value_hennaartists;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "atologists") == 0)
                                return Value_hepatologists;
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "b", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[5]), "lshops") == 0)
                                            return Value_herbalshops;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "andspices") == 0)
                                            return Value_herbsandspices;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "sian") == 0)
                                return Value_hessian;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'f':
                            if (strcmp(&(chars[3]), "i") == 0)
                                return Value_hifi;
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "hschools") == 0)
                                return Value_highschools;
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "ing") == 0)
                                return Value_hiking;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "alayan") == 0)
                                return Value_himalayan;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "du_temples") == 0)
                                return Value_hindu_temples;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "toricaltours") == 0)
                                return Value_historicaltours;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'k':
                    if (strcmp(&(chars[2]), "cafe") == 0)
                        return Value_hkcafe;
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "byshops") == 0)
                                return Value_hobbyshops;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "keyequipment") == 0)
                                return Value_hockeyequipment;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "idaydecorations") == 0)
                                return Value_holidaydecorations;
                            break;
                        case 'm':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case '_':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[6]), "nspectors") == 0)
                                                    return Value_home_inspectors;
                                                break;
                                            case 'o':
                                                if (strcmp(&(chars[6]), "rganization") == 0)
                                                    return Value_home_organization;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'a':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'n':
                                                if (strcmp(&(chars[6]), "dgarden") == 0)
                                                    return Value_homeandgarden;
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[6]), "pliancerepair") == 0)
                                                    return Value_homeappliancerepair;
                                                break;
                                            case 'u':
                                                if (strcmp(&(chars[6]), "tomation") == 0)
                                                    return Value_homeautomation;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'c':
                                        if (strcmp(&(chars[5]), "leaning") == 0)
                                            return Value_homecleaning;
                                        break;
                                    case 'd':
                                        if (strncmp(&(chars[5]), "e", 1) == 0)
                                          {
                                            switch ((unsigned char)(chars[6]))
                                              {
                                                case 'c':
                                                    if (strcmp(&(chars[7]), "or") == 0)
                                                        return Value_homedecor;
                                                    break;
                                                case 'v':
                                                    if (strcmp(&(chars[7]), "elopers") == 0)
                                                        return Value_homedevelopers;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'e':
                                        if (strcmp(&(chars[5]), "nergyauditors") == 0)
                                            return Value_homeenergyauditors;
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[5]), "ealthcare") == 0)
                                            return Value_homehealthcare;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "nsurance") == 0)
                                            return Value_homeinsurance;
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[5]), "essshelters") == 0)
                                            return Value_homelessshelters;
                                        break;
                                    case 'n':
                                        if (strcmp(&(chars[5]), "etworkinstall") == 0)
                                            return Value_homenetworkinstall;
                                        break;
                                    case 'o':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'p':
                                                if (strcmp(&(chars[6]), "athic") == 0)
                                                    return Value_homeopathic;
                                                break;
                                            case 'w':
                                                if (strcmp(&(chars[6]), "nerassociation") == 0)
                                                    return Value_homeownerassociation;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 's':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[6]), "rvices") == 0)
                                                    return Value_homeservices;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[6]), "aging") == 0)
                                                    return Value_homestaging;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "heatreinstallation") == 0)
                                            return Value_hometheatreinstallation;
                                        break;
                                    case 'w':
                                        if (strcmp(&(chars[5]), "indowtinting") == 0)
                                            return Value_homewindowtinting;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "uran") == 0)
                                        return Value_honduran;
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "y") == 0)
                                        return Value_honey;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "kah_bars") == 0)
                                return Value_hookah_bars;
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "se", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[6]), "boarding") == 0)
                                            return Value_horse_boarding;
                                        break;
                                    case 'b':
                                        if (strcmp(&(chars[6]), "ackriding") == 0)
                                            return Value_horsebackriding;
                                        break;
                                    case 'q':
                                        if (strcmp(&(chars[6]), "uipment") == 0)
                                            return Value_horsequipment;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[6]), "acing") == 0)
                                            return Value_horseracing;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'p':
                                    if (strncmp(&(chars[4]), "i", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[6]), "e") == 0)
                                                    return Value_hospice;
                                                break;
                                            case 't':
                                                if (strncmp(&(chars[6]), "al", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[8]))
                                                      {
                                                        case 'i':
                                                            if (strcmp(&(chars[9]), "sts") == 0)
                                                                return Value_hospitalists;
                                                            break;
                                                        case 's':
                                                            if (chars[9] == 0)
                                                                return Value_hospitals;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "els") == 0)
                                        return Value_hostels;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case '_':
                                    if (strcmp(&(chars[4]), "air_balloons") == 0)
                                        return Value_hot_air_balloons;
                                    break;
                                case 'd':
                                    if (strncmp(&(chars[4]), "og", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 0:
                                                return Value_hotdog;
                                            case 's':
                                                if (chars[7] == 0)
                                                    return Value_hotdogs;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strncmp(&(chars[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[6]), "bar") == 0)
                                                    return Value_hotel_bar;
                                                break;
                                            case 's':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 0:
                                                        return Value_hotels;
                                                    case 't':
                                                        if (strcmp(&(chars[7]), "ravel") == 0)
                                                            return Value_hotelstravel;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "ot") == 0)
                                        return Value_hotpot;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "prings") == 0)
                                        return Value_hotsprings;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ubandpool") == 0)
                                        return Value_hottubandpool;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(chars[5]), "sitters") == 0)
                                            return Value_housesitters;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "ngcooperatives") == 0)
                                            return Value_housingcooperatives;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strncmp(&(chars[2]), "n", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'a':
                                if (strcmp(&(chars[4]), "n") == 0)
                                    return Value_hunan;
                                break;
                            case 'g':
                                if (strcmp(&(chars[4]), "arian") == 0)
                                    return Value_hungarian;
                                break;
                            case 't':
                                if (strcmp(&(chars[4]), "ingfishingsupplies") == 0)
                                    return Value_huntingfishingsupplies;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'v':
                    if (strcmp(&(chars[2]), "ac") == 0)
                        return Value_hvac;
                    break;
                case 'y':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "ridcarrepair") == 0)
                                return Value_hybridcarrepair;
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "ro", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'j':
                                        if (strcmp(&(chars[6]), "etting") == 0)
                                            return Value_hydrojetting;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[6]), "onics") == 0)
                                            return Value_hydroponics;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[6]), "herapy") == 0)
                                            return Value_hydrotherapy;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "nosis") == 0)
                                return Value_hypnosis;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'i':
            switch ((unsigned char)(chars[1]))
              {
                case 'b':
                    if (strcmp(&(chars[2]), "erian") == 0)
                        return Value_iberian;
                    break;
                case 'c':
                    if (strncmp(&(chars[2]), "e", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'c':
                                if (strcmp(&(chars[4]), "ream") == 0)
                                    return Value_icecream;
                                break;
                            case 'd':
                                if (strcmp(&(chars[4]), "elivery") == 0)
                                    return Value_icedelivery;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'm':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'm':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "grationlawyers") == 0)
                                        return Value_immigrationlawyers;
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "nodermatologists") == 0)
                                        return Value_immunodermatologists;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "ortedfood") == 0)
                                return Value_importedfood;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'n':
                                            if (strcmp(&(chars[5]), "esian") == 0)
                                                return Value_indonesian;
                                            break;
                                        case 'o':
                                            if (strncmp(&(chars[5]), "r", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case '_':
                                                        if (strcmp(&(chars[7]), "playcenter") == 0)
                                                            return Value_indoor_playcenter;
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(chars[7]), "andscaping") == 0)
                                                            return Value_indoorlandscaping;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "ak") == 0)
                                        return Value_indpak;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'f':
                            if (strcmp(&(chars[3]), "ectiousdisease") == 0)
                                return Value_infectiousdisease;
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 't':
                                    if (strcmp(&(chars[4]), "allmentloans") == 0)
                                        return Value_installmentloans;
                                    break;
                                case 'u':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'l':
                                            if (strcmp(&(chars[5]), "ationinstallation") == 0)
                                                return Value_insulationinstallation;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[5]), "ance") == 0)
                                                return Value_insurance;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strncmp(&(chars[4]), "r", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[6]), "ordesign") == 0)
                                                    return Value_interiordesign;
                                                break;
                                            case 'l':
                                                if (strcmp(&(chars[6]), "ocksystems") == 0)
                                                    return Value_interlocksystems;
                                                break;
                                            case 'n':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'a':
                                                        switch ((unsigned char)(chars[7]))
                                                          {
                                                            case 'l':
                                                                if (strcmp(&(chars[8]), "med") == 0)
                                                                    return Value_internalmed;
                                                                break;
                                                            case 't':
                                                                if (strcmp(&(chars[8]), "ional") == 0)
                                                                    return Value_international;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'e':
                                                        if (strcmp(&(chars[7]), "tcafe") == 0)
                                                            return Value_internetcafe;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'v':
                                                if (strcmp(&(chars[6]), "altraininggyms") == 0)
                                                    return Value_intervaltraininggyms;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "grocery") == 0)
                                        return Value_intlgrocery;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "esting") == 0)
                                return Value_investing;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    if (strcmp(&(chars[2]), "law") == 0)
                        return Value_iplaw;
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strncmp(&(chars[3]), "sh", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 0:
                                        return Value_irish;
                                    case '_':
                                        if (strcmp(&(chars[6]), "pubs") == 0)
                                            return Value_irish_pubs;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "igation") == 0)
                                return Value_irrigation;
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'l':
                            if (strcmp(&(chars[3]), "and_pub") == 0)
                                return Value_island_pub;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "s") == 0)
                                return Value_isps;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "aeli") == 0)
                                return Value_israeli;
                            break;
                        default:
                            break;
                      }
                    break;
                case 't':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "lian") == 0)
                                return Value_italian;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "ervices") == 0)
                                return Value_itservices;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    if (strcmp(&(chars[2]), "hydration") == 0)
                        return Value_ivhydration;
                    break;
                case 'z':
                    if (strcmp(&(chars[2]), "akaya") == 0)
                        return Value_izakaya;
                    break;
                default:
                    break;
              }
            break;
        case 'j':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "lsandprisons") == 0)
                                return Value_jailsandprisons;
                            break;
                        case 'p':
                            if (strncmp(&(chars[3]), "a", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "urry") == 0)
                                            return Value_japacurry;
                                        break;
                                    case 'n':
                                        if (strcmp(&(chars[5]), "ese") == 0)
                                            return Value_japanese;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'z':
                            if (strcmp(&(chars[3]), "zandblues") == 0)
                                return Value_jazzandblues;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 't':
                            if (strcmp(&(chars[3]), "skis") == 0)
                                return Value_jetskis;
                            break;
                        case 'w':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strncmp(&(chars[4]), "lry", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 0:
                                                return Value_jewelry;
                                            case 'r':
                                                if (strcmp(&(chars[8]), "epair") == 0)
                                                    return Value_jewelryrepair;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "sh") == 0)
                                        return Value_jewish;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "cebars") == 0)
                                return Value_juicebars;
                            break;
                        case 'n':
                            if (strncmp(&(chars[3]), "k", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'r':
                                        if (strcmp(&(chars[5]), "emovalandhauling") == 0)
                                            return Value_junkremovalandhauling;
                                        break;
                                    case 'y':
                                        if (strcmp(&(chars[5]), "ards") == 0)
                                            return Value_junkyards;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'k':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    if (strncmp(&(chars[2]), "ra", 2) == 0)
                      {
                        switch ((unsigned char)(chars[4]))
                          {
                            case 'o':
                                if (strncmp(&(chars[5]), "ke", 2) == 0)
                                  {
                                    switch ((unsigned char)(chars[7]))
                                      {
                                        case 0:
                                            return Value_karaoke;
                                        case 'r':
                                            if (strcmp(&(chars[8]), "ental") == 0)
                                                return Value_karaokerental;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 't':
                                if (strcmp(&(chars[5]), "e") == 0)
                                    return Value_karate;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'e':
                    if (strcmp(&(chars[2]), "bab") == 0)
                        return Value_kebab;
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "kboxing") == 0)
                                return Value_kickboxing;
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[5]), "activities") == 0)
                                            return Value_kids_activities;
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[5]), "airsalons") == 0)
                                            return Value_kidshairsalons;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "sk") == 0)
                                return Value_kiosk;
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "hen", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[8]), "ndbath") == 0)
                                                    return Value_kitchenandbath;
                                                break;
                                            case 'i':
                                                if (strcmp(&(chars[8]), "ncubators") == 0)
                                                    return Value_kitchenincubators;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[8]), "upplies") == 0)
                                                    return Value_kitchensupplies;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "boarding") == 0)
                                        return Value_kiteboarding;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    if (strncmp(&(chars[2]), "i", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'f':
                                if (strcmp(&(chars[4]), "esharpening") == 0)
                                    return Value_knifesharpening;
                                break;
                            case 't':
                                if (strcmp(&(chars[4]), "tingsupplies") == 0)
                                    return Value_knittingsupplies;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'm':
                            if (strcmp(&(chars[3]), "bucha") == 0)
                                return Value_kombucha;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "ean") == 0)
                                return Value_korean;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "her") == 0)
                                return Value_kosher;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'l':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "oratorytesting") == 0)
                                return Value_laboratorytesting;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "tationservices") == 0)
                                return Value_lactationservices;
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "es") == 0)
                                return Value_lakes;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "enters") == 0)
                                        return Value_lancenters;
                                    break;
                                case 'd':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'm':
                                            if (strcmp(&(chars[5]), "arks") == 0)
                                                return Value_landmarks;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'c':
                                                    if (strncmp(&(chars[6]), "ap", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[8]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(chars[9]), "architects") == 0)
                                                                    return Value_landscapearchitects;
                                                                break;
                                                            case 'i':
                                                                if (strcmp(&(chars[9]), "ng") == 0)
                                                                    return Value_landscaping;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strcmp(&(chars[6]), "rveying") == 0)
                                                        return Value_landsurveying;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(chars[4]), "uage_schools") == 0)
                                        return Value_language_schools;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "tian") == 0)
                                return Value_laotian;
                            break;
                        case 's':
                            if (strncmp(&(chars[3]), "er", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[6]), "hair_removal") == 0)
                                            return Value_laser_hair_removal;
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[6]), "asikeyes") == 0)
                                            return Value_laserlasikeyes;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[6]), "ag") == 0)
                                            return Value_lasertag;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "in") == 0)
                                return Value_latin;
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "ndr", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'o':
                                        if (strcmp(&(chars[7]), "mat") == 0)
                                            return Value_laundromat;
                                        break;
                                    case 'y':
                                        if (strcmp(&(chars[7]), "services") == 0)
                                            return Value_laundryservices;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'w':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case '_':
                                            if (strcmp(&(chars[5]), "bowling") == 0)
                                                return Value_lawn_bowling;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "ervices") == 0)
                                                return Value_lawnservices;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'y':
                                    if (strcmp(&(chars[4]), "ers") == 0)
                                        return Value_lawyers;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "ther") == 0)
                                return Value_leather;
                            break;
                        case 'b':
                            if (strcmp(&(chars[3]), "anese") == 0)
                                return Value_lebanese;
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "alservices") == 0)
                                return Value_legalservices;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "raries") == 0)
                                return Value_libraries;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "eservices") == 0)
                                return Value_liceservices;
                            break;
                        case 'f':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "oach") == 0)
                                            return Value_lifecoach;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "nsurance") == 0)
                                            return Value_lifeinsurance;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'g':
                            if (strncmp(&(chars[3]), "hting", 5) == 0)
                              {
                                switch ((unsigned char)(chars[8]))
                                  {
                                    case 0:
                                        return Value_lighting;
                                    case 's':
                                        if (strcmp(&(chars[9]), "tores") == 0)
                                            return Value_lightingstores;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "os") == 0)
                                return Value_limos;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ns") == 0)
                                        return Value_linens;
                                    break;
                                case 'g':
                                    if (strcmp(&(chars[4]), "erie") == 0)
                                        return Value_lingerie;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            if (strcmp(&(chars[3]), "estocksupply") == 0)
                                return Value_livestocksupply;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strncmp(&(chars[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'f':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'i':
                                                        if (strcmp(&(chars[7]), "shstores") == 0)
                                                            return Value_localfishstores;
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(chars[7]), "avor") == 0)
                                                            return Value_localflavor;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "ervices") == 0)
                                                    return Value_localservices;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'k':
                                    if (strcmp(&(chars[4]), "smiths") == 0)
                                        return Value_locksmiths;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "nges") == 0)
                                return Value_lounges;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strncmp(&(chars[2]), "ggage", 5) == 0)
                      {
                        switch ((unsigned char)(chars[7]))
                          {
                            case 0:
                                return Value_luggage;
                            case 's':
                                if (strcmp(&(chars[8]), "torage") == 0)
                                    return Value_luggagestorage;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'y':
                    if (strcmp(&(chars[2]), "onnais") == 0)
                        return Value_lyonnais;
                    break;
                default:
                    break;
              }
            break;
        case 'm':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "rons") == 0)
                                        return Value_macarons;
                                    break;
                                case 'h':
                                    if (strncmp(&(chars[4]), "ine", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'r':
                                                if (strcmp(&(chars[8]), "ental") == 0)
                                                    return Value_machinerental;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[8]), "hops") == 0)
                                                    return Value_machineshops;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "cians") == 0)
                                        return Value_magicians;
                                    break;
                                case 's':
                                    if (chars[4] == 0)
                                        return Value_mags;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "lboxcenters") == 0)
                                return Value_mailboxcenters;
                            break;
                        case 'k':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'r':
                                        if (strcmp(&(chars[5]), "spaces") == 0)
                                            return Value_makerspaces;
                                        break;
                                    case 'u':
                                        if (strcmp(&(chars[5]), "partists") == 0)
                                            return Value_makeupartists;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "aysian") == 0)
                                return Value_malaysian;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "hingbands") == 0)
                                        return Value_marchingbands;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "nas") == 0)
                                        return Value_marinas;
                                    break;
                                case 'k':
                                    if (strncmp(&(chars[4]), "et", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[7]), "ng") == 0)
                                                    return Value_marketing;
                                                break;
                                            case 's':
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 0:
                                                        return Value_markets;
                                                    case 't':
                                                        if (strcmp(&(chars[8]), "alls") == 0)
                                                            return Value_marketstalls;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ialarts") == 0)
                                        return Value_martialarts;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    if (strcmp(&(chars[4]), "nry_concrete") == 0)
                                        return Value_masonry_concrete;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strncmp(&(chars[5]), "ge", 2) == 0)
                                              {
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 0:
                                                        return Value_massage;
                                                    case '_':
                                                        switch ((unsigned char)(chars[8]))
                                                          {
                                                            case 's':
                                                                if (strcmp(&(chars[9]), "chools") == 0)
                                                                    return Value_massage_schools;
                                                                break;
                                                            case 't':
                                                                if (strcmp(&(chars[9]), "herapy") == 0)
                                                                    return Value_massage_therapy;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'm':
                                            if (strcmp(&(chars[5]), "edia") == 0)
                                                return Value_massmedia;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "hmakers") == 0)
                                        return Value_matchmakers;
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "rnity") == 0)
                                        return Value_maternity;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "resses") == 0)
                                        return Value_mattresses;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "ritius") == 0)
                                return Value_mauritius;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strncmp(&(chars[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'b':
                                        if (strcmp(&(chars[5]), "alls") == 0)
                                            return Value_meatballs;
                                        break;
                                    case 's':
                                        if (chars[5] == 0)
                                            return Value_meats;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "enters") == 0)
                                        return Value_medcenters;
                                    break;
                                case 'i':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 0:
                                                    return Value_media;
                                                case 't':
                                                    if (strcmp(&(chars[6]), "ors") == 0)
                                                        return Value_mediators;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'c':
                                            if (strncmp(&(chars[5]), "al", 2) == 0)
                                              {
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 'f':
                                                        if (strcmp(&(chars[8]), "oot") == 0)
                                                            return Value_medicalfoot;
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(chars[8]), "aw") == 0)
                                                            return Value_medicallaw;
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[8]))
                                                          {
                                                            case 'p':
                                                                if (strcmp(&(chars[9]), "a") == 0)
                                                                    return Value_medicalspa;
                                                                break;
                                                            case 'u':
                                                                if (strcmp(&(chars[9]), "pplies") == 0)
                                                                    return Value_medicalsupplies;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 't':
                                                        if (strcmp(&(chars[8]), "ransportation") == 0)
                                                            return Value_medicaltransportation;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'a':
                                                    if (strcmp(&(chars[6]), "tioncenters") == 0)
                                                        return Value_meditationcenters;
                                                    break;
                                                case 'e':
                                                    if (strcmp(&(chars[6]), "rranean") == 0)
                                                        return Value_mediterranean;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "orycare") == 0)
                                return Value_memorycare;
                            break;
                        case 'n':
                            if (strncmp(&(chars[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "loth") == 0)
                                            return Value_menscloth;
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[5]), "air") == 0)
                                            return Value_menshair;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strncmp(&(chars[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'd':
                                                if (strcmp(&(chars[6]), "etectorservices") == 0)
                                                    return Value_metaldetectorservices;
                                                break;
                                            case 'f':
                                                if (strcmp(&(chars[6]), "abricators") == 0)
                                                    return Value_metalfabricators;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "ostations") == 0)
                                        return Value_metrostations;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'x':
                            if (strcmp(&(chars[3]), "ican") == 0)
                                return Value_mexican;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "astern") == 0)
                                        return Value_mideastern;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "ives") == 0)
                                        return Value_midwives;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "tarysurplus") == 0)
                                        return Value_militarysurplus;
                                    break;
                                case 'k':
                                    if (strcmp(&(chars[4]), "shakebars") == 0)
                                        return Value_milkshakebars;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "i_golf") == 0)
                                return Value_mini_golf;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "tingsystemservices") == 0)
                                return Value_mistingsystemservices;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strncmp(&(chars[3]), "il", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[7]), "home_repair") == 0)
                                                    return Value_mobile_home_repair;
                                                break;
                                            case 'd':
                                                if (strcmp(&(chars[7]), "entrepair") == 0)
                                                    return Value_mobiledentrepair;
                                                break;
                                            case 'h':
                                                if (strcmp(&(chars[7]), "omes") == 0)
                                                    return Value_mobilehomes;
                                                break;
                                            case 'p':
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(chars[8]), "rks") == 0)
                                                            return Value_mobileparks;
                                                        break;
                                                    case 'h':
                                                        if (strncmp(&(chars[8]), "one", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[11]))
                                                              {
                                                                case 'r':
                                                                    if (strcmp(&(chars[12]), "epair") == 0)
                                                                        return Value_mobilephonerepair;
                                                                    break;
                                                                case 's':
                                                                    if (chars[12] == 0)
                                                                        return Value_mobilephones;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[6]), "tyequipment") == 0)
                                            return Value_mobilityequipment;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "ern_", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[8]), "ustralian") == 0)
                                            return Value_modern_australian;
                                        break;
                                    case 'e':
                                        if (strcmp(&(chars[8]), "uropean") == 0)
                                            return Value_modern_european;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'h':
                            if (strcmp(&(chars[3]), "els") == 0)
                                return Value_mohels;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'g':
                                    if (strcmp(&(chars[4]), "olian") == 0)
                                        return Value_mongolian;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "essori") == 0)
                                        return Value_montessori;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    if (strcmp(&(chars[4]), "ccan") == 0)
                                        return Value_moroccan;
                                    break;
                                case 't':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'g':
                                            if (strncmp(&(chars[5]), "age", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[8]))
                                                  {
                                                    case 'b':
                                                        if (strcmp(&(chars[9]), "rokers") == 0)
                                                            return Value_mortgagebrokers;
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(chars[9]), "enders") == 0)
                                                            return Value_mortgagelenders;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'u':
                                            if (strcmp(&(chars[5]), "aryservices") == 0)
                                                return Value_mortuaryservices;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "ques") == 0)
                                return Value_mosques;
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "o", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'd':
                                        if (strcmp(&(chars[5]), "ealers") == 0)
                                            return Value_motodealers;
                                        break;
                                    case 'r':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'c':
                                                if (strncmp(&(chars[6]), "ycl", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[9]))
                                                      {
                                                        case 'e':
                                                            switch ((unsigned char)(chars[10]))
                                                              {
                                                                case '_':
                                                                    if (strcmp(&(chars[11]), "rental") == 0)
                                                                        return Value_motorcycle_rental;
                                                                    break;
                                                                case 'd':
                                                                    if (strcmp(&(chars[11]), "ealers") == 0)
                                                                        return Value_motorcycledealers;
                                                                    break;
                                                                case 'r':
                                                                    if (strcmp(&(chars[11]), "epair") == 0)
                                                                        return Value_motorcyclerepair;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'i':
                                                            if (strcmp(&(chars[10]), "nggear") == 0)
                                                                return Value_motorcyclinggear;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'e':
                                                if (strcmp(&(chars[6]), "pairs") == 0)
                                                    return Value_motorepairs;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "ntain", 5) == 0)
                              {
                                switch ((unsigned char)(chars[8]))
                                  {
                                    case 'b':
                                        if (strcmp(&(chars[9]), "iking") == 0)
                                            return Value_mountainbiking;
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[9]), "uts") == 0)
                                            return Value_mountainhuts;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "rs") == 0)
                                        return Value_movers;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "etheaters") == 0)
                                        return Value_movietheaters;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "ythai") == 0)
                                return Value_muaythai;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "icipality") == 0)
                                return Value_municipality;
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ums") == 0)
                                        return Value_museums;
                                    break;
                                case 'i':
                                    if (strncmp(&(chars[4]), "c", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[6]), "linstrumentsandteachers") == 0)
                                                    return Value_musicalinstrumentsandteachers;
                                                break;
                                            case 'i':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(chars[7]), "ns") == 0)
                                                            return Value_musicians;
                                                        break;
                                                    case 'n':
                                                        if (strcmp(&(chars[7]), "strumentservices") == 0)
                                                            return Value_musicinstrumentservices;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[6]), "roduction") == 0)
                                                    return Value_musicproduction;
                                                break;
                                            case 'v':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'e':
                                                        if (strcmp(&(chars[7]), "nues") == 0)
                                                            return Value_musicvenues;
                                                        break;
                                                    case 'i':
                                                        if (strcmp(&(chars[7]), "deo") == 0)
                                                            return Value_musicvideo;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    if (strcmp(&(chars[2]), "stics") == 0)
                        return Value_mystics;
                    break;
                default:
                    break;
              }
            break;
        case 'n':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'i':
                            if (strcmp(&(chars[3]), "ltechnicians") == 0)
                                return Value_nailtechnicians;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "nys") == 0)
                                return Value_nannys;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "oletana") == 0)
                                return Value_napoletana;
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "ur", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[6]), "lgassuppliers") == 0)
                                            return Value_naturalgassuppliers;
                                        break;
                                    case 'o':
                                        if (strcmp(&(chars[6]), "pathic") == 0)
                                            return Value_naturopathic;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'p':
                            if (strcmp(&(chars[3]), "hrologists") == 0)
                                return Value_nephrologists;
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "ro", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'l':
                                        if (strcmp(&(chars[6]), "ogist") == 0)
                                            return Value_neurologist;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[6]), "athologists") == 0)
                                            return Value_neuropathologists;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[6]), "ologists") == 0)
                                            return Value_neurotologists;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'w':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "merican") == 0)
                                        return Value_newamerican;
                                    break;
                                case 'c':
                                    if (strcmp(&(chars[4]), "anadian") == 0)
                                        return Value_newcanadian;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "exican") == 0)
                                        return Value_newmexican;
                                    break;
                                case 'z':
                                    if (strcmp(&(chars[4]), "ealand") == 0)
                                        return Value_newzealand;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "raguan") == 0)
                                        return Value_nicaraguan;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "is") == 0)
                                        return Value_nicois;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "htlife") == 0)
                                return Value_nightlife;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'n':
                            if (strcmp(&(chars[3]), "profit") == 0)
                                return Value_nonprofit;
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "dles") == 0)
                                return Value_noodles;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 't':
                                    if (strcmp(&(chars[4]), "herngerman") == 0)
                                        return Value_northerngerman;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "egian") == 0)
                                        return Value_norwegian;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "aries") == 0)
                                return Value_notaries;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "ist") == 0)
                                return Value_nudist;
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(chars[5]), "practitioner") == 0)
                                            return Value_nursepractitioner;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "ngschools") == 0)
                                            return Value_nursingschools;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "ritionists") == 0)
                                return Value_nutritionists;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'o':
            switch ((unsigned char)(chars[1]))
              {
                case 'b':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            if (strcmp(&(chars[3]), "yn") == 0)
                                return Value_obgyn;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "ervatories") == 0)
                                return Value_observatories;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'c':
                    if (strcmp(&(chars[2]), "cupationaltherapy") == 0)
                        return Value_occupationaltherapy;
                    break;
                case 'f':
                    if (strncmp(&(chars[2]), "fic", 3) == 0)
                      {
                        switch ((unsigned char)(chars[5]))
                          {
                            case 'e':
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[7]), "leaning") == 0)
                                            return Value_officecleaning;
                                        break;
                                    case 'e':
                                        if (strcmp(&(chars[7]), "quipment") == 0)
                                            return Value_officeequipment;
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'i':
                                if (strcmp(&(chars[6]), "ants") == 0)
                                    return Value_officiants;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'i':
                    if (strcmp(&(chars[2]), "lchange") == 0)
                        return Value_oilchange;
                    break;
                case 'l':
                    if (strcmp(&(chars[2]), "iveoil") == 0)
                        return Value_oliveoil;
                    break;
                case 'n':
                    if (strcmp(&(chars[2]), "cologist") == 0)
                        return Value_oncologist;
                    break;
                case 'p':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "sandwiches") == 0)
                                        return Value_opensandwiches;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "a") == 0)
                                        return Value_opera;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'h':
                                    if (strcmp(&(chars[4]), "amalogists") == 0)
                                        return Value_opthamalogists;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "cians") == 0)
                                        return Value_opticians;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "metrists") == 0)
                                        return Value_optometrists;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "lsurgeons") == 0)
                                return Value_oralsurgeons;
                            break;
                        case 'g':
                            if (strncmp(&(chars[3]), "an", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'd':
                                        if (strcmp(&(chars[6]), "onorservices") == 0)
                                            return Value_organdonorservices;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[6]), "c_stores") == 0)
                                            return Value_organic_stores;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ental") == 0)
                                return Value_oriental;
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "ho", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'd':
                                        if (strcmp(&(chars[6]), "ontists") == 0)
                                            return Value_orthodontists;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[6]), "edists") == 0)
                                            return Value_orthopedists;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[6]), "ics") == 0)
                                            return Value_orthotics;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strncmp(&(chars[2]), "teopath", 7) == 0)
                      {
                        switch ((unsigned char)(chars[9]))
                          {
                            case 'i':
                                if (strcmp(&(chars[10]), "cphysicians") == 0)
                                    return Value_osteopathicphysicians;
                                break;
                            case 's':
                                if (chars[10] == 0)
                                    return Value_osteopaths;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 't':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'h':
                            if (strcmp(&(chars[3]), "ersalons") == 0)
                                return Value_othersalons;
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "logists") == 0)
                                return Value_otologists;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strncmp(&(chars[2]), "t", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'd':
                                if (strncmp(&(chars[4]), "oor", 3) == 0)
                                  {
                                    switch ((unsigned char)(chars[7]))
                                      {
                                        case 'f':
                                            if (strcmp(&(chars[8]), "urniture") == 0)
                                                return Value_outdoorfurniture;
                                            break;
                                        case 'g':
                                            if (strcmp(&(chars[8]), "ear") == 0)
                                                return Value_outdoorgear;
                                            break;
                                        case 'm':
                                            if (strcmp(&(chars[8]), "ovies") == 0)
                                                return Value_outdoormovies;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'l':
                                if (strcmp(&(chars[4]), "et_stores") == 0)
                                    return Value_outlet_stores;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'x':
                    if (strcmp(&(chars[2]), "ygenbars") == 0)
                        return Value_oxygenbars;
                    break;
                default:
                    break;
              }
            break;
        case 'p':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strncmp(&(chars[3]), "kings", 5) == 0)
                              {
                                switch ((unsigned char)(chars[8]))
                                  {
                                    case 'e':
                                        if (strcmp(&(chars[9]), "rvices") == 0)
                                            return Value_packingservices;
                                        break;
                                    case 'u':
                                        if (strcmp(&(chars[9]), "pplies") == 0)
                                            return Value_packingsupplies;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            if (strcmp(&(chars[3]), "dleboarding") == 0)
                                return Value_paddleboarding;
                            break;
                        case 'i':
                            if (strncmp(&(chars[3]), "n", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'm':
                                        if (strcmp(&(chars[5]), "anagement") == 0)
                                            return Value_painmanagement;
                                        break;
                                    case 't':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[6]), "ndsip") == 0)
                                                    return Value_paintandsip;
                                                break;
                                            case 'b':
                                                if (strcmp(&(chars[6]), "all") == 0)
                                                    return Value_paintball;
                                                break;
                                            case 'e':
                                                if (strcmp(&(chars[6]), "rs") == 0)
                                                    return Value_painters;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "tores") == 0)
                                                    return Value_paintstores;
                                                break;
                                            case 'y':
                                                if (strcmp(&(chars[6]), "ourownpottery") == 0)
                                                    return Value_paintyourownpottery;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "istani") == 0)
                                return Value_pakistani;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "atine") == 0)
                                return Value_palatine;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "asian") == 0)
                                return Value_panasian;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "sailing") == 0)
                                        return Value_parasailing;
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "ntingclasses") == 0)
                                        return Value_parentingclasses;
                                    break;
                                case 'k':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ng") == 0)
                                                return Value_parking;
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[5]), "ets") == 0)
                                                return Value_parklets;
                                            break;
                                        case 's':
                                            if (chars[5] == 0)
                                                return Value_parks;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strncmp(&(chars[4]), "y", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'b':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'i':
                                                        if (strcmp(&(chars[7]), "kerentals") == 0)
                                                            return Value_partybikerentals;
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(chars[7]), "srentals") == 0)
                                                            return Value_partybusrentals;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'c':
                                                if (strcmp(&(chars[6]), "haracters") == 0)
                                                    return Value_partycharacters;
                                                break;
                                            case 'e':
                                                if (strcmp(&(chars[6]), "quipmentrentals") == 0)
                                                    return Value_partyequipmentrentals;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "upplies") == 0)
                                                    return Value_partysupplies;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 's':
                                    if (strcmp(&(chars[4]), "portvisaservices") == 0)
                                        return Value_passportvisaservices;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ashops") == 0)
                                        return Value_pastashops;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "ntlaw") == 0)
                                        return Value_patentlaw;
                                    break;
                                case 'h':
                                    if (strcmp(&(chars[4]), "ologists") == 0)
                                        return Value_pathologists;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "ocoverings") == 0)
                                        return Value_patiocoverings;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'w':
                            if (strcmp(&(chars[3]), "n") == 0)
                                return Value_pawn;
                            break;
                        case 'y':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "ayloans") == 0)
                                        return Value_paydayloans;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "oll") == 0)
                                        return Value_payroll;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strncmp(&(chars[3]), "i", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "tric", 4) == 0)
                                          {
                                            switch ((unsigned char)(chars[9]))
                                              {
                                                case '_':
                                                    if (strcmp(&(chars[10]), "dentists") == 0)
                                                        return Value_pediatric_dentists;
                                                    break;
                                                case 'i':
                                                    if (strcmp(&(chars[10]), "ans") == 0)
                                                        return Value_pediatricians;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'c':
                                        if (strcmp(&(chars[5]), "abs") == 0)
                                            return Value_pedicabs;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "inese") == 0)
                                return Value_pekinese;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "sions") == 0)
                                return Value_pensions;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'f':
                                    if (strcmp(&(chars[4]), "ume") == 0)
                                        return Value_perfume;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "odontists") == 0)
                                        return Value_periodontists;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "anentmakeup") == 0)
                                        return Value_permanentmakeup;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "an") == 0)
                                                return Value_persian;
                                            break;
                                        case 'o':
                                            if (strncmp(&(chars[5]), "nal", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[8]))
                                                  {
                                                    case '_':
                                                        switch ((unsigned char)(chars[9]))
                                                          {
                                                            case 'i':
                                                                if (strcmp(&(chars[10]), "njury") == 0)
                                                                    return Value_personal_injury;
                                                                break;
                                                            case 's':
                                                                if (strcmp(&(chars[10]), "hopping") == 0)
                                                                    return Value_personal_shopping;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'a':
                                                        if (strcmp(&(chars[9]), "ssistants") == 0)
                                                            return Value_personalassistants;
                                                        break;
                                                    case 'c':
                                                        switch ((unsigned char)(chars[9]))
                                                          {
                                                            case 'a':
                                                                if (strcmp(&(chars[10]), "re") == 0)
                                                                    return Value_personalcare;
                                                                break;
                                                            case 'h':
                                                                if (strcmp(&(chars[10]), "efs") == 0)
                                                                    return Value_personalchefs;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "vian") == 0)
                                        return Value_peruvian;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "t_control") == 0)
                                return Value_pest_control;
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case '_':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 's':
                                            if (strcmp(&(chars[5]), "itting") == 0)
                                                return Value_pet_sitting;
                                            break;
                                        case 't':
                                            if (strcmp(&(chars[5]), "raining") == 0)
                                                return Value_pet_training;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'a':
                                    if (strcmp(&(chars[4]), "doption") == 0)
                                        return Value_petadoption;
                                    break;
                                case 'b':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'o':
                                            if (strcmp(&(chars[5]), "arding") == 0)
                                                return Value_petboarding;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[5]), "eeders") == 0)
                                                return Value_petbreeders;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'c':
                                    if (strcmp(&(chars[4]), "remation") == 0)
                                        return Value_petcremation;
                                    break;
                                case 'h':
                                    if (strcmp(&(chars[4]), "ospice") == 0)
                                        return Value_pethospice;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "nsurance") == 0)
                                        return Value_petinsurance;
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "hotography") == 0)
                                        return Value_petphotography;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 0:
                                            return Value_pets;
                                        case 'e':
                                            if (strcmp(&(chars[5]), "rvices") == 0)
                                                return Value_petservices;
                                            break;
                                        case 't':
                                            if (strcmp(&(chars[5]), "ore") == 0)
                                                return Value_petstore;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ngzoos") == 0)
                                                return Value_pettingzoos;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[5]), "ansport") == 0)
                                                return Value_pettransport;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "asteremoval") == 0)
                                        return Value_petwasteremoval;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "rmacy") == 0)
                                return Value_pharmacy;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "ebologists") == 0)
                                return Value_phlebologists;
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "to", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'b':
                                        if (strcmp(&(chars[6]), "oothrentals") == 0)
                                            return Value_photoboothrentals;
                                        break;
                                    case 'c':
                                        if (strcmp(&(chars[6]), "lasses") == 0)
                                            return Value_photoclasses;
                                        break;
                                    case 'g':
                                        if (strncmp(&(chars[6]), "raph", 4) == 0)
                                          {
                                            switch ((unsigned char)(chars[10]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(chars[11]), "rs") == 0)
                                                        return Value_photographers;
                                                    break;
                                                case 'y':
                                                    if (strcmp(&(chars[11]), "stores") == 0)
                                                        return Value_photographystores;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'y':
                            if (strncmp(&(chars[3]), "sic", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[7]), "ltherapy") == 0)
                                            return Value_physicaltherapy;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[7]), "ans") == 0)
                                            return Value_physicians;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "ina") == 0)
                                        return Value_piadina;
                                    break;
                                case 'n':
                                    if (strncmp(&(chars[4]), "o", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'b':
                                                if (strcmp(&(chars[6]), "ars") == 0)
                                                    return Value_pianobars;
                                                break;
                                            case 's':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'e':
                                                        if (strcmp(&(chars[7]), "rvices") == 0)
                                                            return Value_pianoservices;
                                                        break;
                                                    case 't':
                                                        if (strcmp(&(chars[7]), "ores") == 0)
                                                            return Value_pianostores;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "kyourown") == 0)
                                return Value_pickyourown;
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "rcing") == 0)
                                return Value_piercing;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "ates") == 0)
                                return Value_pilates;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "a") == 0)
                                return Value_pita;
                            break;
                        case 'z':
                            if (strcmp(&(chars[3]), "za") == 0)
                                return Value_pizza;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "entaencapsulation") == 0)
                                        return Value_placentaencapsulation;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "etarium") == 0)
                                        return Value_planetarium;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "ticsurgeons") == 0)
                                        return Value_plasticsurgeons;
                                    break;
                                case 'y':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'g':
                                            if (strcmp(&(chars[5]), "rounds") == 0)
                                                return Value_playgrounds;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "ets") == 0)
                                                return Value_playsets;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    if (strcmp(&(chars[4]), "bing") == 0)
                                        return Value_plumbing;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "_size_fashion") == 0)
                                        return Value_plus_size_fashion;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "iatrists") == 0)
                                return Value_podiatrists;
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "e") == 0)
                                return Value_poke;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "dancingclasses") == 0)
                                        return Value_poledancingclasses;
                                    break;
                                case 'i':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(chars[5]), "edepartments") == 0)
                                                return Value_policedepartments;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "h") == 0)
                                                return Value_polish;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "l", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'b':
                                        if (strcmp(&(chars[5]), "illiards") == 0)
                                            return Value_poolbilliards;
                                        break;
                                    case 'c':
                                        if (strcmp(&(chars[5]), "leaners") == 0)
                                            return Value_poolcleaners;
                                        break;
                                    case 'h':
                                        if (strcmp(&(chars[5]), "alls") == 0)
                                            return Value_poolhalls;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "ervice") == 0)
                                            return Value_poolservice;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "orn") == 0)
                                        return Value_popcorn;
                                    break;
                                case 'u':
                                    if (strncmp(&(chars[4]), "p", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'r':
                                                if (strcmp(&(chars[6]), "estaurants") == 0)
                                                    return Value_popuprestaurants;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "hops") == 0)
                                                    return Value_popupshops;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "tuguese") == 0)
                                return Value_portuguese;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "toffices") == 0)
                                return Value_postoffices;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "atoes") == 0)
                                return Value_potatoes;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "tineries") == 0)
                                return Value_poutineries;
                            break;
                        case 'w':
                            if (strcmp(&(chars[3]), "dercoating") == 0)
                                return Value_powdercoating;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "atal") == 0)
                                        return Value_prenatal;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(chars[5]), "hools") == 0)
                                                return Value_preschools;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "urewashers") == 0)
                                                return Value_pressurewashers;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "zels") == 0)
                                        return Value_pretzels;
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "entivemedicine") == 0)
                                        return Value_preventivemedicine;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "tmedia") == 0)
                                        return Value_printmedia;
                                    break;
                                case 'v':
                                    if (strncmp(&(chars[4]), "ate", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[8]), "nvestigation") == 0)
                                                    return Value_privateinvestigation;
                                                break;
                                            case 'j':
                                                if (strcmp(&(chars[8]), "etcharter") == 0)
                                                    return Value_privatejetcharter;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[8]), "chools") == 0)
                                                    return Value_privateschools;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[8]), "utors") == 0)
                                                    return Value_privatetutors;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[5]), "ssservers") == 0)
                                                return Value_processservers;
                                            break;
                                        case 't':
                                            if (strcmp(&(chars[5]), "ologist") == 0)
                                                return Value_proctologist;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'd':
                                    if (strcmp(&(chars[4]), "uctdesign") == 0)
                                        return Value_productdesign;
                                    break;
                                case 'f':
                                    if (strcmp(&(chars[4]), "essional") == 0)
                                        return Value_professional;
                                    break;
                                case 'p':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[5]), "ne") == 0)
                                                return Value_propane;
                                            break;
                                        case 'e':
                                            if (strcmp(&(chars[5]), "rtymgmt") == 0)
                                                return Value_propertymgmt;
                                            break;
                                        case 's':
                                            if (chars[5] == 0)
                                                return Value_props;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 's':
                                    if (strncmp(&(chars[4]), "th", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[7]), "tics") == 0)
                                                    return Value_prosthetics;
                                                break;
                                            case 'o':
                                                if (strcmp(&(chars[7]), "dontists") == 0)
                                                    return Value_prosthodontists;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "encal") == 0)
                                        return Value_provencal;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strncmp(&(chars[2]), "ych", 3) == 0)
                      {
                        switch ((unsigned char)(chars[5]))
                          {
                            case 'i':
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[7]), "trists") == 0)
                                            return Value_psychiatrists;
                                        break;
                                    case 'c':
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[8]), "astrology") == 0)
                                                    return Value_psychic_astrology;
                                                break;
                                            case 'm':
                                                if (strcmp(&(chars[8]), "ediums") == 0)
                                                    return Value_psychicmediums;
                                                break;
                                            case 's':
                                                if (chars[8] == 0)
                                                    return Value_psychics;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'o':
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[7]), "nalysts") == 0)
                                            return Value_psychoanalysts;
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[7]), "ogists") == 0)
                                            return Value_psychologists;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[7]), "herapists") == 0)
                                            return Value_psychotherapists;
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'f':
                                    if (strcmp(&(chars[4]), "ood") == 0)
                                        return Value_pubfood;
                                    break;
                                case 'l':
                                    if (strncmp(&(chars[4]), "ic", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'a':
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 'd':
                                                        if (strcmp(&(chars[8]), "justers") == 0)
                                                            return Value_publicadjusters;
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(chars[8]), "t") == 0)
                                                            return Value_publicart;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'm':
                                                if (strcmp(&(chars[7]), "arkets") == 0)
                                                    return Value_publicmarkets;
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[7]), "lazas") == 0)
                                                    return Value_publicplazas;
                                                break;
                                            case 'r':
                                                if (strcmp(&(chars[7]), "elations") == 0)
                                                    return Value_publicrelations;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[7]), "ervicesgovt") == 0)
                                                    return Value_publicservicesgovt;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[7]), "ransport") == 0)
                                                    return Value_publictransport;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 's':
                                    if (chars[4] == 0)
                                        return Value_pubs;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "rtorican") == 0)
                                return Value_puertorican;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "monologist") == 0)
                                return Value_pulmonologist;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "pkinpatches") == 0)
                                return Value_pumpkinpatches;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'q':
            if (strcmp(&(chars[1]), "igong") == 0)
                return Value_qigong;
            break;
        case 'r':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 's':
                                            if (chars[5] == 0)
                                                return Value_races;
                                            break;
                                        case 't':
                                            if (strcmp(&(chars[5]), "racks") == 0)
                                                return Value_racetracks;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "ngexperience") == 0)
                                        return Value_racingexperience;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "io", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'l':
                                        if (strcmp(&(chars[6]), "ogists") == 0)
                                            return Value_radiologists;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[6]), "tations") == 0)
                                            return Value_radiostations;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'f':
                            if (strcmp(&(chars[3]), "ting") == 0)
                                return Value_rafting;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "en") == 0)
                                return Value_ramen;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "ches") == 0)
                                return Value_ranches;
                            break;
                        case 'w':
                            if (strcmp(&(chars[3]), "_food") == 0)
                                return Value_raw_food;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strncmp(&(chars[3]), "lestate", 7) == 0)
                              {
                                switch ((unsigned char)(chars[10]))
                                  {
                                    case 0:
                                        return Value_realestate;
                                    case 'a':
                                        if (strcmp(&(chars[11]), "gents") == 0)
                                            return Value_realestateagents;
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[11]), "awyers") == 0)
                                            return Value_realestatelawyers;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[11]), "vcs") == 0)
                                            return Value_realestatesvcs;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'c':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    if (strncmp(&(chars[4]), "rd", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[7]), "labels") == 0)
                                                    return Value_record_labels;
                                                break;
                                            case 'i':
                                                if (strcmp(&(chars[7]), "ng_studios") == 0)
                                                    return Value_recording_studios;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "eation") == 0)
                                        return Value_recreation;
                                    break;
                                case 'y':
                                    if (strcmp(&(chars[4]), "clingcenter") == 0)
                                        return Value_recyclingcenter;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'f':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "nishing") == 0)
                                        return Value_refinishing;
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "exology") == 0)
                                        return Value_reflexology;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            if (strncmp(&(chars[3]), "istr", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[8]), "tionservices") == 0)
                                            return Value_registrationservices;
                                        break;
                                    case 'y':
                                        if (strcmp(&(chars[8]), "_office") == 0)
                                            return Value_registry_office;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'h':
                            if (strcmp(&(chars[3]), "abilitation_center") == 0)
                                return Value_rehabilitation_center;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ki") == 0)
                                return Value_reiki;
                            break;
                        case 'l':
                            if (strncmp(&(chars[3]), "igious", 6) == 0)
                              {
                                switch ((unsigned char)(chars[9]))
                                  {
                                    case 'i':
                                        if (strcmp(&(chars[10]), "tems") == 0)
                                            return Value_religiousitems;
                                        break;
                                    case 'o':
                                        if (strcmp(&(chars[10]), "rgs") == 0)
                                            return Value_religiousorgs;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[10]), "chools") == 0)
                                            return Value_religiousschools;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "tfurniture") == 0)
                                return Value_rentfurniture;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "tileshops") == 0)
                                return Value_reptileshops;
                            break;
                        case 's':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    if (strcmp(&(chars[4]), "rts") == 0)
                                        return Value_resorts;
                                    break;
                                case 't':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[5]), "urants") == 0)
                                                return Value_restaurants;
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "tops") == 0)
                                                return Value_reststops;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "i", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'n':
                                        if (strcmp(&(chars[5]), "aspecialists") == 0)
                                            return Value_retinaspecialists;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[5]), "ement_homes") == 0)
                                            return Value_retirement_homes;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "ion") == 0)
                                        return Value_reunion;
                                    break;
                                case 'p':
                                    if (strcmp(&(chars[4]), "holstery") == 0)
                                        return Value_reupholstery;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            if (strcmp(&(chars[3]), "matologists") == 0)
                                return Value_rhematologists;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "nelandian") == 0)
                                return Value_rhinelandian;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "dsideassist") == 0)
                                return Value_roadsideassist;
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "k_climbing") == 0)
                                return Value_rock_climbing;
                            break;
                        case 'd':
                            if (strcmp(&(chars[3]), "eo") == 0)
                                return Value_rodeo;
                            break;
                        case 'm':
                            if (strncmp(&(chars[3]), "an", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 0:
                                        return Value_roman;
                                    case 'i':
                                        if (strcmp(&(chars[6]), "an") == 0)
                                            return Value_romanian;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "fin", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 'g':
                                        if (chars[7] == 0)
                                            return Value_roofing;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[7]), "pectors") == 0)
                                            return Value_roofinspectors;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "isserie_chicken") == 0)
                                return Value_rotisserie_chicken;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            if (strcmp(&(chars[3]), "s") == 0)
                                return Value_rugs;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "sian") == 0)
                                return Value_russian;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    switch ((unsigned char)(chars[2]))
                      {
                        case '_':
                            if (strcmp(&(chars[3]), "dealers") == 0)
                                return Value_rv_dealers;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "arks") == 0)
                                return Value_rvparks;
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'n':
                                        if (strcmp(&(chars[5]), "tal") == 0)
                                            return Value_rvrental;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[5]), "air") == 0)
                                            return Value_rvrepair;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 's':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'f':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 's':
                                        if (strcmp(&(chars[5]), "tores") == 0)
                                            return Value_safestores;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "yequipment") == 0)
                                            return Value_safetyequipment;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ling") == 0)
                                return Value_sailing;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "d") == 0)
                                        return Value_salad;
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "adoran") == 0)
                                        return Value_salvadoran;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strncmp(&(chars[3]), "d", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'b':
                                        if (strcmp(&(chars[5]), "lasting") == 0)
                                            return Value_sandblasting;
                                        break;
                                    case 'w':
                                        if (strcmp(&(chars[5]), "iches") == 0)
                                            return Value_sandwiches;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "dinian") == 0)
                                return Value_sardinian;
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "na", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(chars[6]), "nstallation") == 0)
                                            return Value_saunainstallation;
                                        break;
                                    case 's':
                                        if (chars[6] == 0)
                                            return Value_saunas;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'c':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "dinavian") == 0)
                                        return Value_scandinavian;
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "engerhunts") == 0)
                                        return Value_scavengerhunts;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'h':
                            if (strcmp(&(chars[3]), "nitzel") == 0)
                                return Value_schnitzel;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'o':
                                    if (strncmp(&(chars[4]), "ter", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'r':
                                                if (strcmp(&(chars[8]), "entals") == 0)
                                                    return Value_scooterrentals;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[8]), "ours") == 0)
                                                    return Value_scootertours;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "tish") == 0)
                                        return Value_scottish;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strncmp(&(chars[3]), "een", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[7]), "printing_tshirt_printing") == 0)
                                            return Value_screen_printing_tshirt_printing;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[7]), "rinting") == 0)
                                            return Value_screenprinting;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "ba") == 0)
                                return Value_scuba;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'f':
                                    if (strncmp(&(chars[4]), "ood", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 0:
                                                return Value_seafood;
                                            case 'm':
                                                if (strcmp(&(chars[8]), "arkets") == 0)
                                                    return Value_seafoodmarkets;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "onaldecorservices") == 0)
                                        return Value_seasonaldecorservices;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'c':
                            if (strncmp(&(chars[3]), "urity", 5) == 0)
                              {
                                switch ((unsigned char)(chars[8]))
                                  {
                                    case 0:
                                        return Value_security;
                                    case 's':
                                        if (strcmp(&(chars[9]), "ystems") == 0)
                                            return Value_securitysystems;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strncmp(&(chars[3]), "f", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'd':
                                        if (strcmp(&(chars[5]), "efenseclasses") == 0)
                                            return Value_selfdefenseclasses;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "torage") == 0)
                                            return Value_selfstorage;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "galese") == 0)
                                        return Value_senegalese;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "orcenters") == 0)
                                        return Value_seniorcenters;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "ticservices") == 0)
                                return Value_septicservices;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'b':
                                    if (strcmp(&(chars[4]), "ocroatian") == 0)
                                        return Value_serbocroatian;
                                    break;
                                case 'v':
                                    if (strncmp(&(chars[4]), "ice", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[8]), "stations") == 0)
                                                    return Value_service_stations;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[8]), "tations") == 0)
                                                    return Value_servicestations;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "sionphotography") == 0)
                                return Value_sessionphotography;
                            break;
                        case 'w':
                            if (strcmp(&(chars[3]), "ingalterations") == 0)
                                return Value_sewingalterations;
                            break;
                        case 'x':
                            if (strcmp(&(chars[3]), "therapists") == 0)
                                return Value_sextherapists;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "ghainese") == 0)
                                        return Value_shanghainese;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "edofficespaces") == 0)
                                        return Value_sharedofficespaces;
                                    break;
                                case 'v':
                                    if (strncmp(&(chars[4]), "ed", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'i':
                                                if (strcmp(&(chars[7]), "ce") == 0)
                                                    return Value_shavedice;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[7]), "now") == 0)
                                                    return Value_shavedsnow;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "pping_centers") == 0)
                                return Value_shipping_centers;
                            break;
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'r':
                                            if (strcmp(&(chars[5]), "epair") == 0)
                                                return Value_shoerepair;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 0:
                                                    return Value_shoes;
                                                case 'h':
                                                    if (strcmp(&(chars[6]), "ine") == 0)
                                                        return Value_shoeshine;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'p':
                                    if (strncmp(&(chars[4]), "ping", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[8]))
                                          {
                                            case 0:
                                                return Value_shopping;
                                            case 'c':
                                                if (strcmp(&(chars[9]), "enters") == 0)
                                                    return Value_shoppingcenters;
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[9]), "assages") == 0)
                                                    return Value_shoppingpassages;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "dding") == 0)
                                        return Value_shredding;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "nes") == 0)
                                        return Value_shrines;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "tters") == 0)
                                return Value_shutters;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strcmp(&(chars[3]), "ilian") == 0)
                                return Value_sicilian;
                            break;
                        case 'g':
                            if (strcmp(&(chars[3]), "nmaking") == 0)
                                return Value_signmaking;
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "htemples") == 0)
                                return Value_sikhtemples;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "entdisco") == 0)
                                return Value_silentdisco;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "gaporean") == 0)
                                return Value_singaporean;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'k':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strncmp(&(chars[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[6]), "parks") == 0)
                                                    return Value_skate_parks;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "hops") == 0)
                                                    return Value_skateshops;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "ngrinks") == 0)
                                            return Value_skatingrinks;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "ng") == 0)
                                        return Value_skiing;
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "lednursing") == 0)
                                        return Value_skillednursing;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "care") == 0)
                                        return Value_skincare;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "esorts") == 0)
                                        return Value_skiresorts;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(chars[5]), "hools") == 0)
                                                return Value_skischools;
                                            break;
                                        case 'h':
                                            if (strcmp(&(chars[5]), "ops") == 0)
                                                return Value_skishops;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            if (strcmp(&(chars[3]), "diving") == 0)
                                return Value_skydiving;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "ding") == 0)
                                        return Value_sledding;
                                    break;
                                case 'e':
                                    if (strncmp(&(chars[4]), "p", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 's':
                                                if (strcmp(&(chars[6]), "pecialists") == 0)
                                                    return Value_sleepspecialists;
                                                break;
                                            case 'w':
                                                if (strcmp(&(chars[6]), "ear") == 0)
                                                    return Value_sleepwear;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "vakian") == 0)
                                return Value_slovakian;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'm':
                    if (strncmp(&(chars[2]), "o", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'g':
                                if (strcmp(&(chars[4]), "_check_stations") == 0)
                                    return Value_smog_check_stations;
                                break;
                            case 'k':
                                if (strcmp(&(chars[4]), "ehouse") == 0)
                                    return Value_smokehouse;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'o':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'r':
                                    if (strcmp(&(chars[4]), "keling") == 0)
                                        return Value_snorkeling;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "removal") == 0)
                                        return Value_snowremoval;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "ggleservices") == 0)
                                return Value_snuggleservices;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strncmp(&(chars[3]), "ial", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[7]), "clubs") == 0)
                                            return Value_social_clubs;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[7]), "ecuritylaw") == 0)
                                            return Value_socialsecuritylaw;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'f':
                            if (strcmp(&(chars[3]), "twaredevelopment") == 0)
                                return Value_softwaredevelopment;
                            break;
                        case 'l':
                            if (strncmp(&(chars[3]), "ar", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(chars[6]), "nstallation") == 0)
                                            return Value_solarinstallation;
                                        break;
                                    case 'p':
                                        if (strcmp(&(chars[6]), "anelcleaning") == 0)
                                            return Value_solarpanelcleaning;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "melierservices") == 0)
                                return Value_sommelierservices;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "hrologists") == 0)
                                return Value_sophrologists;
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'l':
                                    if (strcmp(&(chars[4]), "food") == 0)
                                        return Value_soulfood;
                                    break;
                                case 'p':
                                    if (chars[4] == 0)
                                        return Value_soup;
                                    break;
                                case 't':
                                    if (strncmp(&(chars[4]), "h", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[6]), "frican") == 0)
                                                    return Value_southafrican;
                                                break;
                                            case 'e':
                                                if (strcmp(&(chars[6]), "rn") == 0)
                                                    return Value_southern;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "enirs") == 0)
                                        return Value_souvenirs;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "ish") == 0)
                                        return Value_spanish;
                                    break;
                                case 's':
                                    if (chars[4] == 0)
                                        return Value_spas;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "keasies") == 0)
                                        return Value_speakeasies;
                                    break;
                                case 'c':
                                    if (strncmp(&(chars[4]), "ial", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 'b':
                                                if (strcmp(&(chars[8]), "ikes") == 0)
                                                    return Value_specialbikes;
                                                break;
                                            case 'e':
                                                if (strcmp(&(chars[8]), "d") == 0)
                                                    return Value_specialed;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[8]), "yschools") == 0)
                                                    return Value_specialtyschools;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strncmp(&(chars[4]), "ch", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[7]), "therapists") == 0)
                                                    return Value_speech_therapists;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[7]), "raining") == 0)
                                                    return Value_speechtraining;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "mclinic") == 0)
                                        return Value_spermclinic;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "esurgeons") == 0)
                                        return Value_spinesurgeons;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "itual_shop") == 0)
                                        return Value_spiritual_shop;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "rt", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'g':
                                        if (strcmp(&(chars[6]), "oods") == 0)
                                            return Value_sportgoods;
                                        break;
                                    case 's':
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[7]), "clubs") == 0)
                                                    return Value_sports_clubs;
                                                break;
                                            case 'b':
                                                if (strcmp(&(chars[7]), "ars") == 0)
                                                    return Value_sportsbars;
                                                break;
                                            case 'm':
                                                if (strcmp(&(chars[7]), "ed") == 0)
                                                    return Value_sportsmed;
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[7]), "sychologists") == 0)
                                                    return Value_sportspsychologists;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[7]), "eams") == 0)
                                                    return Value_sportsteams;
                                                break;
                                            case 'w':
                                                if (strcmp(&(chars[7]), "ear") == 0)
                                                    return Value_sportswear;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "aytanning") == 0)
                                return Value_spraytanning;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'q':
                    if (strcmp(&(chars[2]), "uash") == 0)
                        return Value_squash;
                    break;
                case 'r':
                    if (strcmp(&(chars[2]), "ilankan") == 0)
                        return Value_srilankan;
                    break;
                case 't':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "iumsarenas") == 0)
                                        return Value_stadiumsarenas;
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "ionery") == 0)
                                        return Value_stationery;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "k") == 0)
                                        return Value_steak;
                                    break;
                                case 'r':
                                    if (strcmp(&(chars[4]), "eo_installation") == 0)
                                        return Value_stereo_installation;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "ckings") == 0)
                                return Value_stockings;
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strncmp(&(chars[4]), "et", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[7]), "rt") == 0)
                                                    return Value_streetart;
                                                break;
                                            case 'v':
                                                if (strcmp(&(chars[7]), "endors") == 0)
                                                    return Value_streetvendors;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if (strncmp(&(chars[4]), "p", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[6]), "lubs") == 0)
                                                    return Value_stripclubs;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[6]), "easedancers") == 0)
                                                    return Value_stripteasedancers;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "cturalengineers") == 0)
                                        return Value_structuralengineers;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "co") == 0)
                                        return Value_stucco;
                                    break;
                                case 'd':
                                    if (strcmp(&(chars[4]), "iotaping") == 0)
                                        return Value_studiotaping;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "_ouest") == 0)
                                return Value_sud_ouest;
                            break;
                        case 'g':
                            if (strncmp(&(chars[3]), "ar", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(chars[6]), "ng") == 0)
                                            return Value_sugaring;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[6]), "hacks") == 0)
                                            return Value_sugarshacks;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "mer_camps") == 0)
                                return Value_summer_camps;
                            break;
                        case 'n':
                            if (strcmp(&(chars[3]), "glasses") == 0)
                                return Value_sunglasses;
                            break;
                        case 'p':
                            if (strncmp(&(chars[3]), "p", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(chars[5]), "rclubs") == 0)
                                            return Value_supperclubs;
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[5]), "iesrestaurant") == 0)
                                            return Value_suppliesrestaurant;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'f':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[5]), "ng") == 0)
                                                return Value_surfing;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'c':
                                                    if (strcmp(&(chars[6]), "hools") == 0)
                                                        return Value_surfschools;
                                                    break;
                                                case 'h':
                                                    if (strcmp(&(chars[6]), "op") == 0)
                                                        return Value_surfshop;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(chars[4]), "eons") == 0)
                                        return Value_surgeons;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "hi") == 0)
                                return Value_sushi;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'w':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "bian") == 0)
                                return Value_swabian;
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "dish") == 0)
                                return Value_swedish;
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'm':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'm':
                                            if (strncmp(&(chars[5]), "ing", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[8]))
                                                  {
                                                    case 'l':
                                                        if (strcmp(&(chars[9]), "essons") == 0)
                                                            return Value_swimminglessons;
                                                        break;
                                                    case 'p':
                                                        if (strcmp(&(chars[9]), "ools") == 0)
                                                            return Value_swimmingpools;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'w':
                                            if (strcmp(&(chars[5]), "ear") == 0)
                                                return Value_swimwear;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "sfood") == 0)
                                        return Value_swissfood;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'n':
                            if (strcmp(&(chars[3]), "agogues") == 0)
                                return Value_synagogues;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "ian") == 0)
                                return Value_syrian;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'z':
                    if (strcmp(&(chars[2]), "echuan") == 0)
                        return Value_szechuan;
                    break;
                default:
                    break;
              }
            break;
        case 't':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "c") == 0)
                                        return Value_tabac;
                                    break;
                                case 'l':
                                    if (strncmp(&(chars[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 't':
                                                if (strcmp(&(chars[6]), "opgames") == 0)
                                                    return Value_tabletopgames;
                                                break;
                                            case 'w':
                                                if (strcmp(&(chars[6]), "are") == 0)
                                                    return Value_tableware;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'c':
                            if (strcmp(&(chars[3]), "os") == 0)
                                return Value_tacos;
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "kwondo") == 0)
                                return Value_taekwondo;
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strcmp(&(chars[4]), "hi") == 0)
                                        return Value_taichi;
                                    break;
                                case 'w':
                                    if (strcmp(&(chars[4]), "anese") == 0)
                                        return Value_taiwanese;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "entagencies") == 0)
                                return Value_talentagencies;
                            break;
                        case 'n':
                            if (strncmp(&(chars[3]), "ning", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 0:
                                        return Value_tanning;
                                    case 'b':
                                        if (strcmp(&(chars[8]), "eds") == 0)
                                            return Value_tanningbeds;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            if (strncmp(&(chars[3]), "as", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 0:
                                        return Value_tapas;
                                    case 'm':
                                        if (strcmp(&(chars[6]), "allplates") == 0)
                                            return Value_tapasmallplates;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "tingclasses") == 0)
                                return Value_tastingclasses;
                            break;
                        case 't':
                            if (strncmp(&(chars[3]), "too", 3) == 0)
                              {
                                switch ((unsigned char)(chars[6]))
                                  {
                                    case 0:
                                        return Value_tattoo;
                                    case 'r':
                                        if (strcmp(&(chars[7]), "emoval") == 0)
                                            return Value_tattooremoval;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'x':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'd':
                                            if (strcmp(&(chars[5]), "ermy") == 0)
                                                return Value_taxidermy;
                                            break;
                                        case 's':
                                            if (chars[5] == 0)
                                                return Value_taxis;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "aw") == 0)
                                        return Value_taxlaw;
                                    break;
                                case 'o':
                                    if (strcmp(&(chars[4]), "ffice") == 0)
                                        return Value_taxoffice;
                                    break;
                                case 's':
                                    if (strcmp(&(chars[4]), "ervices") == 0)
                                        return Value_taxservices;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'c':
                    if (strcmp(&(chars[2]), "m") == 0)
                        return Value_tcm;
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 0:
                                    return Value_tea;
                                case 'c':
                                    if (strcmp(&(chars[4]), "hersupplies") == 0)
                                        return Value_teachersupplies;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "building") == 0)
                                        return Value_teambuilding;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "thwhitening") == 0)
                                return Value_teethwhitening;
                            break;
                        case 'l':
                            if (strncmp(&(chars[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "ommunications") == 0)
                                            return Value_telecommunications;
                                        break;
                                    case 'v':
                                        if (strncmp(&(chars[5]), "isions", 6) == 0)
                                          {
                                            switch ((unsigned char)(chars[11]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(chars[12]), "rviceproviders") == 0)
                                                        return Value_televisionserviceproviders;
                                                    break;
                                                case 't':
                                                    if (strcmp(&(chars[12]), "ations") == 0)
                                                        return Value_televisionstations;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "ntlaw") == 0)
                                        return Value_tenantlaw;
                                    break;
                                case 'n':
                                    if (strcmp(&(chars[4]), "is") == 0)
                                        return Value_tennis;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "panyaki") == 0)
                                return Value_teppanyaki;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "tprep") == 0)
                                return Value_testprep;
                            break;
                        case 'x':
                            if (strcmp(&(chars[3]), "-mex") == 0)
                                return Value_tex_mex;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "i") == 0)
                                return Value_thai;
                            break;
                        case 'e':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "ter") == 0)
                                        return Value_theater;
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "edcafes") == 0)
                                        return Value_themedcafes;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "adingservices") == 0)
                                        return Value_threadingservices;
                                    break;
                                case 'i':
                                    if (strcmp(&(chars[4]), "ft_stores") == 0)
                                        return Value_thrift_stores;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strncmp(&(chars[3]), "kets", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 0:
                                        return Value_tickets;
                                    case 'a':
                                        if (strcmp(&(chars[8]), "les") == 0)
                                            return Value_ticketsales;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strcmp(&(chars[3]), "ibars") == 0)
                                return Value_tikibars;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "ing") == 0)
                                return Value_tiling;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "es") == 0)
                                return Value_tires;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "leloans") == 0)
                                return Value_titleloans;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "accoshops") == 0)
                                return Value_tobaccoshops;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "rs") == 0)
                                return Value_tours;
                            break;
                        case 'w':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'i':
                                    if (strcmp(&(chars[4]), "ng") == 0)
                                        return Value_towing;
                                    break;
                                case 'n':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(chars[5]), "arservice") == 0)
                                                return Value_towncarservice;
                                            break;
                                        case 'h':
                                            if (strcmp(&(chars[5]), "all") == 0)
                                                return Value_townhall;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'x':
                            if (strcmp(&(chars[3]), "icologists") == 0)
                                return Value_toxicologists;
                            break;
                        case 'y':
                            if (strcmp(&(chars[3]), "s") == 0)
                                return Value_toys;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[5]), "merican") == 0)
                                                return Value_tradamerican;
                                            break;
                                        case 'c':
                                            if (strcmp(&(chars[5]), "lothing") == 0)
                                                return Value_tradclothing;
                                            break;
                                        case 'e':
                                            if (strcmp(&(chars[5]), "fairs") == 0)
                                                return Value_tradefairs;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'f':
                                    if (strncmp(&(chars[4]), "fic", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[7]))
                                          {
                                            case 's':
                                                if (strcmp(&(chars[8]), "chools") == 0)
                                                    return Value_trafficschools;
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[8]), "icketinglaw") == 0)
                                                    return Value_trafficticketinglaw;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'l':
                                            if (strncmp(&(chars[5]), "er", 2) == 0)
                                              {
                                                switch ((unsigned char)(chars[7]))
                                                  {
                                                    case 'd':
                                                        if (strcmp(&(chars[8]), "ealers") == 0)
                                                            return Value_trailerdealers;
                                                        break;
                                                    case 'r':
                                                        if (strncmp(&(chars[8]), "e", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[9]))
                                                              {
                                                                case 'n':
                                                                    if (strcmp(&(chars[10]), "tal") == 0)
                                                                        return Value_trailerrental;
                                                                    break;
                                                                case 'p':
                                                                    if (strcmp(&(chars[10]), "air") == 0)
                                                                        return Value_trailerrepair;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'n':
                                            if (strncmp(&(chars[5]), "s", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 0:
                                                        return Value_trains;
                                                    case 't':
                                                        if (strcmp(&(chars[7]), "ations") == 0)
                                                            return Value_trainstations;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'm':
                                    if (strcmp(&(chars[4]), "poline") == 0)
                                        return Value_trampoline;
                                    break;
                                case 'n':
                                    if (strncmp(&(chars[4]), "s", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'l':
                                                if (strcmp(&(chars[6]), "ationservices") == 0)
                                                    return Value_translationservices;
                                                break;
                                            case 'm':
                                                if (strcmp(&(chars[6]), "issionrepair") == 0)
                                                    return Value_transmissionrepair;
                                                break;
                                            case 'p':
                                                if (strcmp(&(chars[6]), "ort") == 0)
                                                    return Value_transport;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(chars[4]), "torie") == 0)
                                        return Value_trattorie;
                                    break;
                                case 'v':
                                    if (strncmp(&(chars[4]), "el", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[7]), "gents") == 0)
                                                    return Value_travelagents;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[7]), "ervices") == 0)
                                                    return Value_travelservices;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "eservices") == 0)
                                return Value_treeservices;
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'n':
                                    if (strcmp(&(chars[4]), "idadian") == 0)
                                        return Value_trinidadian;
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "iahosts") == 0)
                                        return Value_triviahosts;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "p", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'h':
                                        if (strcmp(&(chars[5]), "yshops") == 0)
                                            return Value_trophyshops;
                                        break;
                                    case 'i':
                                        if (strcmp(&(chars[5]), "calmedicine") == 0)
                                            return Value_tropicalmedicine;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            if (strncmp(&(chars[3]), "ck", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[6]), "rental") == 0)
                                            return Value_truck_rental;
                                        break;
                                    case 'd':
                                        if (strcmp(&(chars[6]), "ealers") == 0)
                                            return Value_truckdealers;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[6]), "epair") == 0)
                                            return Value_truckrepair;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "ing") == 0)
                                return Value_tubing;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "na") == 0)
                                return Value_tuina;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "kish") == 0)
                                return Value_turkish;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "can") == 0)
                                return Value_tuscan;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "oring") == 0)
                                return Value_tutoring;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    if (strcmp(&(chars[2]), "mounting") == 0)
                        return Value_tvmounting;
                    break;
                default:
                    break;
              }
            break;
        case 'u':
            switch ((unsigned char)(chars[1]))
              {
                case 'k':
                    if (strcmp(&(chars[2]), "rainian") == 0)
                        return Value_ukrainian;
                    break;
                case 'l':
                    if (strcmp(&(chars[2]), "trasoundimagingcenters") == 0)
                        return Value_ultrasoundimagingcenters;
                    break;
                case 'n':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strcmp(&(chars[3]), "erseamedicine") == 0)
                                return Value_underseamedicine;
                            break;
                        case 'i':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'f':
                                    if (strcmp(&(chars[4]), "orms") == 0)
                                        return Value_uniforms;
                                    break;
                                case 'v':
                                    if (strcmp(&(chars[4]), "ersity_housing") == 0)
                                        return Value_university_housing;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "fficialyelpevents") == 0)
                                return Value_unofficialyelpevents;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            if (strcmp(&(chars[3]), "ent_care") == 0)
                                return Value_urgent_care;
                            break;
                        case 'o':
                            if (strcmp(&(chars[3]), "logists") == 0)
                                return Value_urologists;
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strncmp(&(chars[2]), "ed", 2) == 0)
                      {
                        switch ((unsigned char)(chars[4]))
                          {
                            case 'b':
                                if (strcmp(&(chars[5]), "ooks") == 0)
                                    return Value_usedbooks;
                                break;
                            case 'c':
                                if (strcmp(&(chars[5]), "ardealers") == 0)
                                    return Value_usedcardealers;
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 't':
                    if (strcmp(&(chars[2]), "ilities") == 0)
                        return Value_utilities;
                    break;
                case 'z':
                    if (strcmp(&(chars[2]), "bek") == 0)
                        return Value_uzbek;
                    break;
                default:
                    break;
              }
            break;
        case 'v':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strncmp(&(chars[3]), "ation", 5) == 0)
                              {
                                switch ((unsigned char)(chars[8]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[9]), "rentals") == 0)
                                            return Value_vacation_rentals;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[9]), "entalagents") == 0)
                                            return Value_vacationrentalagents;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "etservices") == 0)
                                return Value_valetservices;
                            break;
                        case 'p':
                            if (strcmp(&(chars[3]), "eshops") == 0)
                                return Value_vapeshops;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "cularmedicine") == 0)
                                return Value_vascularmedicine;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'a':
                                    if (strcmp(&(chars[4]), "n") == 0)
                                        return Value_vegan;
                                    break;
                                case 'e':
                                    if (strcmp(&(chars[4]), "tarian") == 0)
                                        return Value_vegetarian;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'h':
                            if (strncmp(&(chars[3]), "icle", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case 's':
                                        if (strcmp(&(chars[8]), "hipping") == 0)
                                            return Value_vehicleshipping;
                                        break;
                                    case 'w':
                                        if (strcmp(&(chars[8]), "raps") == 0)
                                            return Value_vehiclewraps;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'e':
                                    if (strcmp(&(chars[4]), "zuelan") == 0)
                                        return Value_venezuelan;
                                    break;
                                case 'u':
                                    if (strcmp(&(chars[4]), "es") == 0)
                                        return Value_venues;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "mouthbars") == 0)
                                return Value_vermouthbars;
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 0:
                                    return Value_vet;
                                case 'e':
                                    if (strcmp(&(chars[4]), "ransorganizations") == 0)
                                        return Value_veteransorganizations;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'd':
                            if (strncmp(&(chars[3]), "eo", 2) == 0)
                              {
                                switch ((unsigned char)(chars[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(chars[6]), "ndgames") == 0)
                                            return Value_videoandgames;
                                        break;
                                    case 'f':
                                        if (strcmp(&(chars[6]), "ilmproductions") == 0)
                                            return Value_videofilmproductions;
                                        break;
                                    case 'g':
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'a':
                                                if (strcmp(&(chars[7]), "mestores") == 0)
                                                    return Value_videogamestores;
                                                break;
                                            case 'r':
                                                if (strcmp(&(chars[7]), "aphers") == 0)
                                                    return Value_videographers;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "tnamese") == 0)
                                return Value_vietnamese;
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 't':
                                    if (strcmp(&(chars[4]), "age") == 0)
                                        return Value_vintage;
                                    break;
                                case 'y':
                                    if (strncmp(&(chars[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[6]), "records") == 0)
                                                    return Value_vinyl_records;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[6]), "iding") == 0)
                                                    return Value_vinylsiding;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "tualrealitycenters") == 0)
                                return Value_virtualrealitycenters;
                            break;
                        case 's':
                            if (strcmp(&(chars[3]), "itorcenters") == 0)
                                return Value_visitorcenters;
                            break;
                        case 't':
                            if (strcmp(&(chars[3]), "aminssupplements") == 0)
                                return Value_vitaminssupplements;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'c':
                            if (strncmp(&(chars[3]), "a", 1) == 0)
                              {
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'l':
                                        if (strcmp(&(chars[5]), "coach") == 0)
                                            return Value_vocalcoach;
                                        break;
                                    case 't':
                                        if (strcmp(&(chars[5]), "ion") == 0)
                                            return Value_vocation;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "leyball") == 0)
                                return Value_volleyball;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'w':
            switch ((unsigned char)(chars[1]))
              {
                case 'a':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'f':
                            if (strcmp(&(chars[3]), "fles") == 0)
                                return Value_waffles;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strcmp(&(chars[4]), "orfschools") == 0)
                                        return Value_waldorfschools;
                                    break;
                                case 'k':
                                    if (strncmp(&(chars[4]), "in", 2) == 0)
                                      {
                                        switch ((unsigned char)(chars[6]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[7]), "linics") == 0)
                                                    return Value_walkinclinics;
                                                break;
                                            case 'g':
                                                if (strcmp(&(chars[7]), "tours") == 0)
                                                    return Value_walkingtours;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "papering") == 0)
                                        return Value_wallpapering;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'c':
                                    if (strncmp(&(chars[4]), "h", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(chars[6]), "repair") == 0)
                                                    return Value_watch_repair;
                                                break;
                                            case 'e':
                                                if (strcmp(&(chars[6]), "s") == 0)
                                                    return Value_watches;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strncmp(&(chars[4]), "r", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'd':
                                                if (strcmp(&(chars[6]), "elivery") == 0)
                                                    return Value_waterdelivery;
                                                break;
                                            case 'h':
                                                if (strcmp(&(chars[6]), "eaterinstallrepair") == 0)
                                                    return Value_waterheaterinstallrepair;
                                                break;
                                            case 'p':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(chars[7]), "rks") == 0)
                                                            return Value_waterparks;
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(chars[7]), "oofing") == 0)
                                                            return Value_waterproofing;
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(chars[7]), "rification") == 0)
                                                            return Value_waterpurification;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 's':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 't':
                                                        if (strcmp(&(chars[7]), "ores") == 0)
                                                            return Value_waterstores;
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(chars[7]), "ppliers") == 0)
                                                            return Value_watersuppliers;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 't':
                                                if (strcmp(&(chars[6]), "axis") == 0)
                                                    return Value_watertaxis;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'x':
                            if (strcmp(&(chars[3]), "ing") == 0)
                                return Value_waxing;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'b':
                            if (strcmp(&(chars[3]), "_design") == 0)
                                return Value_web_design;
                            break;
                        case 'd':
                            if (strncmp(&(chars[3]), "ding", 4) == 0)
                              {
                                switch ((unsigned char)(chars[7]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[8]), "planning") == 0)
                                            return Value_wedding_planning;
                                        break;
                                    case 'c':
                                        if (strcmp(&(chars[8]), "happels") == 0)
                                            return Value_weddingchappels;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "ghtlosscenters") == 0)
                                return Value_weightlosscenters;
                            break;
                        case 'l':
                            if (strcmp(&(chars[3]), "ldrilling") == 0)
                                return Value_welldrilling;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'a':
                            if (strcmp(&(chars[3]), "lewatchingtours") == 0)
                                return Value_whalewatchingtours;
                            break;
                        case 'e':
                            if (strcmp(&(chars[3]), "elrimrepair") == 0)
                                return Value_wheelrimrepair;
                            break;
                        case 'i':
                            if (strcmp(&(chars[3]), "skeybars") == 0)
                                return Value_whiskeybars;
                            break;
                        case 'o':
                            if (strncmp(&(chars[3]), "lesale", 6) == 0)
                              {
                                switch ((unsigned char)(chars[9]))
                                  {
                                    case '_':
                                        if (strcmp(&(chars[10]), "stores") == 0)
                                            return Value_wholesale_stores;
                                        break;
                                    case 'r':
                                        if (strcmp(&(chars[10]), "s") == 0)
                                            return Value_wholesalers;
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            if (strcmp(&(chars[3]), "s") == 0)
                                return Value_wigs;
                            break;
                        case 'l':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    if (strncmp(&(chars[4]), "life", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[8]))
                                          {
                                            case 'c':
                                                if (strcmp(&(chars[9]), "ontrol") == 0)
                                                    return Value_wildlifecontrol;
                                                break;
                                            case 'h':
                                                if (strcmp(&(chars[9]), "unting") == 0)
                                                    return Value_wildlifehunting;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(chars[4]), "strustsprobates") == 0)
                                        return Value_willstrustsprobates;
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(chars[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case 'o':
                                            if (strncmp(&(chars[5]), "w", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 's':
                                                        if (strcmp(&(chars[7]), "installation") == 0)
                                                            return Value_windowsinstallation;
                                                        break;
                                                    case 'w':
                                                        if (strcmp(&(chars[7]), "ashing") == 0)
                                                            return Value_windowwashing;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[5]), "hieldinstallrepair") == 0)
                                                return Value_windshieldinstallrepair;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'e':
                                    switch ((unsigned char)(chars[4]))
                                      {
                                        case '_':
                                            if (strcmp(&(chars[5]), "bars") == 0)
                                                return Value_wine_bars;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[5]), "ies") == 0)
                                                return Value_wineries;
                                            break;
                                        case 't':
                                            switch ((unsigned char)(chars[5]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(chars[6]), "st", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[8]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(chars[9]), "classes") == 0)
                                                                    return Value_winetasteclasses;
                                                                break;
                                                            case 'i':
                                                                if (strcmp(&(chars[9]), "ngroom") == 0)
                                                                    return Value_winetastingroom;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'o':
                                                    if (strcmp(&(chars[6]), "urs") == 0)
                                                        return Value_winetours;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'k':
                            if (chars[3] == 0)
                                return Value_wok;
                            break;
                        case 'm':
                            if (strcmp(&(chars[3]), "enscloth") == 0)
                                return Value_womenscloth;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "kerscomplaw") == 0)
                                return Value_workerscomplaw;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    if (strcmp(&(chars[2]), "aps") == 0)
                        return Value_wraps;
                    break;
                default:
                    break;
              }
            break;
        case 'x':
            if (strcmp(&(chars[1]), "masmarkets") == 0)
                return Value_xmasmarkets;
            break;
        case 'y':
            switch ((unsigned char)(chars[1]))
              {
                case 'e':
                    if (strcmp(&(chars[2]), "lpevents") == 0)
                        return Value_yelpevents;
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'g':
                            if (strcmp(&(chars[3]), "a") == 0)
                                return Value_yoga;
                            break;
                        case 'u':
                            if (strcmp(&(chars[3]), "th_club") == 0)
                                return Value_youth_club;
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strcmp(&(chars[2]), "goslav") == 0)
                        return Value_yugoslav;
                    break;
                default:
                    break;
              }
            break;
        case 'z':
            switch ((unsigned char)(chars[1]))
              {
                case 'i':
                    if (strcmp(&(chars[2]), "pline") == 0)
                        return Value_zipline;
                    break;
                case 'o':
                    switch ((unsigned char)(chars[2]))
                      {
                        case 'o':
                            if (strcmp(&(chars[3]), "s") == 0)
                                return Value_zoos;
                            break;
                        case 'r':
                            if (strcmp(&(chars[3]), "bing") == 0)
                                return Value_zorbing;
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        default:
            break;
      }
    return Value__none;
  }

const char *YelpCategoryAliasJSON::stringFromValue(TypeValueKnownValues the_enum)
  {
    switch (the_enum)
      {
        case Value_contractors:
            return "contractors";
        case Value_lawyers:
            return "lawyers";
        case Value_physicians:
            return "physicians";
        case Value_hair:
            return "hair";
        case Value_autorepair:
            return "autorepair";
        case Value_insurance:
            return "insurance";
        case Value_realestateagents:
            return "realestateagents";
        case Value_accountants:
            return "accountants";
        case Value_banks:
            return "banks";
        case Value_hotels:
            return "hotels";
        case Value_churches:
            return "churches";
        case Value_grocery:
            return "grocery";
        case Value_elementaryschools:
            return "elementaryschools";
        case Value_itservices:
            return "itservices";
        case Value_hotdogs:
            return "hotdogs";
        case Value_generaldentistry:
            return "generaldentistry";
        case Value_electricians:
            return "electricians";
        case Value_plumbing:
            return "plumbing";
        case Value_professional:
            return "professional";
        case Value_pizza:
            return "pizza";
        case Value_religiousorgs:
            return "religiousorgs";
        case Value_hvac:
            return "hvac";
        case Value_realestatesvcs:
            return "realestatesvcs";
        case Value_bakeries:
            return "bakeries";
        case Value_apartments:
            return "apartments";
        case Value_car_dealers:
            return "car_dealers";
        case Value_restaurants:
            return "restaurants";
        case Value_architects:
            return "architects";
        case Value_convenience:
            return "convenience";
        case Value_furniture:
            return "furniture";
        case Value_childcare:
            return "childcare";
        case Value_landscaping:
            return "landscaping";
        case Value_othersalons:
            return "othersalons";
        case Value_womenscloth:
            return "womenscloth";
        case Value_painters:
            return "painters";
        case Value_coffee:
            return "coffee";
        case Value_highschools:
            return "highschools";
        case Value_massage:
            return "massage";
        case Value_sandwiches:
            return "sandwiches";
        case Value_jewelry:
            return "jewelry";
        case Value_servicestations:
            return "servicestations";
        case Value_chiropractors:
            return "chiropractors";
        case Value_dentists:
            return "dentists";
        case Value_nonprofit:
            return "nonprofit";
        case Value_c_and_mh:
            return "c_and_mh";
        case Value_homeservices:
            return "homeservices";
        case Value_mortgagebrokers:
            return "mortgagebrokers";
        case Value_physicaltherapy:
            return "physicaltherapy";
        case Value_marketing:
            return "marketing";
        case Value_tradamerican:
            return "tradamerican";
        case Value_education:
            return "education";
        case Value_tires:
            return "tires";
        case Value_optometrists:
            return "optometrists";
        case Value_burgers:
            return "burgers";
        case Value_mobilephones:
            return "mobilephones";
        case Value_drugstores:
            return "drugstores";
        case Value_beer_and_wine:
            return "beer_and_wine";
        case Value_health:
            return "health";
        case Value_accessories:
            return "accessories";
        case Value_vet:
            return "vet";
        case Value_roofing:
            return "roofing";
        case Value_web_design:
            return "web_design";
        case Value_italian:
            return "italian";
        case Value_employmentagencies:
            return "employmentagencies";
        case Value_localservices:
            return "localservices";
        case Value_bodyshops:
            return "bodyshops";
        case Value_skincare:
            return "skincare";
        case Value_mexican:
            return "mexican";
        case Value_familydr:
            return "familydr";
        case Value_shoes:
            return "shoes";
        case Value_autopartssupplies:
            return "autopartssupplies";
        case Value_barbers:
            return "barbers";
        case Value_preschools:
            return "preschools";
        case Value_florists:
            return "florists";
        case Value_opticians:
            return "opticians";
        case Value_propertymgmt:
            return "propertymgmt";
        case Value_taxservices:
            return "taxservices";
        case Value_interiordesign:
            return "interiordesign";
        case Value_fashion:
            return "fashion";
        case Value_homecleaning:
            return "homecleaning";
        case Value_financialadvising:
            return "financialadvising";
        case Value_internalmed:
            return "internalmed";
        case Value_homeappliancerepair:
            return "homeappliancerepair";
        case Value_electronics:
            return "electronics";
        case Value_copyshops:
            return "copyshops";
        case Value_flooring:
            return "flooring";
        case Value_bars:
            return "bars";
        case Value_laundryservices:
            return "laundryservices";
        case Value_cosmetics:
            return "cosmetics";
        case Value_photographers:
            return "photographers";
        case Value_carpet_cleaning:
            return "carpet_cleaning";
        case Value_graphicdesign:
            return "graphicdesign";
        case Value_pubs:
            return "pubs";
        case Value_catering:
            return "catering";
        case Value_buildingsupplies:
            return "buildingsupplies";
        case Value_gardening:
            return "gardening";
        case Value_cafes:
            return "cafes";
        case Value_cosmeticdentists:
            return "cosmeticdentists";
        case Value_computers:
            return "computers";
        case Value_breakfast_brunch:
            return "breakfast_brunch";
        case Value_investing:
            return "investing";
        case Value_taxis:
            return "taxis";
        case Value_towing:
            return "towing";
        case Value_healthtrainers:
            return "healthtrainers";
        case Value_selfstorage:
            return "selfstorage";
        case Value_chinese:
            return "chinese";
        case Value_homehealthcare:
            return "homehealthcare";
        case Value_travelservices:
            return "travelservices";
        case Value_gyms:
            return "gyms";
        case Value_personal_injury:
            return "personal_injury";
        case Value_antiques:
            return "antiques";
        case Value_officecleaning:
            return "officecleaning";
        case Value_galleries:
            return "galleries";
        case Value_oralsurgeons:
            return "oralsurgeons";
        case Value_divorce:
            return "divorce";
        case Value_realestate:
            return "realestate";
        case Value_menscloth:
            return "menscloth";
        case Value_deptstores:
            return "deptstores";
        case Value_advertising:
            return "advertising";
        case Value_massage_therapy:
            return "massage_therapy";
        case Value_pet_sitting:
            return "pet_sitting";
        case Value_obgyn:
            return "obgyn";
        case Value_shopping:
            return "shopping";
        case Value_movers:
            return "movers";
        case Value_theater:
            return "theater";
        case Value_icecream:
            return "icecream";
        case Value_auto:
            return "auto";
        case Value_sports_clubs:
            return "sports_clubs";
        case Value_funeralservices:
            return "funeralservices";
        case Value_medcenters:
            return "medcenters";
        case Value_delis:
            return "delis";
        case Value_homedecor:
            return "homedecor";
        case Value_venues:
            return "venues";
        case Value_meats:
            return "meats";
        case Value_driving_schools:
            return "driving_schools";
        case Value_pharmacy:
            return "pharmacy";
        case Value_hospitals:
            return "hospitals";
        case Value_hardware:
            return "hardware";
        case Value_eventplanning:
            return "eventplanning";
        case Value_sessionphotography:
            return "sessionphotography";
        case Value_carrental:
            return "carrental";
        case Value_german:
            return "german";
        case Value_newamerican:
            return "newamerican";
        case Value_amateursportsteams:
            return "amateursportsteams";
        case Value_seafood:
            return "seafood";
        case Value_sportgoods:
            return "sportgoods";
        case Value_beautysvc:
            return "beautysvc";
        case Value_locksmiths:
            return "locksmiths";
        case Value_couriers:
            return "couriers";
        case Value_pest_control:
            return "pest_control";
        case Value_hairstylists:
            return "hairstylists";
        case Value_parks:
            return "parks";
        case Value_carwash:
            return "carwash";
        case Value_spas:
            return "spas";
        case Value_podiatrists:
            return "podiatrists";
        case Value_food:
            return "food";
        case Value_acupuncture:
            return "acupuncture";
        case Value_musicalinstrumentsandteachers:
            return "musicalinstrumentsandteachers";
        case Value_orthodontists:
            return "orthodontists";
        case Value_kitchenandbath:
            return "kitchenandbath";
        case Value_sewingalterations:
            return "sewingalterations";
        case Value_notaries:
            return "notaries";
        case Value_oilchange:
            return "oilchange";
        case Value_eventphotography:
            return "eventphotography";
        case Value_financialservices:
            return "financialservices";
        case Value_groomer:
            return "groomer";
        case Value_retirement_homes:
            return "retirement_homes";
        case Value_officeequipment:
            return "officeequipment";
        case Value_postoffices:
            return "postoffices";
        case Value_isps:
            return "isps";
        case Value_chicken_wings:
            return "chicken_wings";
        case Value_orthopedists:
            return "orthopedists";
        case Value_printmedia:
            return "printmedia";
        case Value_treeservices:
            return "treeservices";
        case Value_waxing:
            return "waxing";
        case Value_collegeuniv:
            return "collegeuniv";
        case Value_psychiatrists:
            return "psychiatrists";
        case Value_tobaccoshops:
            return "tobaccoshops";
        case Value_carpeting:
            return "carpeting";
        case Value_transport:
            return "transport";
        case Value_parking:
            return "parking";
        case Value_bookstores:
            return "bookstores";
        case Value_french:
            return "french";
        case Value_autoinsurance:
            return "autoinsurance";
        case Value_tours:
            return "tours";
        case Value_petstore:
            return "petstore";
        case Value_lifeinsurance:
            return "lifeinsurance";
        case Value_appliances:
            return "appliances";
        case Value_bedbreakfast:
            return "bedbreakfast";
        case Value_shipping_centers:
            return "shipping_centers";
        case Value_markets:
            return "markets";
        case Value_cardiology:
            return "cardiology";
        case Value_masonry_concrete:
            return "masonry_concrete";
        case Value_flowers:
            return "flowers";
        case Value_limos:
            return "limos";
        case Value_windowsinstallation:
            return "windowsinstallation";
        case Value_securitysystems:
            return "securitysystems";
        case Value_photographystores:
            return "photographystores";
        case Value_makeupartists:
            return "makeupartists";
        case Value_truck_rental:
            return "truck_rental";
        case Value_desserts:
            return "desserts";
        case Value_tanning:
            return "tanning";
        case Value_criminaldefense:
            return "criminaldefense";
        case Value_yoga:
            return "yoga";
        case Value_publicservicesgovt:
            return "publicservicesgovt";
        case Value_childcloth:
            return "childcloth";
        case Value_giftshops:
            return "giftshops";
        case Value_homeandgarden:
            return "homeandgarden";
        case Value_autoglass:
            return "autoglass";
        case Value_libraries:
            return "libraries";
        case Value_homeinsurance:
            return "homeinsurance";
        case Value_specialtyschools:
            return "specialtyschools";
        case Value_museums:
            return "museums";
        case Value_opthamalogists:
            return "opthamalogists";
        case Value_discountstore:
            return "discountstore";
        case Value_mattresses:
            return "mattresses";
        case Value_nutritionists:
            return "nutritionists";
        case Value_auto_detailing:
            return "auto_detailing";
        case Value_salad:
            return "salad";
        case Value_gardeners:
            return "gardeners";
        case Value_mags:
            return "mags";
        case Value_artsandcrafts:
            return "artsandcrafts";
        case Value_wineries:
            return "wineries";
        case Value_motorcycledealers:
            return "motorcycledealers";
        case Value_dermatology:
            return "dermatology";
        case Value_golf:
            return "golf";
        case Value_bbq:
            return "bbq";
        case Value_wedding_planning:
            return "wedding_planning";
        case Value_sportswear:
            return "sportswear";
        case Value_handyman:
            return "handyman";
        case Value_healthmarkets:
            return "healthmarkets";
        case Value_japanese:
            return "japanese";
        case Value_stationery:
            return "stationery";
        case Value_eyelashservice:
            return "eyelashservice";
        case Value_sportsmed:
            return "sportsmed";
        case Value_sportsbars:
            return "sportsbars";
        case Value_home_inspectors:
            return "home_inspectors";
        case Value_bankruptcy:
            return "bankruptcy";
        case Value_sushi:
            return "sushi";
        case Value_arts:
            return "arts";
        case Value_bikes:
            return "bikes";
        case Value_toys:
            return "toys";
        case Value_landmarks:
            return "landmarks";
        case Value_gutterservices:
            return "gutterservices";
        case Value_videofilmproductions:
            return "videofilmproductions";
        case Value_tattoo:
            return "tattoo";
        case Value_blinds:
            return "blinds";
        case Value_social_clubs:
            return "social_clubs";
        case Value_foodtrucks:
            return "foodtrucks";
        case Value_lighting:
            return "lighting";
        case Value_indpak:
            return "indpak";
        case Value_businessconsulting:
            return "businessconsulting";
        case Value_gourmet:
            return "gourmet";
        case Value_naturopathic:
            return "naturopathic";
        case Value_transmissionrepair:
            return "transmissionrepair";
        case Value_pet_training:
            return "pet_training";
        case Value_steak:
            return "steak";
        case Value_martialarts:
            return "martialarts";
        case Value_pressurewashers:
            return "pressurewashers";
        case Value_boating:
            return "boating";
        case Value_vintage:
            return "vintage";
        case Value_reupholstery:
            return "reupholstery";
        case Value_adultedu:
            return "adultedu";
        case Value_weightlosscenters:
            return "weightlosscenters";
        case Value_airport_shuttles:
            return "airport_shuttles";
        case Value_juicebars:
            return "juicebars";
        case Value_hairremoval:
            return "hairremoval";
        case Value_videoandgames:
            return "videoandgames";
        case Value_endodontists:
            return "endodontists";
        case Value_djs:
            return "djs";
        case Value_windowwashing:
            return "windowwashing";
        case Value_mobilephonerepair:
            return "mobilephonerepair";
        case Value_pediatric_dentists:
            return "pediatric_dentists";
        case Value_donuts:
            return "donuts";
        case Value_campgrounds:
            return "campgrounds";
        case Value_damagerestoration:
            return "damagerestoration";
        case Value_radiostations:
            return "radiostations";
        case Value_nightlife:
            return "nightlife";
        case Value_pediatricians:
            return "pediatricians";
        case Value_general_litigation:
            return "general_litigation";
        case Value_metalfabricators:
            return "metalfabricators";
        case Value_hobbyshops:
            return "hobbyshops";
        case Value_vacation_rentals:
            return "vacation_rentals";
        case Value_diners:
            return "diners";
        case Value_landscapearchitects:
            return "landscapearchitects";
        case Value_realestatelawyers:
            return "realestatelawyers";
        case Value_junkremovalandhauling:
            return "junkremovalandhauling";
        case Value_packingsupplies:
            return "packingsupplies";
        case Value_cosmeticsurgeons:
            return "cosmeticsurgeons";
        case Value_lifecoach:
            return "lifecoach";
        case Value_medicalspa:
            return "medicalspa";
        case Value_dogwalkers:
            return "dogwalkers";
        case Value_earnosethroat:
            return "earnosethroat";
        case Value_periodontists:
            return "periodontists";
        case Value_tutoring:
            return "tutoring";
        case Value_partysupplies:
            return "partysupplies";
        case Value_fishing:
            return "fishing";
        case Value_wine_bars:
            return "wine_bars";
        case Value_thai:
            return "thai";
        case Value_usedcardealers:
            return "usedcardealers";
        case Value_cabinetry:
            return "cabinetry";
        case Value_musicvenues:
            return "musicvenues";
        case Value_cocktailbars:
            return "cocktailbars";
        case Value_thrift_stores:
            return "thrift_stores";
        case Value_mediterranean:
            return "mediterranean";
        case Value_rehabilitation_center:
            return "rehabilitation_center";
        case Value_fitness:
            return "fitness";
        case Value_guesthouses:
            return "guesthouses";
        case Value_shoerepair:
            return "shoerepair";
        case Value_watches:
            return "watches";
        case Value_fencesgates:
            return "fencesgates";
        case Value_garage_door_services:
            return "garage_door_services";
        case Value_shoppingcenters:
            return "shoppingcenters";
        case Value_bridal:
            return "bridal";
        case Value_cellphoneaccessories:
            return "cellphoneaccessories";
        case Value_vapeshops:
            return "vapeshops";
        case Value_signmaking:
            return "signmaking";
        case Value_dance_schools:
            return "dance_schools";
        case Value_petservices:
            return "petservices";
        case Value_waterheaterinstallrepair:
            return "waterheaterinstallrepair";
        case Value_movietheaters:
            return "movietheaters";
        case Value_businesslawyers:
            return "businesslawyers";
        case Value_partyequipmentrentals:
            return "partyequipmentrentals";
        case Value_drywall:
            return "drywall";
        case Value_hair_extensions:
            return "hair_extensions";
        case Value_urgent_care:
            return "urgent_care";
        case Value_danceclubs:
            return "danceclubs";
        case Value_lounges:
            return "lounges";
        case Value_greek:
            return "greek";
        case Value_paydayloans:
            return "paydayloans";
        case Value_farmersmarket:
            return "farmersmarket";
        case Value_dancestudio:
            return "dancestudio";
        case Value_estateplanning:
            return "estateplanning";
        case Value_windshieldinstallrepair:
            return "windshieldinstallrepair";
        case Value_seafoodmarkets:
            return "seafoodmarkets";
        case Value_hotelstravel:
            return "hotelstravel";
        case Value_electronicsrepair:
            return "electronicsrepair";
        case Value_fabricstores:
            return "fabricstores";
        case Value_septicservices:
            return "septicservices";
        case Value_midwives:
            return "midwives";
        case Value_recyclingcenter:
            return "recyclingcenter";
        case Value_festivals:
            return "festivals";
        case Value_dryclean:
            return "dryclean";
        case Value_pawn:
            return "pawn";
        case Value_tex_mex:
            return "tex-mex";
        case Value_motorcyclerepair:
            return "motorcyclerepair";
        case Value_carpenters:
            return "carpenters";
        case Value_leather:
            return "leather";
        case Value_recording_studios:
            return "recording_studios";
        case Value_smog_check_stations:
            return "smog_check_stations";
        case Value_asianfusion:
            return "asianfusion";
        case Value_fishnchips:
            return "fishnchips";
        case Value_lingerie:
            return "lingerie";
        case Value_payroll:
            return "payroll";
        case Value_laundromat:
            return "laundromat";
        case Value_horsebackriding:
            return "horsebackriding";
        case Value_solarinstallation:
            return "solarinstallation";
        case Value_candy:
            return "candy";
        case Value_football:
            return "football";
        case Value_fooddeliveryservices:
            return "fooddeliveryservices";
        case Value_chocolate:
            return "chocolate";
        case Value_poolservice:
            return "poolservice";
        case Value_localflavor:
            return "localflavor";
        case Value_softwaredevelopment:
            return "softwaredevelopment";
        case Value_vietnamese:
            return "vietnamese";
        case Value_privatetutors:
            return "privatetutors";
        case Value_bookkeepers:
            return "bookkeepers";
        case Value_videographers:
            return "videographers";
        case Value_snowremoval:
            return "snowremoval";
        case Value_musicvideo:
            return "musicvideo";
        case Value_psychologists:
            return "psychologists";
        case Value_swimmingpools:
            return "swimmingpools";
        case Value_irrigation:
            return "irrigation";
        case Value_pets:
            return "pets";
        case Value_televisionserviceproviders:
            return "televisionserviceproviders";
        case Value_screen_printing_tshirt_printing:
            return "screen_printing_tshirt_printing";
        case Value_outdoorgear:
            return "outdoorgear";
        case Value_artsupplies:
            return "artsupplies";
        case Value_duilawyers:
            return "duilawyers";
        case Value_poolcleaners:
            return "poolcleaners";
        case Value_bowling:
            return "bowling";
        case Value_employmentlawyers:
            return "employmentlawyers";
        case Value_framing:
            return "framing";
        case Value_reflexology:
            return "reflexology";
        case Value_british:
            return "british";
        case Value_hiking:
            return "hiking";
        case Value_telecommunications:
            return "telecommunications";
        case Value_summer_camps:
            return "summer_camps";
        case Value_educationservices:
            return "educationservices";
        case Value_active:
            return "active";
        case Value_breweries:
            return "breweries";
        case Value_hearingaidproviders:
            return "hearingaidproviders";
        case Value_assistedliving:
            return "assistedliving";
        case Value_buffets:
            return "buffets";
        case Value_language_schools:
            return "language_schools";
        case Value_commercialrealestate:
            return "commercialrealestate";
        case Value_hotdog:
            return "hotdog";
        case Value_glassandmirrors:
            return "glassandmirrors";
        case Value_pilates:
            return "pilates";
        case Value_reiki:
            return "reiki";
        case Value_doorsales:
            return "doorsales";
        case Value_stereo_installation:
            return "stereo_installation";
        case Value_soup:
            return "soup";
        case Value_insulationinstallation:
            return "insulationinstallation";
        case Value_amusementparks:
            return "amusementparks";
        case Value_legalservices:
            return "legalservices";
        case Value_piercing:
            return "piercing";
        case Value_osteopathicphysicians:
            return "osteopathicphysicians";
        case Value_laser_hair_removal:
            return "laser_hair_removal";
        case Value_airductcleaning:
            return "airductcleaning";
        case Value_arcades:
            return "arcades";
        case Value_boatcharters:
            return "boatcharters";
        case Value_decksrailing:
            return "decksrailing";
        case Value_baby_gear:
            return "baby_gear";
        case Value_recreation:
            return "recreation";
        case Value_kids_activities:
            return "kids_activities";
        case Value_divebars:
            return "divebars";
        case Value_medicalsupplies:
            return "medicalsupplies";
        case Value_tennis:
            return "tennis";
        case Value_photoboothrentals:
            return "photoboothrentals";
        case Value_vinylsiding:
            return "vinylsiding";
        case Value_policedepartments:
            return "policedepartments";
        case Value_tiling:
            return "tiling";
        case Value_cupcakes:
            return "cupcakes";
        case Value_wholesale_stores:
            return "wholesale_stores";
        case Value_hometheatreinstallation:
            return "hometheatreinstallation";
        case Value_surgeons:
            return "surgeons";
        case Value_foodstands:
            return "foodstands";
        case Value_outlet_stores:
            return "outlet_stores";
        case Value_permanentmakeup:
            return "permanentmakeup";
        case Value_foundationrepair:
            return "foundationrepair";
        case Value_immigrationlawyers:
            return "immigrationlawyers";
        case Value_cakeshop:
            return "cakeshop";
        case Value_autocustomization:
            return "autocustomization";
        case Value_tcm:
            return "tcm";
        case Value_publicrelations:
            return "publicrelations";
        case Value_publictransport:
            return "publictransport";
        case Value_allergist:
            return "allergist";
        case Value_tanningbeds:
            return "tanningbeds";
        case Value_paintstores:
            return "paintstores";
        case Value_stadiumsarenas:
            return "stadiumsarenas";
        case Value_bootcamps:
            return "bootcamps";
        case Value_bagels:
            return "bagels";
        case Value_careercounseling:
            return "careercounseling";
        case Value_vitaminssupplements:
            return "vitaminssupplements";
        case Value_privateinvestigation:
            return "privateinvestigation";
        case Value_jewelryrepair:
            return "jewelryrepair";
        case Value_bistros:
            return "bistros";
        case Value_playgrounds:
            return "playgrounds";
        case Value_korean:
            return "korean";
        case Value_bailbondsmen:
            return "bailbondsmen";
        case Value_excavationservices:
            return "excavationservices";
        case Value_creperies:
            return "creperies";
        case Value_hostels:
            return "hostels";
        case Value_eventservices:
            return "eventservices";
        case Value_guns_and_ammo:
            return "guns_and_ammo";
        case Value_vegetarian:
            return "vegetarian";
        case Value_spraytanning:
            return "spraytanning";
        case Value_eyebrowservices:
            return "eyebrowservices";
        case Value_dialysisclinics:
            return "dialysisclinics";
        case Value_hottubandpool:
            return "hottubandpool";
        case Value_animalshelters:
            return "animalshelters";
        case Value_musicians:
            return "musicians";
        case Value_refinishing:
            return "refinishing";
        case Value_artclasses:
            return "artclasses";
        case Value_southern:
            return "southern";
        case Value_willstrustsprobates:
            return "willstrustsprobates";
        case Value_latin:
            return "latin";
        case Value_psychic_astrology:
            return "psychic_astrology";
        case Value_laboratorytesting:
            return "laboratorytesting";
        case Value_home_organization:
            return "home_organization";
        case Value_landsurveying:
            return "landsurveying";
        case Value_artschools:
            return "artschools";
        case Value_watch_repair:
            return "watch_repair";
        case Value_occupationaltherapy:
            return "occupationaltherapy";
        case Value_machinerental:
            return "machinerental";
        case Value_international:
            return "international";
        case Value_massmedia:
            return "massmedia";
        case Value_brasseries:
            return "brasseries";
        case Value_boatrepair:
            return "boatrepair";
        case Value_kebab:
            return "kebab";
        case Value_sharedofficespaces:
            return "sharedofficespaces";
        case Value_blowoutservices:
            return "blowoutservices";
        case Value_fireprotection:
            return "fireprotection";
        case Value_security:
            return "security";
        case Value_truckrepair:
            return "truckrepair";
        case Value_roadsideassist:
            return "roadsideassist";
        case Value_titleloans:
            return "titleloans";
        case Value_poolhalls:
            return "poolhalls";
        case Value_testprep:
            return "testprep";
        case Value_karate:
            return "karate";
        case Value_tea:
            return "tea";
        case Value_appraisalservices:
            return "appraisalservices";
        case Value_butcher:
            return "butcher";
        case Value_screenprinting:
            return "screenprinting";
        case Value_painmanagement:
            return "painmanagement";
        case Value_mortgagelenders:
            return "mortgagelenders";
        case Value_pakistani:
            return "pakistani";
        case Value_costumes:
            return "costumes";
        case Value_wheelrimrepair:
            return "wheelrimrepair";
        case Value_countryclubs:
            return "countryclubs";
        case Value_diagnosticimaging:
            return "diagnosticimaging";
        case Value_media:
            return "media";
        case Value_carpetinstallation:
            return "carpetinstallation";
        case Value_fireplace:
            return "fireplace";
        case Value_vocation:
            return "vocation";
        case Value_beerbar:
            return "beerbar";
        case Value_neurologist:
            return "neurologist";
        case Value_bike_repair_maintenance:
            return "bike_repair_maintenance";
        case Value_televisionstations:
            return "televisionstations";
        case Value_cheese:
            return "cheese";
        case Value_bikerentals:
            return "bikerentals";
        case Value_formalwear:
            return "formalwear";
        case Value_countertopinstall:
            return "countertopinstall";
        case Value_trainstations:
            return "trainstations";
        case Value_chimneysweeps:
            return "chimneysweeps";
        case Value_hospice:
            return "hospice";
        case Value_menshair:
            return "menshair";
        case Value_casinos:
            return "casinos";
        case Value_streetvendors:
            return "streetvendors";
        case Value_caribbean:
            return "caribbean";
        case Value_importedfood:
            return "importedfood";
        case Value_hypnosis:
            return "hypnosis";
        case Value_mideastern:
            return "mideastern";
        case Value_organic_stores:
            return "organic_stores";
        case Value_speech_therapists:
            return "speech_therapists";
        case Value_turkish:
            return "turkish";
        case Value_audiologist:
            return "audiologist";
        case Value_waterproofing:
            return "waterproofing";
        case Value_montessori:
            return "montessori";
        case Value_datarecovery:
            return "datarecovery";
        case Value_laserlasikeyes:
            return "laserlasikeyes";
        case Value_panasian:
            return "panasian";
        case Value_delicatessen:
            return "delicatessen";
        case Value_rvparks:
            return "rvparks";
        case Value_waterpurification:
            return "waterpurification";
        case Value_travelagents:
            return "travelagents";
        case Value_mobileparks:
            return "mobileparks";
        case Value_gluten_free:
            return "gluten_free";
        case Value_karaoke:
            return "karaoke";
        case Value_customcakes:
            return "customcakes";
        case Value_rafting:
            return "rafting";
        case Value_goldbuyers:
            return "goldbuyers";
        case Value_noodles:
            return "noodles";
        case Value_engraving:
            return "engraving";
        case Value_newcanadian:
            return "newcanadian";
        case Value_cosmetology_schools:
            return "cosmetology_schools";
        case Value_propane:
            return "propane";
        case Value_resorts:
            return "resorts";
        case Value_beverage_stores:
            return "beverage_stores";
        case Value_specialed:
            return "specialed";
        case Value_gastropubs:
            return "gastropubs";
        case Value_demolitionservices:
            return "demolitionservices";
        case Value_vegan:
            return "vegan";
        case Value_carwindowtinting:
            return "carwindowtinting";
        case Value_embroideryandcrochet:
            return "embroideryandcrochet";
        case Value_batterystores:
            return "batterystores";
        case Value_beaches:
            return "beaches";
        case Value_adultentertainment:
            return "adultentertainment";
        case Value_intervaltraininggyms:
            return "intervaltraininggyms";
        case Value_radiologists:
            return "radiologists";
        case Value_shutters:
            return "shutters";
        case Value_farmingequipment:
            return "farmingequipment";
        case Value_translationservices:
            return "translationservices";
        case Value_condominiums:
            return "condominiums";
        case Value_homeautomation:
            return "homeautomation";
        case Value_custommerchandise:
            return "custommerchandise";
        case Value_taekwondo:
            return "taekwondo";
        case Value_cannabis_clinics:
            return "cannabis_clinics";
        case Value_autoloanproviders:
            return "autoloanproviders";
        case Value_comfortfood:
            return "comfortfood";
        case Value_welldrilling:
            return "welldrilling";
        case Value_beergarden:
            return "beergarden";
        case Value_packingservices:
            return "packingservices";
        case Value_healthinsurance:
            return "healthinsurance";
        case Value_cajun:
            return "cajun";
        case Value_petboarding:
            return "petboarding";
        case Value_homestaging:
            return "homestaging";
        case Value_threadingservices:
            return "threadingservices";
        case Value_personalchefs:
            return "personalchefs";
        case Value_tapas:
            return "tapas";
        case Value_rugs:
            return "rugs";
        case Value_gastroenterologist:
            return "gastroenterologist";
        case Value_personalcare:
            return "personalcare";
        case Value_floraldesigners:
            return "floraldesigners";
        case Value_bubbletea:
            return "bubbletea";
        case Value_spanish:
            return "spanish";
        case Value_uniforms:
            return "uniforms";
        case Value_cprclasses:
            return "cprclasses";
        case Value_psychics:
            return "psychics";
        case Value_utilities:
            return "utilities";
        case Value_airports:
            return "airports";
        case Value_plus_size_fashion:
            return "plus_size_fashion";
        case Value_vehiclewraps:
            return "vehiclewraps";
        case Value_skatingrinks:
            return "skatingrinks";
        case Value_shavedice:
            return "shavedice";
        case Value_personal_shopping:
            return "personal_shopping";
        case Value_estatephotography:
            return "estatephotography";
        case Value_diagnosticservices:
            return "diagnosticservices";
        case Value_workerscomplaw:
            return "workerscomplaw";
        case Value_knittingsupplies:
            return "knittingsupplies";
        case Value_hookah_bars:
            return "hookah_bars";
        case Value_craneservices:
            return "craneservices";
        case Value_horse_boarding:
            return "horse_boarding";
        case Value_homewindowtinting:
            return "homewindowtinting";
        case Value_swimminglessons:
            return "swimminglessons";
        case Value_rv_dealers:
            return "rv_dealers";
        case Value_tapasmallplates:
            return "tapasmallplates";
        case Value_synagogues:
            return "synagogues";
        case Value_halal:
            return "halal";
        case Value_comicbooks:
            return "comicbooks";
        case Value_boatdealers:
            return "boatdealers";
        case Value_plasticsurgeons:
            return "plasticsurgeons";
        case Value_videogamestores:
            return "videogamestores";
        case Value_modern_european:
            return "modern_european";
        case Value_rvrepair:
            return "rvrepair";
        case Value_gun_ranges:
            return "gun_ranges";
        case Value_oncologist:
            return "oncologist";
        case Value_soulfood:
            return "soulfood";
        case Value_headshops:
            return "headshops";
        case Value_airlines:
            return "airlines";
        case Value_furniturerepair:
            return "furniturerepair";
        case Value_tacos:
            return "tacos";
        case Value_structuralengineers:
            return "structuralengineers";
        case Value_mobilehomes:
            return "mobilehomes";
        case Value_boxing:
            return "boxing";
        case Value_bavarian:
            return "bavarian";
        case Value_lakes:
            return "lakes";
        case Value_trailerdealers:
            return "trailerdealers";
        case Value_luggage:
            return "luggage";
        case Value_culturalcenter:
            return "culturalcenter";
        case Value_skillednursing:
            return "skillednursing";
        case Value_meditationcenters:
            return "meditationcenters";
        case Value_auctionhouses:
            return "auctionhouses";
        case Value_wigs:
            return "wigs";
        case Value_mediators:
            return "mediators";
        case Value_candlestores:
            return "candlestores";
        case Value_taxlaw:
            return "taxlaw";
        case Value_lawnservices:
            return "lawnservices";
        case Value_partybusrentals:
            return "partybusrentals";
        case Value_adult:
            return "adult";
        case Value_urologists:
            return "urologists";
        case Value_trailerrepair:
            return "trailerrepair";
        case Value_swimwear:
            return "swimwear";
        case Value_mini_golf:
            return "mini_golf";
        case Value_pianoservices:
            return "pianoservices";
        case Value_mailboxcenters:
            return "mailboxcenters";
        case Value_blooddonation:
            return "blooddonation";
        case Value_barreclasses:
            return "barreclasses";
        case Value_chickenshop:
            return "chickenshop";
        case Value_dog_parks:
            return "dog_parks";
        case Value_farmequipmentrepair:
            return "farmequipmentrepair";
        case Value_musicproduction:
            return "musicproduction";
        case Value_patiocoverings:
            return "patiocoverings";
        case Value_billingservices:
            return "billingservices";
        case Value_gymnastics:
            return "gymnastics";
        case Value_seniorcenters:
            return "seniorcenters";
        case Value_escapegames:
            return "escapegames";
        case Value_intlgrocery:
            return "intlgrocery";
        case Value_skiresorts:
            return "skiresorts";
        case Value_homenetworkinstall:
            return "homenetworkinstall";
        case Value_doulas:
            return "doulas";
        case Value_homedevelopers:
            return "homedevelopers";
        case Value_awnings:
            return "awnings";
        case Value_vinyl_records:
            return "vinyl_records";
        case Value_perfume:
            return "perfume";
        case Value_hawaiian:
            return "hawaiian";
        case Value_trailerrental:
            return "trailerrental";
        case Value_medicallaw:
            return "medicallaw";
        case Value_orthotics:
            return "orthotics";
        case Value_vacationrentalagents:
            return "vacationrentalagents";
        case Value_herbsandspices:
            return "herbsandspices";
        case Value_autoupholstery:
            return "autoupholstery";
        case Value_diving:
            return "diving";
        case Value_flightinstruction:
            return "flightinstruction";
        case Value_coffeeroasteries:
            return "coffeeroasteries";
        case Value_cremationservices:
            return "cremationservices";
        case Value_cookingschools:
            return "cookingschools";
        case Value_coffeeteasupplies:
            return "coffeeteasupplies";
        case Value_environmentaltesting:
            return "environmentaltesting";
        case Value_trophyshops:
            return "trophyshops";
        case Value_firstaidclasses:
            return "firstaidclasses";
        case Value_vehicleshipping:
            return "vehicleshipping";
        case Value_personalassistants:
            return "personalassistants";
        case Value_psychotherapists:
            return "psychotherapists";
        case Value_dumpsterrental:
            return "dumpsterrental";
        case Value_shredding:
            return "shredding";
        case Value_teethwhitening:
            return "teethwhitening";
        case Value_enviroabatement:
            return "enviroabatement";
        case Value_saunas:
            return "saunas";
        case Value_petadoption:
            return "petadoption";
        case Value_sleepspecialists:
            return "sleepspecialists";
        case Value_officiants:
            return "officiants";
        case Value_souvenirs:
            return "souvenirs";
        case Value_rvrental:
            return "rvrental";
        case Value_medicaltransportation:
            return "medicaltransportation";
        case Value_paintandsip:
            return "paintandsip";
        case Value_editorialservices:
            return "editorialservices";
        case Value_huntingfishingsupplies:
            return "huntingfishingsupplies";
        case Value_estateliquidation:
            return "estateliquidation";
        case Value_jazzandblues:
            return "jazzandblues";
        case Value_wallpapering:
            return "wallpapering";
        case Value_firewood:
            return "firewood";
        case Value_magicians:
            return "magicians";
        case Value_hairloss:
            return "hairloss";
        case Value_petphotography:
            return "petphotography";
        case Value_wildlifecontrol:
            return "wildlifecontrol";
        case Value_gardens:
            return "gardens";
        case Value_debtrelief:
            return "debtrelief";
        case Value_carbuyers:
            return "carbuyers";
        case Value_buses:
            return "buses";
        case Value_cheesesteaks:
            return "cheesesteaks";
        case Value_musicinstrumentservices:
            return "musicinstrumentservices";
        case Value_sportsteams:
            return "sportsteams";
        case Value_kickboxing:
            return "kickboxing";
        case Value_balloonservices:
            return "balloonservices";
        case Value_maternity:
            return "maternity";
        case Value_guitarstores:
            return "guitarstores";
        case Value_motorcyclinggear:
            return "motorcyclinggear";
        case Value_tattooremoval:
            return "tattooremoval";
        case Value_religiousschools:
            return "religiousschools";
        case Value_cuban:
            return "cuban";
        case Value_paddleboarding:
            return "paddleboarding";
        case Value_fleamarkets:
            return "fleamarkets";
        case Value_endocrinologists:
            return "endocrinologists";
        case Value_marinas:
            return "marinas";
        case Value_christmastrees:
            return "christmastrees";
        case Value_university_housing:
            return "university_housing";
        case Value_cannabisdispensaries:
            return "cannabisdispensaries";
        case Value_stucco:
            return "stucco";
        case Value_ramen:
            return "ramen";
        case Value_kiosk:
            return "kiosk";
        case Value_departmentsofmotorvehicles:
            return "departmentsofmotorvehicles";
        case Value_zoos:
            return "zoos";
        case Value_petbreeders:
            return "petbreeders";
        case Value_comedyclubs:
            return "comedyclubs";
        case Value_walkinclinics:
            return "walkinclinics";
        case Value_communitycenters:
            return "communitycenters";
        case Value_pretzels:
            return "pretzels";
        case Value_cookingclasses:
            return "cookingclasses";
        case Value_installmentloans:
            return "installmentloans";
        case Value_fertility:
            return "fertility";
        case Value_bespoke:
            return "bespoke";
        case Value_pulmonologist:
            return "pulmonologist";
        case Value_nailtechnicians:
            return "nailtechnicians";
        case Value_daycamps:
            return "daycamps";
        case Value_firearmtraining:
            return "firearmtraining";
        case Value_powdercoating:
            return "powdercoating";
        case Value_facepainting:
            return "facepainting";
        case Value_lebanese:
            return "lebanese";
        case Value_bingo:
            return "bingo";
        case Value_winetours:
            return "winetours";
        case Value_outdoorfurniture:
            return "outdoorfurniture";
        case Value_truckdealers:
            return "truckdealers";
        case Value_tvmounting:
            return "tvmounting";
        case Value_hats:
            return "hats";
        case Value_currencyexchange:
            return "currencyexchange";
        case Value_nursepractitioner:
            return "nursepractitioner";
        case Value_wholesalers:
            return "wholesalers";
        case Value_prosthetics:
            return "prosthetics";
        case Value_talentagencies:
            return "talentagencies";
        case Value_fitnessequipment:
            return "fitnessequipment";
        case Value_winetastingroom:
            return "winetastingroom";
        case Value_castles:
            return "castles";
        case Value_african:
            return "african";
        case Value_peruvian:
            return "peruvian";
        case Value_waterdelivery:
            return "waterdelivery";
        case Value_irish_pubs:
            return "irish_pubs";
        case Value_groutservices:
            return "groutservices";
        case Value_farms:
            return "farms";
        case Value_irish:
            return "irish";
        case Value_hearing_aids:
            return "hearing_aids";
        case Value_internetcafe:
            return "internetcafe";
        case Value_courthouses:
            return "courthouses";
        case Value_filipino:
            return "filipino";
        case Value_buddhist_temples:
            return "buddhist_temples";
        case Value_waffles:
            return "waffles";
        case Value_brazilianjiujitsu:
            return "brazilianjiujitsu";
        case Value_sandblasting:
            return "sandblasting";
        case Value_scuba:
            return "scuba";
        case Value_generatorinstallrepair:
            return "generatorinstallrepair";
        case Value_portuguese:
            return "portuguese";
        case Value_nephrologists:
            return "nephrologists";
        case Value_bartenders:
            return "bartenders";
        case Value_hifi:
            return "hifi";
        case Value_diyfood:
            return "diyfood";
        case Value_housingcooperatives:
            return "housingcooperatives";
        case Value_carbrokers:
            return "carbrokers";
        case Value_golfequipment:
            return "golfequipment";
        case Value_firedepartments:
            return "firedepartments";
        case Value_races:
            return "races";
        case Value_skishops:
            return "skishops";
        case Value_golflessons:
            return "golflessons";
        case Value_selfdefenseclasses:
            return "selfdefenseclasses";
        case Value_addictionmedicine:
            return "addictionmedicine";
        case Value_towncarservice:
            return "towncarservice";
        case Value_livestocksupply:
            return "livestocksupply";
        case Value_gaybars:
            return "gaybars";
        case Value_taichi:
            return "taichi";
        case Value_townhall:
            return "townhall";
        case Value_gelato:
            return "gelato";
        case Value_climbing:
            return "climbing";
        case Value_nannys:
            return "nannys";
        case Value_registrationservices:
            return "registrationservices";
        case Value_dimsum:
            return "dimsum";
        case Value_smokehouse:
            return "smokehouse";
        case Value_prosthodontists:
            return "prosthodontists";
        case Value_skateshops:
            return "skateshops";
        case Value_hennaartists:
            return "hennaartists";
        case Value_furnitureassembly:
            return "furnitureassembly";
        case Value_wraps:
            return "wraps";
        case Value_cyclingclasses:
            return "cyclingclasses";
        case Value_aquariumservices:
            return "aquariumservices";
        case Value_pathologists:
            return "pathologists";
        case Value_poke:
            return "poke";
        case Value_anesthesiologists:
            return "anesthesiologists";
        case Value_machineshops:
            return "machineshops";
        case Value_artificialturf:
            return "artificialturf";
        case Value_archery:
            return "archery";
        case Value_salvadoran:
            return "salvadoran";
        case Value_csa:
            return "csa";
        case Value_cardioclasses:
            return "cardioclasses";
        case Value_pensions:
            return "pensions";
        case Value_historicaltours:
            return "historicaltours";
        case Value_paintball:
            return "paintball";
        case Value_chinesemartialarts:
            return "chinesemartialarts";
        case Value_horsequipment:
            return "horsequipment";
        case Value_spiritual_shop:
            return "spiritual_shop";
        case Value_lactationservices:
            return "lactationservices";
        case Value_mortuaryservices:
            return "mortuaryservices";
        case Value_commissionedartists:
            return "commissionedartists";
        case Value_kosher:
            return "kosher";
        case Value_collegecounseling:
            return "collegecounseling";
        case Value_safestores:
            return "safestores";
        case Value_walkingtours:
            return "walkingtours";
        case Value_rhematologists:
            return "rhematologists";
        case Value_aquariums:
            return "aquariums";
        case Value_parentingclasses:
            return "parentingclasses";
        case Value_hydrojetting:
            return "hydrojetting";
        case Value_mobilityequipment:
            return "mobilityequipment";
        case Value_processservers:
            return "processservers";
        case Value_popcorn:
            return "popcorn";
        case Value_currysausage:
            return "currysausage";
        case Value_mosques:
            return "mosques";
        case Value_mountainbiking:
            return "mountainbiking";
        case Value_boudoirphotography:
            return "boudoirphotography";
        case Value_swabian:
            return "swabian";
        case Value_distilleries:
            return "distilleries";
        case Value_moroccan:
            return "moroccan";
        case Value_fireworks:
            return "fireworks";
        case Value_roofinspectors:
            return "roofinspectors";
        case Value_eldercareplanning:
            return "eldercareplanning";
        case Value_surfing:
            return "surfing";
        case Value_cafeteria:
            return "cafeteria";
        case Value_grillingequipment:
            return "grillingequipment";
        case Value_brazilian:
            return "brazilian";
        case Value_homeenergyauditors:
            return "homeenergyauditors";
        case Value_cantonese:
            return "cantonese";
        case Value_retinaspecialists:
            return "retinaspecialists";
        case Value_foodbanks:
            return "foodbanks";
        case Value_metrostations:
            return "metrostations";
        case Value_trafficticketinglaw:
            return "trafficticketinglaw";
        case Value_businessfinancing:
            return "businessfinancing";
        case Value_matchmakers:
            return "matchmakers";
        case Value_food_court:
            return "food_court";
        case Value_teambuilding:
            return "teambuilding";
        case Value_visitorcenters:
            return "visitorcenters";
        case Value_suppliesrestaurant:
            return "suppliesrestaurant";
        case Value_ticketsales:
            return "ticketsales";
        case Value_religiousitems:
            return "religiousitems";
        case Value_lasertag:
            return "lasertag";
        case Value_tabletopgames:
            return "tabletopgames";
        case Value_courtreporters:
            return "courtreporters";
        case Value_pettransport:
            return "pettransport";
        case Value_autodamageassessment:
            return "autodamageassessment";
        case Value_childbirthedu:
            return "childbirthedu";
        case Value_knifesharpening:
            return "knifesharpening";
        case Value_acaibowls:
            return "acaibowls";
        case Value_pastashops:
            return "pastashops";
        case Value_persian:
            return "persian";
        case Value_bustours:
            return "bustours";
        case Value_taiwanese:
            return "taiwanese";
        case Value_boattours:
            return "boattours";
        case Value_serbocroatian:
            return "serbocroatian";
        case Value_usedbooks:
            return "usedbooks";
        case Value_pianostores:
            return "pianostores";
        case Value_mobiledentrepair:
            return "mobiledentrepair";
        case Value_clockrepair:
            return "clockrepair";
        case Value_valetservices:
            return "valetservices";
        case Value_donationcenter:
            return "donationcenter";
        case Value_szechuan:
            return "szechuan";
        case Value_reststops:
            return "reststops";
        case Value_taxidermy:
            return "taxidermy";
        case Value_sugaring:
            return "sugaring";
        case Value_mongolian:
            return "mongolian";
        case Value_basketballcourts:
            return "basketballcourts";
        case Value_carauctions:
            return "carauctions";
        case Value_rentfurniture:
            return "rentfurniture";
        case Value_falafel:
            return "falafel";
        case Value_gokarts:
            return "gokarts";
        case Value_partycharacters:
            return "partycharacters";
        case Value_opera:
            return "opera";
        case Value_clowns:
            return "clowns";
        case Value_vascularmedicine:
            return "vascularmedicine";
        case Value_tenantlaw:
            return "tenantlaw";
        case Value_psychicmediums:
            return "psychicmediums";
        case Value_skate_parks:
            return "skate_parks";
        case Value_beergardens:
            return "beergardens";
        case Value_fingerprinting:
            return "fingerprinting";
        case Value_liceservices:
            return "liceservices";
        case Value_speechtraining:
            return "speechtraining";
        case Value_spinesurgeons:
            return "spinesurgeons";
        case Value_socialsecuritylaw:
            return "socialsecuritylaw";
        case Value_emergencyrooms:
            return "emergencyrooms";
        case Value_iplaw:
            return "iplaw";
        case Value_poolbilliards:
            return "poolbilliards";
        case Value_battingcages:
            return "battingcages";
        case Value_bouncehouserentals:
            return "bouncehouserentals";
        case Value_safetyequipment:
            return "safetyequipment";
        case Value_surfshop:
            return "surfshop";
        case Value_hotpot:
            return "hotpot";
        case Value_healthcoach:
            return "healthcoach";
        case Value_colombian:
            return "colombian";
        case Value_racetracks:
            return "racetracks";
        case Value_ethiopian:
            return "ethiopian";
        case Value_dentalhygienists:
            return "dentalhygienists";
        case Value_backshop:
            return "backshop";
        case Value_cryotherapy:
            return "cryotherapy";
        case Value_weddingchappels:
            return "weddingchappels";
        case Value_trampoline:
            return "trampoline";
        case Value_macarons:
            return "macarons";
        case Value_adoptionservices:
            return "adoptionservices";
        case Value_acnetreatment:
            return "acnetreatment";
        case Value_prenatal:
            return "prenatal";
        case Value_massage_schools:
            return "massage_schools";
        case Value_contractlaw:
            return "contractlaw";
        case Value_jetskis:
            return "jetskis";
        case Value_medicalfoot:
            return "medicalfoot";
        case Value_productdesign:
            return "productdesign";
        case Value_homeownerassociation:
            return "homeownerassociation";
        case Value_yelpevents:
            return "yelpevents";
        case Value_tuina:
            return "tuina";
        case Value_sailing:
            return "sailing";
        case Value_dietitians:
            return "dietitians";
        case Value_hospitalists:
            return "hospitalists";
        case Value_foodtours:
            return "foodtours";
        case Value_autosecurity:
            return "autosecurity";
        case Value_hauntedhouses:
            return "hauntedhouses";
        case Value_wildlifehunting:
            return "wildlifehunting";
        case Value_herbalshops:
            return "herbalshops";
        case Value_clothingrental:
            return "clothingrental";
        case Value_tableware:
            return "tableware";
        case Value_brewingsupplies:
            return "brewingsupplies";
        case Value_embassy:
            return "embassy";
        case Value_baseballfields:
            return "baseballfields";
        case Value_concept_shops:
            return "concept_shops";
        case Value_furclothing:
            return "furclothing";
        case Value_linens:
            return "linens";
        case Value_himalayan:
            return "himalayan";
        case Value_rock_climbing:
            return "rock_climbing";
        case Value_popupshops:
            return "popupshops";
        case Value_gunsmith:
            return "gunsmith";
        case Value_publicplazas:
            return "publicplazas";
        case Value_argentine:
            return "argentine";
        case Value_discgolf:
            return "discgolf";
        case Value_hockeyequipment:
            return "hockeyequipment";
        case Value_golfcartdealers:
            return "golfcartdealers";
        case Value_passportvisaservices:
            return "passportvisaservices";
        case Value_artrestoration:
            return "artrestoration";
        case Value_ayurveda:
            return "ayurveda";
        case Value_artmuseums:
            return "artmuseums";
        case Value_localfishstores:
            return "localfishstores";
        case Value_emergencypethospital:
            return "emergencypethospital";
        case Value_bettingcenters:
            return "bettingcenters";
        case Value_housesitters:
            return "housesitters";
        case Value_backflowservices:
            return "backflowservices";
        case Value_hazardouswastedisposal:
            return "hazardouswastedisposal";
        case Value_waterstores:
            return "waterstores";
        case Value_afghani:
            return "afghani";
        case Value_polish:
            return "polish";
        case Value_hydroponics:
            return "hydroponics";
        case Value_fondue:
            return "fondue";
        case Value_pumpkinpatches:
            return "pumpkinpatches";
        case Value_skydiving:
            return "skydiving";
        case Value_pickyourown:
            return "pickyourown";
        case Value_colonics:
            return "colonics";
        case Value_holidaydecorations:
            return "holidaydecorations";
        case Value_sextherapists:
            return "sextherapists";
        case Value_xmasmarkets:
            return "xmasmarkets";
        case Value_behavioranalysts:
            return "behavioranalysts";
        case Value_paintyourownpottery:
            return "paintyourownpottery";
        case Value_ranches:
            return "ranches";
        case Value_tradclothing:
            return "tradclothing";
        case Value_dancewear:
            return "dancewear";
        case Value_attractionfarms:
            return "attractionfarms";
        case Value_indoor_playcenter:
            return "indoor_playcenter";
        case Value_3dprinting:
            return "3dprinting";
        case Value_motodealers:
            return "motodealers";
        case Value_oliveoil:
            return "oliveoil";
        case Value_bookbinding:
            return "bookbinding";
        case Value_dominican:
            return "dominican";
        case Value_fengshui:
            return "fengshui";
        case Value_russian:
            return "russian";
        case Value_puertorican:
            return "puertorican";
        case Value_bodycontouring:
            return "bodycontouring";
        case Value_waterparks:
            return "waterparks";
        case Value_atvrentals:
            return "atvrentals";
        case Value_hindu_temples:
            return "hindu_temples";
        case Value_raw_food:
            return "raw_food";
        case Value_basque:
            return "basque";
        case Value_hydrotherapy:
            return "hydrotherapy";
        case Value_airportlounges:
            return "airportlounges";
        case Value_arabian:
            return "arabian";
        case Value_muaythai:
            return "muaythai";
        case Value_marchingbands:
            return "marchingbands";
        case Value_challengecourses:
            return "challengecourses";
        case Value_placentaencapsulation:
            return "placentaencapsulation";
        case Value_empanadas:
            return "empanadas";
        case Value_healthretreats:
            return "healthretreats";
        case Value_brewpubs:
            return "brewpubs";
        case Value_junkyards:
            return "junkyards";
        case Value_solarpanelcleaning:
            return "solarpanelcleaning";
        case Value_motorepairs:
            return "motorepairs";
        case Value_audiovisualequipmentrental:
            return "audiovisualequipmentrental";
        case Value_canteen:
            return "canteen";
        case Value_emergencymedicine:
            return "emergencymedicine";
        case Value_homeopathic:
            return "homeopathic";
        case Value_patentlaw:
            return "patentlaw";
        case Value_petcremation:
            return "petcremation";
        case Value_disabilitylaw:
            return "disabilitylaw";
        case Value_alternativemedicine:
            return "alternativemedicine";
        case Value_privatejetcharter:
            return "privatejetcharter";
        case Value_seasonaldecorservices:
            return "seasonaldecorservices";
        case Value_circuittraininggyms:
            return "circuittraininggyms";
        case Value_civiccenter:
            return "civiccenter";
        case Value_qigong:
            return "qigong";
        case Value_shoeshine:
            return "shoeshine";
        case Value_militarysurplus:
            return "militarysurplus";
        case Value_floatspa:
            return "floatspa";
        case Value_memorycare:
            return "memorycare";
        case Value_eroticmassage:
            return "eroticmassage";
        case Value_sud_ouest:
            return "sud_ouest";
        case Value_easterngerman:
            return "easterngerman";
        case Value_motorcycle_rental:
            return "motorcycle_rental";
        case Value_calligraphy:
            return "calligraphy";
        case Value_donairs:
            return "donairs";
        case Value_ivhydration:
            return "ivhydration";
        case Value_bangladeshi:
            return "bangladeshi";
        case Value_publicadjusters:
            return "publicadjusters";
        case Value_whiskeybars:
            return "whiskeybars";
        case Value_tikibars:
            return "tikibars";
        case Value_birdshops:
            return "birdshops";
        case Value_publicart:
            return "publicart";
        case Value_poledancingclasses:
            return "poledancingclasses";
        case Value_surfschools:
            return "surfschools";
        case Value_evchargingstations:
            return "evchargingstations";
        case Value_infectiousdisease:
            return "infectiousdisease";
        case Value_golfcartrentals:
            return "golfcartrentals";
        case Value_nursingschools:
            return "nursingschools";
        case Value_malaysian:
            return "malaysian";
        case Value_artspacerentals:
            return "artspacerentals";
        case Value_poutineries:
            return "poutineries";
        case Value_cabaret:
            return "cabaret";
        case Value_digitizingservices:
            return "digitizingservices";
        case Value_aircraftrepairs:
            return "aircraftrepairs";
        case Value_trafficschools:
            return "trafficschools";
        case Value_venezuelan:
            return "venezuelan";
        case Value_proctologist:
            return "proctologist";
        case Value_austrian:
            return "austrian";
        case Value_belgian:
            return "belgian";
        case Value_hot_air_balloons:
            return "hot_air_balloons";
        case Value_busrental:
            return "busrental";
        case Value_aircraftdealers:
            return "aircraftdealers";
        case Value_beachequipmentrental:
            return "beachequipmentrental";
        case Value_privateschools:
            return "privateschools";
        case Value_veteransorganizations:
            return "veteransorganizations";
        case Value_alsatian:
            return "alsatian";
        case Value_communitygardens:
            return "communitygardens";
        case Value_snorkeling:
            return "snorkeling";
        case Value_cheerleading:
            return "cheerleading";
        case Value_honey:
            return "honey";
        case Value_fischbroetchen:
            return "fischbroetchen";
        case Value_beachbars:
            return "beachbars";
        case Value_conciergemedicine:
            return "conciergemedicine";
        case Value_tubing:
            return "tubing";
        case Value_cideries:
            return "cideries";
        case Value_horseracing:
            return "horseracing";
        case Value_customsbrokers:
            return "customsbrokers";
        case Value_provencal:
            return "provencal";
        case Value_waldorfschools:
            return "waldorfschools";
        case Value_newmexican:
            return "newmexican";
        case Value_scottish:
            return "scottish";
        case Value_cannabisreferrals:
            return "cannabisreferrals";
        case Value_pianobars:
            return "pianobars";
        case Value_generalfestivals:
            return "generalfestivals";
        case Value_fencing:
            return "fencing";
        case Value_champagne_bars:
            return "champagne_bars";
        case Value_gametruckrental:
            return "gametruckrental";
        case Value_diveshops:
            return "diveshops";
        case Value_driveintheater:
            return "driveintheater";
        case Value_carshares:
            return "carshares";
        case Value_palatine:
            return "palatine";
        case Value_childrensmuseums:
            return "childrensmuseums";
        case Value_trains:
            return "trains";
        case Value_gerontologist:
            return "gerontologist";
        case Value_streetart:
            return "streetart";
        case Value_zipline:
            return "zipline";
        case Value_caricatures:
            return "caricatures";
        case Value_teppanyaki:
            return "teppanyaki";
        case Value_underseamedicine:
            return "underseamedicine";
        case Value_cambodian:
            return "cambodian";
        case Value_animalholistic:
            return "animalholistic";
        case Value_oriental:
            return "oriental";
        case Value_wok:
            return "wok";
        case Value_popuprestaurants:
            return "popuprestaurants";
        case Value_fishmonger:
            return "fishmonger";
        case Value_schnitzel:
            return "schnitzel";
        case Value_dutyfreeshops:
            return "dutyfreeshops";
        case Value_frozenfood:
            return "frozenfood";
        case Value_skiing:
            return "skiing";
        case Value_airsoft:
            return "airsoft";
        case Value_preventivemedicine:
            return "preventivemedicine";
        case Value_biketours:
            return "biketours";
        case Value_winetasteclasses:
            return "winetasteclasses";
        case Value_baden:
            return "baden";
        case Value_stripclubs:
            return "stripclubs";
        case Value_northerngerman:
            return "northerngerman";
        case Value_golfshops:
            return "golfshops";
        case Value_icedelivery:
            return "icedelivery";
        case Value_laotian:
            return "laotian";
        case Value_beertours:
            return "beertours";
        case Value_farriers:
            return "farriers";
        case Value_ferries:
            return "ferries";
        case Value_stripteasedancers:
            return "stripteasedancers";
        case Value_aerialfitness:
            return "aerialfitness";
        case Value_haitian:
            return "haitian";
        case Value_aerialtours:
            return "aerialtours";
        case Value_homelessshelters:
            return "homelessshelters";
        case Value_pethospice:
            return "pethospice";
        case Value_bikesharing:
            return "bikesharing";
        case Value_bartendingschools:
            return "bartendingschools";
        case Value_scooterrentals:
            return "scooterrentals";
        case Value_observatories:
            return "observatories";
        case Value_sikhtemples:
            return "sikhtemples";
        case Value_kiteboarding:
            return "kiteboarding";
        case Value_psychoanalysts:
            return "psychoanalysts";
        case Value_speakeasies:
            return "speakeasies";
        case Value_hessian:
            return "hessian";
        case Value_corsican:
            return "corsican";
        case Value_communitybookbox:
            return "communitybookbox";
        case Value_dinnertheater:
            return "dinnertheater";
        case Value_cannabiscollective:
            return "cannabiscollective";
        case Value_astrologers:
            return "astrologers";
        case Value_scavengerhunts:
            return "scavengerhunts";
        case Value_indonesian:
            return "indonesian";
        case Value_bocceball:
            return "bocceball";
        case Value_pettingzoos:
            return "pettingzoos";
        case Value_entertainmentlaw:
            return "entertainmentlaw";
        case Value_emstraining:
            return "emstraining";
        case Value_whalewatchingtours:
            return "whalewatchingtours";
        case Value_childproofing:
            return "childproofing";
        case Value_marketstalls:
            return "marketstalls";
        case Value_animalphysicaltherapy:
            return "animalphysicaltherapy";
        case Value_airportterminals:
            return "airportterminals";
        case Value_vocalcoach:
            return "vocalcoach";
        case Value_indoorlandscaping:
            return "indoorlandscaping";
        case Value_arttours:
            return "arttours";
        case Value_friterie:
            return "friterie";
        case Value_mobile_home_repair:
            return "mobile_home_repair";
        case Value_shanghainese:
            return "shanghainese";
        case Value_izakaya:
            return "izakaya";
        case Value_armenian:
            return "armenian";
        case Value_flowersonly:
            return "flowersonly";
        case Value_cigarbars:
            return "cigarbars";
        case Value_scandinavian:
            return "scandinavian";
        case Value_ethnicmarkets:
            return "ethnicmarkets";
        case Value_hepatologists:
            return "hepatologists";
        case Value_choirs:
            return "choirs";
        case Value_otologists:
            return "otologists";
        case Value_eatertainment:
            return "eatertainment";
        case Value_duplicationservices:
            return "duplicationservices";
        case Value_halotherapy:
            return "halotherapy";
        case Value_duischools:
            return "duischools";
        case Value_kombucha:
            return "kombucha";
        case Value_registry_office:
            return "registry_office";
        case Value_hungarian:
            return "hungarian";
        case Value_skischools:
            return "skischools";
        case Value_props:
            return "props";
        case Value_countrydancehalls:
            return "countrydancehalls";
        case Value_neurotologists:
            return "neurotologists";
        case Value_petinsurance:
            return "petinsurance";
        case Value_outdoormovies:
            return "outdoormovies";
        case Value_publicmarkets:
            return "publicmarkets";
        case Value_tradefairs:
            return "tradefairs";
        case Value_bubblesoccer:
            return "bubblesoccer";
        case Value_phlebologists:
            return "phlebologists";
        case Value_teachersupplies:
            return "teachersupplies";
        case Value_architecturaltours:
            return "architecturaltours";
        case Value_shavedsnow:
            return "shavedsnow";
        case Value_badminton:
            return "badminton";
        case Value_habilitativeservices:
            return "habilitativeservices";
        case Value_busstations:
            return "busstations";
        case Value_foodsafety:
            return "foodsafety";
        case Value_kitchenincubators:
            return "kitchenincubators";
        case Value_flyboarding:
            return "flyboarding";
        case Value_pedicabs:
            return "pedicabs";
        case Value_planetarium:
            return "planetarium";
        case Value_themedcafes:
            return "themedcafes";
        case Value_fueldocks:
            return "fueldocks";
        case Value_sophrologists:
            return "sophrologists";
        case Value_freediving:
            return "freediving";
        case Value_milkshakebars:
            return "milkshakebars";
        case Value_toxicologists:
            return "toxicologists";
        case Value_lyonnais:
            return "lyonnais";
        case Value_geneticists:
            return "geneticists";
        case Value_virtualrealitycenters:
            return "virtualrealitycenters";
        case Value_photoclasses:
            return "photoclasses";
        case Value_hanggliding:
            return "hanggliding";
        case Value_municipality:
            return "municipality";
        case Value_reptileshops:
            return "reptileshops";
        case Value_carousels:
            return "carousels";
        case Value_singaporean:
            return "singaporean";
        case Value_oxygenbars:
            return "oxygenbars";
        case Value_squash:
            return "squash";
        case Value_forestry:
            return "forestry";
        case Value_burmese:
            return "burmese";
        case Value_lancenters:
            return "lancenters";
        case Value_sledding:
            return "sledding";
        case Value_playsets:
            return "playsets";
        case Value_racingexperience:
            return "racingexperience";
        case Value_australian:
            return "australian";
        case Value_srilankan:
            return "srilankan";
        case Value_rotisserie_chicken:
            return "rotisserie_chicken";
        case Value_tabac:
            return "tabac";
        case Value_gliding:
            return "gliding";
        case Value_immunodermatologists:
            return "immunodermatologists";
        case Value_ukrainian:
            return "ukrainian";
        case Value_czech:
            return "czech";
        case Value_sportspsychologists:
            return "sportspsychologists";
        case Value_barcrawl:
            return "barcrawl";
        case Value_drivethrubars:
            return "drivethrubars";
        case Value_honduran:
            return "honduran";
        case Value_neuropathologists:
            return "neuropathologists";
        case Value_supperclubs:
            return "supperclubs";
        case Value_baguettes:
            return "baguettes";
        case Value_sommelierservices:
            return "sommelierservices";
        case Value_syrian:
            return "syrian";
        case Value_parasailing:
            return "parasailing";
        case Value_sunglasses:
            return "sunglasses";
        case Value_rodeo:
            return "rodeo";
        case Value_rhinelandian:
            return "rhinelandian";
        case Value_egyptian:
            return "egyptian";
        case Value_triviahosts:
            return "triviahosts";
        case Value_tickets:
            return "tickets";
        case Value_cannabistours:
            return "cannabistours";
        case Value_youth_club:
            return "youth_club";
        case Value_unofficialyelpevents:
            return "unofficialyelpevents";
        case Value_interlocksystems:
            return "interlocksystems";
        case Value_southafrican:
            return "southafrican";
        case Value_partybikerentals:
            return "partybikerentals";
        case Value_funfair:
            return "funfair";
        case Value_animalassistedtherapy:
            return "animalassistedtherapy";
        case Value_beerhall:
            return "beerhall";
        case Value_glassblowing:
            return "glassblowing";
        case Value_hkcafe:
            return "hkcafe";
        case Value_auvergnat:
            return "auvergnat";
        case Value_eltern_cafes:
            return "eltern_cafes";
        case Value_trinidadian:
            return "trinidadian";
        case Value_mountainhuts:
            return "mountainhuts";
        case Value_flatbread:
            return "flatbread";
        case Value_conveyorsushi:
            return "conveyorsushi";
        case Value_potatoes:
            return "potatoes";
        case Value_dramaschools:
            return "dramaschools";
        case Value_japacurry:
            return "japacurry";
        case Value_scootertours:
            return "scootertours";
        case Value_reunion:
            return "reunion";
        case Value_ultrasoundimagingcenters:
            return "ultrasoundimagingcenters";
        case Value_luggagestorage:
            return "luggagestorage";
        case Value_carpetdyeing:
            return "carpetdyeing";
        case Value_nicaraguan:
            return "nicaraguan";
        case Value_kidshairsalons:
            return "kidshairsalons";
        case Value_boatpartsandsupplies:
            return "boatpartsandsupplies";
        case Value_uzbek:
            return "uzbek";
        case Value_ethicgrocery:
            return "ethicgrocery";
        case Value_studiotaping:
            return "studiotaping";
        case Value_senegalese:
            return "senegalese";
        case Value_cablecars:
            return "cablecars";
        case Value_bourguignon:
            return "bourguignon";
        case Value_taxoffice:
            return "taxoffice";
        case Value_saunainstallation:
            return "saunainstallation";
        case Value_silentdisco:
            return "silentdisco";
        case Value_makerspaces:
            return "makerspaces";
        case Value_agriturismi:
            return "agriturismi";
        case Value_swissfood:
            return "swissfood";
        case Value_bathing_area:
            return "bathing_area";
        case Value_hybridcarrepair:
            return "hybridcarrepair";
        case Value_lightingstores:
            return "lightingstores";
        case Value_nudist:
            return "nudist";
        case Value_mystics:
            return "mystics";
        case Value_halfwayhouses:
            return "halfwayhouses";
        case Value_axethrowing:
            return "axethrowing";
        case Value_tastingclasses:
            return "tastingclasses";
        case Value_tuscan:
            return "tuscan";
        case Value_diyautoshop:
            return "diyautoshop";
        case Value_clubcrawl:
            return "clubcrawl";
        case Value_nicois:
            return "nicois";
        case Value_aestheticians:
            return "aestheticians";
        case Value_mohels:
            return "mohels";
        case Value_bulgarian:
            return "bulgarian";
        case Value_estheticians:
            return "estheticians";
        case Value_catalan:
            return "catalan";
        case Value_service_stations:
            return "service_stations";
        case Value_experiences:
            return "experiences";
        case Value_record_labels:
            return "record_labels";
        case Value_parklets:
            return "parklets";
        case Value_eastern_european:
            return "eastern_european";
        case Value_organdonorservices:
            return "organdonorservices";
        case Value_napoletana:
            return "napoletana";
        case Value_bikeparking:
            return "bikeparking";
        case Value_kitchensupplies:
            return "kitchensupplies";
        case Value_hakka:
            return "hakka";
        case Value_sicilian:
            return "sicilian";
        case Value_hotsprings:
            return "hotsprings";
        case Value_ateliers:
            return "ateliers";
        case Value_franconian:
            return "franconian";
        case Value_mistingsystemservices:
            return "mistingsystemservices";
        case Value_spermclinic:
            return "spermclinic";
        case Value_jewish:
            return "jewish";
        case Value_trattorie:
            return "trattorie";
        case Value_gluhwein:
            return "gluhwein";
        case Value_georgian:
            return "georgian";
        case Value_watertaxis:
            return "watertaxis";
        case Value_romanian:
            return "romanian";
        case Value_mauritius:
            return "mauritius";
        case Value_bungeejumping:
            return "bungeejumping";
        case Value_dentalhygeiniststorefront:
            return "dentalhygeiniststorefront";
        case Value_petwasteremoval:
            return "petwasteremoval";
        case Value_israeli:
            return "israeli";
        case Value_gamemeat:
            return "gamemeat";
        case Value_snuggleservices:
            return "snuggleservices";
        case Value_stockings:
            return "stockings";
        case Value_beachvolleyball:
            return "beachvolleyball";
        case Value_gemstonesandminerals:
            return "gemstonesandminerals";
        case Value_sugarshacks:
            return "sugarshacks";
        case Value_guamanian:
            return "guamanian";
        case Value_circusschools:
            return "circusschools";
        case Value_chimneycakes:
            return "chimneycakes";
        case Value_cheesetastingclasses:
            return "cheesetastingclasses";
        case Value_bikeshop:
            return "bikeshop";
        case Value_drycleaninglaundry:
            return "drycleaninglaundry";
        case Value_flemish:
            return "flemish";
        case Value_hainan:
            return "hainan";
        case Value_slovakian:
            return "slovakian";
        case Value_aviationservices:
            return "aviationservices";
        case Value_bicyclepaths:
            return "bicyclepaths";
        case Value_ethnicgrocery:
            return "ethnicgrocery";
        case Value_ceremonialclothing:
            return "ceremonialclothing";
        case Value_bikerepair:
            return "bikerepair";
        case Value_bobsledding:
            return "bobsledding";
        case Value_electricitysuppliers:
            return "electricitysuppliers";
        case Value_berrichon:
            return "berrichon";
        case Value_iberian:
            return "iberian";
        case Value_sardinian:
            return "sardinian";
        case Value_shoppingpassages:
            return "shoppingpassages";
        case Value_danish:
            return "danish";
        case Value_bulkbilling:
            return "bulkbilling";
        case Value_volleyball:
            return "volleyball";
        case Value_watersuppliers:
            return "watersuppliers";
        case Value_zorbing:
            return "zorbing";
        case Value_apartmentagents:
            return "apartmentagents";
        case Value_dentalhygienistsmobile:
            return "dentalhygienistsmobile";
        case Value_drones:
            return "drones";
        case Value_vermouthbars:
            return "vermouthbars";
        case Value_pubfood:
            return "pubfood";
        case Value_coffeeshops:
            return "coffeeshops";
        case Value_swedish:
            return "swedish";
        case Value_cypriot:
            return "cypriot";
        case Value_calabrian:
            return "calabrian";
        case Value_piadina:
            return "piadina";
        case Value_karaokerental:
            return "karaokerental";
        case Value_naturalgassuppliers:
            return "naturalgassuppliers";
        case Value_roman:
            return "roman";
        case Value_hotel_bar:
            return "hotel_bar";
        case Value_norwegian:
            return "norwegian";
        case Value_tropicalmedicine:
            return "tropicalmedicine";
        case Value_pita:
            return "pita";
        case Value_pekinese:
            return "pekinese";
        case Value_bicycles:
            return "bicycles";
        case Value_dancerestaurants:
            return "dancerestaurants";
        case Value_sleepwear:
            return "sleepwear";
        case Value_metaldetectorservices:
            return "metaldetectorservices";
        case Value_autoelectric:
            return "autoelectric";
        case Value_gasstations:
            return "gasstations";
        case Value_lawn_bowling:
            return "lawn_bowling";
        case Value_yugoslav:
            return "yugoslav";
        case Value_czechslovakian:
            return "czechslovakian";
        case Value_meatballs:
            return "meatballs";
        case Value_arroceria_paella:
            return "arroceria_paella";
        case Value_chilean:
            return "chilean";
        case Value_modern_australian:
            return "modern_australian";
        case Value_newzealand:
            return "newzealand";
        case Value_island_pub:
            return "island_pub";
        case Value_hunan:
            return "hunan";
        case Value_fasil:
            return "fasil";
        case Value_osteopaths:
            return "osteopaths";
        case Value_handball:
            return "handball";
        case Value_specialbikes:
            return "specialbikes";
        case Value_jailsandprisons:
            return "jailsandprisons";
        case Value_galician:
            return "galician";
        case Value_churros:
            return "churros";
        case Value_shrines:
            return "shrines";
        case Value_opensandwiches:
            return "opensandwiches";
        case Value_cheekufta:
            return "cheekufta";
        case Value_fuzhou:
            return "fuzhou";
        default:
            assert(false);
            return NULL;
      }
  }

YelpCategoryAliasJSON::YelpCategoryAliasJSON(const YelpCategoryAliasJSON &)
  {
    assert(false);
  }

YelpCategoryAliasJSON &YelpCategoryAliasJSON::operator=(const YelpCategoryAliasJSON &other)
  {
    assert(false);
    throw "Illegal operator=() call.";
  }

void YelpCategoryAliasJSON::fromJSONValue(JSONValue *json_value, bool ignore_extras)
  {
    assert(json_value != NULL);
    const JSONStringValue *json_string = json_value->string_value();
    if (json_string == NULL)
        throw("The value for field Value of YelpCategoryAliasJSON is not a string.");
    TypeValue the_open_enum;
    switch ((unsigned char)(json_string->getData()[0]))
      {
        case '3':
            if (strcmp(&(json_string->getData()[1]), "dprinting") == 0)
                  {
                    the_open_enum.in_known_list = true;
                    the_open_enum.list_value = Value_3dprinting;
                    goto open_enum_is_done;
                  }
            break;
        case 'a':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'c':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "ibowls") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_acaibowls;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ssories") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_accessories;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "untants") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_accountants;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "etreatment") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_acnetreatment;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ive") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_active;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "puncture") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_acupuncture;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'd':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "ictionmedicine") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_addictionmedicine;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "ptionservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_adoptionservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "lt", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_adult;
                                            goto open_enum_is_done;
                                          }
                                    case 'e':
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'd':
                                                if (strcmp(&(json_string->getData()[7]), "u") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_adultedu;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'n':
                                                if (strcmp(&(json_string->getData()[7]), "tertainment") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_adultentertainment;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "ertising") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_advertising;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "ial", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'f':
                                        if (strcmp(&(json_string->getData()[7]), "itness") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_aerialfitness;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[7]), "ours") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_aerialtours;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "theticians") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_aestheticians;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'f':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "hani") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_afghani;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "ican") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_african;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'g':
                    if (strcmp(&(json_string->getData()[2]), "riturismi") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_agriturismi;
                            goto open_enum_is_done;
                          }
                    break;
                case 'i':
                    if (strncmp(&(json_string->getData()[2]), "r", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'c':
                                if (strncmp(&(json_string->getData()[4]), "raft", 4) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[8]))
                                      {
                                        case 'd':
                                            if (strcmp(&(json_string->getData()[9]), "ealers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_aircraftdealers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[9]), "epairs") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_aircraftrepairs;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'd':
                                if (strcmp(&(json_string->getData()[4]), "uctcleaning") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_airductcleaning;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'l':
                                if (strcmp(&(json_string->getData()[4]), "ines") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_airlines;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'p':
                                if (strncmp(&(json_string->getData()[4]), "ort", 3) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[7]))
                                      {
                                        case '_':
                                            if (strcmp(&(json_string->getData()[8]), "shuttles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_airport_shuttles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[8]), "ounges") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_airportlounges;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (json_string->getData()[8] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_airports;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strcmp(&(json_string->getData()[8]), "erminals") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_airportterminals;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 's':
                                if (strcmp(&(json_string->getData()[4]), "oft") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_airsoft;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ergist") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_allergist;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "atian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_alsatian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ernativemedicine") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_alternativemedicine;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'm':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "teursportsteams") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_amateursportsteams;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "sementparks") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_amusementparks;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "sthesiologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_anesthesiologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strncmp(&(json_string->getData()[3]), "mal", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[7]), "ssistedtherapy") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_animalassistedtherapy;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[7]), "olistic") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_animalholistic;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[7]), "hysicaltherapy") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_animalphysicaltherapy;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[7]), "helters") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_animalshelters;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "iques") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_antiques;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strncmp(&(json_string->getData()[3]), "rtment", 6) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[9]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[10]), "gents") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_apartmentagents;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (json_string->getData()[10] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_apartments;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "iances") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_appliances;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "aisalservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_appraisalservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'q':
                    if (strncmp(&(json_string->getData()[2]), "uariums", 7) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[9]))
                          {
                            case 0:
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_aquariums;
                                    goto open_enum_is_done;
                                  }
                            case 'e':
                                if (strcmp(&(json_string->getData()[10]), "rvices") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_aquariumservices;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "bian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_arabian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "des") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_arcades;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'h':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "ry") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_archery;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strncmp(&(json_string->getData()[5]), "tect", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[9]))
                                                  {
                                                    case 's':
                                                        if (json_string->getData()[10] == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_architects;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(json_string->getData()[10]), "raltours") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_architecturaltours;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "entine") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_argentine;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "enian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_armenian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "oceria_paella") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_arroceria_paella;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "lasses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_artclasses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ficialturf") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_artificialturf;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "useums") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_artmuseums;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "estoration") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_artrestoration;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_arts;
                                                goto open_enum_is_done;
                                              }
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "ndcrafts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_artsandcrafts;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "hools") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_artschools;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'p':
                                            if (strcmp(&(json_string->getData()[5]), "acerentals") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_artspacerentals;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'u':
                                            if (strcmp(&(json_string->getData()[5]), "pplies") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_artsupplies;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ours") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_arttours;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "anfusion") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_asianfusion;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "istedliving") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_assistedliving;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "rologers") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_astrologers;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 't':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "liers") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_ateliers;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ractionfarms") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_attractionfarms;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "rentals") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_atvrentals;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "tionhouses") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_auctionhouses;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "io", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[6]), "ogist") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_audiologist;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'v':
                                        if (strcmp(&(json_string->getData()[6]), "isualequipmentrental") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_audiovisualequipmentrental;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strncmp(&(json_string->getData()[3]), "tr", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[6]), "lian") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_australian;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "an") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_austrian;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "o", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_auto;
                                            goto open_enum_is_done;
                                          }
                                    case '_':
                                        if (strcmp(&(json_string->getData()[5]), "detailing") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_auto_detailing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "ustomization") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autocustomization;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[5]), "amageassessment") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autodamageassessment;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "lectric") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autoelectric;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'g':
                                        if (strcmp(&(json_string->getData()[5]), "lass") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autoglass;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "nsurance") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autoinsurance;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[5]), "oanproviders") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autoloanproviders;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[5]), "artssupplies") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autopartssupplies;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "epair") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autorepair;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "ecurity") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autosecurity;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'u':
                                        if (strcmp(&(json_string->getData()[5]), "pholstery") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_autoupholstery;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "ergnat") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_auvergnat;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    if (strcmp(&(json_string->getData()[2]), "iationservices") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_aviationservices;
                            goto open_enum_is_done;
                          }
                    break;
                case 'w':
                    if (strcmp(&(json_string->getData()[2]), "nings") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_awnings;
                            goto open_enum_is_done;
                          }
                    break;
                case 'x':
                    if (strcmp(&(json_string->getData()[2]), "ethrowing") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_axethrowing;
                            goto open_enum_is_done;
                          }
                    break;
                case 'y':
                    if (strcmp(&(json_string->getData()[2]), "urveda") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_ayurveda;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'b':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "y_gear") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_baby_gear;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "k", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'f':
                                        if (strcmp(&(json_string->getData()[5]), "lowservices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_backflowservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "hop") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_backshop;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "n") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_baden;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "inton") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_badminton;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ls") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bagels;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "ettes") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_baguettes;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "lbondsmen") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bailbondsmen;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "eries") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bakeries;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "loonservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_balloonservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "ladeshi") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bangladeshi;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "uptcy") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_bankruptcy;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_banks;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'b':
                                    if (strcmp(&(json_string->getData()[4]), "ers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_barbers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "rawl") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_barcrawl;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "eclasses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_barreclasses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (json_string->getData()[4] == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bars;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strncmp(&(json_string->getData()[4]), "end", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[8]), "rs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_bartenders;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[8]), "ngschools") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_bartendingschools;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ballfields") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_baseballfields;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    if (strcmp(&(json_string->getData()[4]), "etballcourts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_basketballcourts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'q':
                                    if (strcmp(&(json_string->getData()[4]), "ue") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_basque;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "ing_area") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bathing_area;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "rystores") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_batterystores;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ngcages") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_battingcages;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "arian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bavarian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'b':
                    if (strcmp(&(json_string->getData()[2]), "q") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_bbq;
                            goto open_enum_is_done;
                          }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "h", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'b':
                                                if (strcmp(&(json_string->getData()[6]), "ars") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_beachbars;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'e':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'q':
                                                        if (strcmp(&(json_string->getData()[7]), "uipmentrental") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_beachequipmentrental;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        if (json_string->getData()[7] == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_beaches;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'v':
                                                if (strcmp(&(json_string->getData()[6]), "olleyball") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_beachvolleyball;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "tysvc") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_beautysvc;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "breakfast") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bedbreakfast;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strncmp(&(json_string->getData()[3]), "r", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[5]), "and_wine") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_beer_and_wine;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[5]), "ar") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_beerbar;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'g':
                                        if (strncmp(&(json_string->getData()[5]), "arden", 5) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[10]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_beergarden;
                                                        goto open_enum_is_done;
                                                      }
                                                case 's':
                                                    if (json_string->getData()[11] == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_beergardens;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[5]), "all") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_beerhall;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "ours") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_beertours;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'h':
                            if (strcmp(&(json_string->getData()[3]), "avioranalysts") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_behavioranalysts;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "gian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_belgian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "richon") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_berrichon;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "poke") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bespoke;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "tingcenters") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bettingcenters;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "erage_stores") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_beverage_stores;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "ycle", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[8]), "aths") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bicyclepaths;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (json_string->getData()[8] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bicycles;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[5]), "repair_maintenance") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bike_repair_maintenance;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[5]), "arking") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bikeparking;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strncmp(&(json_string->getData()[5]), "e", 1) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[6]))
                                              {
                                                case 'n':
                                                    if (strcmp(&(json_string->getData()[7]), "tals") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_bikerentals;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'p':
                                                    if (strcmp(&(json_string->getData()[7]), "air") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_bikerepair;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 's':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_bikes;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'h':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(json_string->getData()[7]), "ring") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_bikesharing;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'o':
                                                        if (strcmp(&(json_string->getData()[7]), "p") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_bikeshop;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "ours") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_biketours;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "lingservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_billingservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "go") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bingo;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "dshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_birdshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "tros") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bistros;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "nds") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_blinds;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "ddonation") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_blooddonation;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "outservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_blowoutservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strncmp(&(json_string->getData()[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "harters") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_boatcharters;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[5]), "ealers") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_boatdealers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "ng") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_boating;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[5]), "artsandsupplies") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_boatpartsandsupplies;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "epair") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_boatrepair;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "ours") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_boattours;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "sledding") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bobsledding;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "ceball") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bocceball;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "y", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "ontouring") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bodycontouring;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "hops") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bodyshops;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'k':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(json_string->getData()[5]), "inding") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_bookbinding;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'k':
                                            if (strcmp(&(json_string->getData()[5]), "eepers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_bookkeepers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "tores") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_bookstores;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "camps") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bootcamps;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "oirphotography") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_boudoirphotography;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "cehouserentals") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bouncehouserentals;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "guignon") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bourguignon;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'w':
                            if (strcmp(&(json_string->getData()[3]), "ling") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bowling;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'x':
                            if (strcmp(&(json_string->getData()[3]), "ing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_boxing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "series") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_brasseries;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'z':
                                    if (strncmp(&(json_string->getData()[4]), "ilian", 5) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[9]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_brazilian;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'j':
                                                if (strcmp(&(json_string->getData()[10]), "iujitsu") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_brazilianjiujitsu;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "kfast_brunch") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_breakfast_brunch;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "ries") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_breweries;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ngsupplies") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_brewingsupplies;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'p':
                                            if (strcmp(&(json_string->getData()[5]), "ubs") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_brewpubs;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "al") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bridal;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ish") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_british;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strncmp(&(json_string->getData()[3]), "ble", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 's':
                                        if (strcmp(&(json_string->getData()[7]), "occer") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bubblesoccer;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[7]), "ea") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_bubbletea;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "dhist_temples") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_buddhist_temples;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'f':
                            if (strcmp(&(json_string->getData()[3]), "fets") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_buffets;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ldingsupplies") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_buildingsupplies;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "arian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bulgarian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    if (strcmp(&(json_string->getData()[4]), "billing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bulkbilling;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "geejumping") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_bungeejumping;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "ers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_burgers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "ese") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_burmese;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "s") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_buses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strncmp(&(json_string->getData()[4]), "ness", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[8]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[9]), "onsulting") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_businessconsulting;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'f':
                                                if (strcmp(&(json_string->getData()[9]), "inancing") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_businessfinancing;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[9]), "awyers") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_businesslawyers;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "ental") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_busrental;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "tations") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_busstations;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ours") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_bustours;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "cher") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_butcher;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'c':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case '_':
                    if (strcmp(&(json_string->getData()[2]), "and_mh") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_c_and_mh;
                            goto open_enum_is_done;
                          }
                    break;
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "ret") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_cabaret;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "netry") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_cabinetry;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "ecars") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_cablecars;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'f':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 's':
                                        if (json_string->getData()[5] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_cafes;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "eria") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_cafeteria;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'j':
                            if (strcmp(&(json_string->getData()[3]), "un") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cajun;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "eshop") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cakeshop;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "brian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_calabrian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "igraphy") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_calligraphy;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'b':
                                    if (strcmp(&(json_string->getData()[4]), "odian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_cambodian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "grounds") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_campgrounds;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[5]), "estores") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_candlestores;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'y':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_candy;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'n':
                                    if (strncmp(&(json_string->getData()[4]), "abis", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[8]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[9]), "clinics") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cannabis_clinics;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[9]), "ollective") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cannabiscollective;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'd':
                                                if (strcmp(&(json_string->getData()[9]), "ispensaries") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cannabisdispensaries;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[9]), "eferrals") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cannabisreferrals;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[9]), "ours") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cannabistours;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "en") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_canteen;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[5]), "nese") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_cantonese;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case '_':
                                    if (strcmp(&(json_string->getData()[4]), "dealers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_car_dealers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "uctions") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_carauctions;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'b':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "okers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_carbrokers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'u':
                                            if (strcmp(&(json_string->getData()[5]), "yers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_carbuyers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'd':
                                    if (strncmp(&(json_string->getData()[4]), "io", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[7]), "lasses") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cardioclasses;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[7]), "ogy") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cardiology;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ercounseling") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_careercounseling;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(json_string->getData()[5]), "bean") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_caribbean;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "atures") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_caricatures;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "usels") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_carousels;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    if (strncmp(&(json_string->getData()[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'n':
                                                if (strcmp(&(json_string->getData()[6]), "ters") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_carpenters;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case '_':
                                                        if (strcmp(&(json_string->getData()[7]), "cleaning") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_carpet_cleaning;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'd':
                                                        if (strcmp(&(json_string->getData()[7]), "yeing") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_carpetdyeing;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'i':
                                                        if (strncmp(&(json_string->getData()[7]), "n", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[8]))
                                                              {
                                                                case 'g':
                                                                    if (json_string->getData()[9] == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_carpeting;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    if (strcmp(&(json_string->getData()[9]), "tallation") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_carpetinstallation;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "ental") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_carrental;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "hares") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_carshares;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "sh") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_carwash;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ndowtinting") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_carwindowtinting;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "nos") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_casinos;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "les") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_castles;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "lan") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_catalan;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ring") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_catering;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "lphoneaccessories") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cellphoneaccessories;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "emonialclothing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_ceremonialclothing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "lengecourses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_challengecourses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "pagne_bars") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_champagne_bars;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'k':
                                        if (strcmp(&(json_string->getData()[5]), "ufta") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_cheekufta;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "leading") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_cheerleading;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strncmp(&(json_string->getData()[5]), "e", 1) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[6]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cheese;
                                                        goto open_enum_is_done;
                                                      }
                                                case 's':
                                                    if (strcmp(&(json_string->getData()[7]), "teaks") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_cheesesteaks;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[7]), "astingclasses") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_cheesetastingclasses;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "ken", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[8]), "wings") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_chicken_wings;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "hop") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_chickenshop;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'd':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'b':
                                                    if (strcmp(&(json_string->getData()[6]), "irthedu") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_childbirthedu;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'c':
                                                    switch ((unsigned char)(json_string->getData()[6]))
                                                      {
                                                        case 'a':
                                                            if (strcmp(&(json_string->getData()[7]), "re") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_childcare;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'l':
                                                            if (strcmp(&(json_string->getData()[7]), "oth") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_childcloth;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'p':
                                                    if (strcmp(&(json_string->getData()[6]), "roofing") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_childproofing;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(json_string->getData()[6]), "ensmuseums") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_childrensmuseums;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "an") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_chilean;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'm':
                                    if (strncmp(&(json_string->getData()[4]), "ney", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[8]), "akes") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_chimneycakes;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "weeps") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_chimneysweeps;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'n':
                                    if (strncmp(&(json_string->getData()[4]), "ese", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_chinese;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[8]), "artialarts") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_chinesemartialarts;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "opractors") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_chiropractors;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "olate") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_chocolate;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "rs") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_choirs;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "istmastrees") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_christmastrees;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "r", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "hes") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_churches;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "os") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_churros;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "eries") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cideries;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "arbars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cigarbars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "cu", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "ttraininggyms") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_circuittraininggyms;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[6]), "schools") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_circusschools;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "iccenter") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_civiccenter;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "mbing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_climbing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "krepair") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_clockrepair;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "hingrental") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_clothingrental;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "ns") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_clowns;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "bcrawl") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_clubcrawl;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "ktailbars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cocktailbars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'f':
                            if (strncmp(&(json_string->getData()[3]), "fee", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_coffee;
                                            goto open_enum_is_done;
                                          }
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[7]), "oasteries") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_coffeeroasteries;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[7]), "hops") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_coffeeshops;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[7]), "easupplies") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_coffeeteasupplies;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'l':
                                    if (strncmp(&(json_string->getData()[4]), "ege", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[8]), "ounseling") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_collegecounseling;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'u':
                                                if (strcmp(&(json_string->getData()[8]), "niv") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_collegeuniv;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'o':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[5]), "bian") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_colombian;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'n':
                                            if (strcmp(&(json_string->getData()[5]), "ics") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_colonics;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "dyclubs") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_comedyclubs;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "ortfood") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_comfortfood;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "cbooks") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_comicbooks;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "rcialrealestate") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_commercialrealestate;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ssionedartists") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_commissionedartists;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'u':
                                            if (strncmp(&(json_string->getData()[5]), "nity", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[9]))
                                                  {
                                                    case 'b':
                                                        if (strcmp(&(json_string->getData()[10]), "ookbox") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_communitybookbox;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'c':
                                                        if (strcmp(&(json_string->getData()[10]), "enters") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_communitycenters;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'g':
                                                        if (strcmp(&(json_string->getData()[10]), "ardens") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_communitygardens;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "uters") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_computers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "pt_shops") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_concept_shops;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ergemedicine") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_conciergemedicine;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "ominiums") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_condominiums;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strncmp(&(json_string->getData()[4]), "ract", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[8]))
                                          {
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[9]), "aw") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_contractlaw;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'o':
                                                if (strcmp(&(json_string->getData()[9]), "rs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_contractors;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'v':
                                    if (strncmp(&(json_string->getData()[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'n':
                                                if (strcmp(&(json_string->getData()[6]), "ience") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_convenience;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'y':
                                                if (strcmp(&(json_string->getData()[6]), "orsushi") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_conveyorsushi;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "king", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[8]), "lasses") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_cookingclasses;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[8]), "chools") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_cookingschools;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "yshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_copyshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "sican") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_corsican;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    if (strncmp(&(json_string->getData()[4]), "et", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'i':
                                                if (strncmp(&(json_string->getData()[7]), "c", 1) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[8]))
                                                      {
                                                        case 'd':
                                                            if (strcmp(&(json_string->getData()[9]), "entists") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_cosmeticdentists;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 's':
                                                            switch ((unsigned char)(json_string->getData()[9]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_cosmetics;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'u':
                                                                    if (strcmp(&(json_string->getData()[10]), "rgeons") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_cosmeticsurgeons;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'o':
                                                if (strcmp(&(json_string->getData()[7]), "logy_schools") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_cosmetology_schools;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "umes") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_costumes;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strncmp(&(json_string->getData()[4]), "t", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "rtopinstall") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_countertopinstall;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strncmp(&(json_string->getData()[6]), "y", 1) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[7]))
                                                      {
                                                        case 'c':
                                                            if (strcmp(&(json_string->getData()[8]), "lubs") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_countryclubs;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'd':
                                                            if (strcmp(&(json_string->getData()[8]), "ancehalls") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_countrydancehalls;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_couriers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'h':
                                                    if (strcmp(&(json_string->getData()[6]), "ouses") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_courthouses;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(json_string->getData()[6]), "eporters") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_courtreporters;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    if (strcmp(&(json_string->getData()[2]), "rclasses") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_cprclasses;
                            goto open_enum_is_done;
                          }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "neservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_craneservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "ationservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_cremationservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "eries") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_creperies;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "minaldefense") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_criminaldefense;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'y':
                            if (strcmp(&(json_string->getData()[3]), "otherapy") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cryotherapy;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strcmp(&(json_string->getData()[2]), "a") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_csa;
                            goto open_enum_is_done;
                          }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "an") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cuban;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "turalcenter") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_culturalcenter;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "cakes") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cupcakes;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "r", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "ncyexchange") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_currencyexchange;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'y':
                                        if (strcmp(&(json_string->getData()[5]), "sausage") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_currysausage;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strncmp(&(json_string->getData()[3]), "tom", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[7]), "akes") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_customcakes;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'm':
                                        if (strcmp(&(json_string->getData()[7]), "erchandise") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_custommerchandise;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[7]), "brokers") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_customsbrokers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "lingclasses") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cyclingclasses;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "riot") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_cypriot;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'z':
                    if (strncmp(&(json_string->getData()[2]), "ech", 3) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[5]))
                          {
                            case 0:
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_czech;
                                    goto open_enum_is_done;
                                  }
                            case 's':
                                if (strcmp(&(json_string->getData()[6]), "lovakian") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_czechslovakian;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'd':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "agerestoration") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_damagerestoration;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[6]), "schools") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_dance_schools;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[6]), "lubs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_danceclubs;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[6]), "estaurants") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_dancerestaurants;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "tudio") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_dancestudio;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'w':
                                                if (strcmp(&(json_string->getData()[6]), "ear") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_dancewear;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "sh") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_danish;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "arecovery") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_datarecovery;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'y':
                            if (strcmp(&(json_string->getData()[3]), "camps") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_daycamps;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "trelief") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_debtrelief;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "ksrailing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_decksrailing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strncmp(&(json_string->getData()[3]), "i", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "atessen") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_delicatessen;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (json_string->getData()[5] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_delis;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "olitionservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_demolitionservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strncmp(&(json_string->getData()[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "lhyg", 4) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[9]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[10]), "iniststorefront") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_dentalhygeiniststorefront;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[10]), "enists", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_dentalhygienists;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'm':
                                                                if (strcmp(&(json_string->getData()[17]), "obile") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_dentalhygienistsmobile;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "sts") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_dentists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "rtmentsofmotorvehicles") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_departmentsofmotorvehicles;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "stores") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_deptstores;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "matology") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dermatology;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "serts") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_desserts;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'g':
                                    if (strncmp(&(json_string->getData()[4]), "nostic", 6) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[10]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[11]), "maging") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_diagnosticimaging;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[11]), "ervices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_diagnosticservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "ysisclinics") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_dialysisclinics;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "titians") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dietitians;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "itizingservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_digitizingservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "sum") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dimsum;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "rs") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_diners;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "ertheater") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_dinnertheater;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "bilitylaw") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_disabilitylaw;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'c':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'g':
                                            if (strcmp(&(json_string->getData()[5]), "olf") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_discgolf;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[5]), "untstore") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_discountstore;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "illeries") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_distilleries;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(json_string->getData()[5]), "ars") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_divebars;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "hops") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_diveshops;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ng") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_diving;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "rce") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_divorce;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "utoshop") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_diyautoshop;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "ood") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_diyfood;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'j':
                    if (strcmp(&(json_string->getData()[2]), "s") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_djs;
                            goto open_enum_is_done;
                          }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case '_':
                                    if (strcmp(&(json_string->getData()[4]), "parks") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_dog_parks;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "alkers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_dogwalkers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "inican") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dominican;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "rs") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_donairs;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strcmp(&(json_string->getData()[5]), "ioncenter") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_donationcenter;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "ts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_donuts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "rsales") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_doorsales;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "las") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_doulas;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "maschools") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dramaschools;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strncmp(&(json_string->getData()[3]), "v", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[6]), "ntheater") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_driveintheater;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[6]), "hrubars") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_drivethrubars;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "ng_schools") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_driving_schools;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "nes") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_drones;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "gstores") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_drugstores;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'y':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "lean", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[8]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_dryclean;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[9]), "nglaundry") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_drycleaninglaundry;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "all") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_drywall;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "awyers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_duilawyers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "chools") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_duischools;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "psterrental") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dumpsterrental;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "licationservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_duplicationservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "yfreeshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_dutyfreeshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'e':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "nosethroat") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_earnosethroat;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strncmp(&(json_string->getData()[3]), "tern", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[8]), "european") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_eastern_european;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'g':
                                        if (strcmp(&(json_string->getData()[8]), "erman") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_easterngerman;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ertainment") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_eatertainment;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'd':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "torialservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_editorialservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "cation", 6) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[9]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_education;
                                            goto open_enum_is_done;
                                          }
                                    case 's':
                                        if (strcmp(&(json_string->getData()[10]), "ervices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_educationservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'g':
                    if (strcmp(&(json_string->getData()[2]), "yptian") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_egyptian;
                            goto open_enum_is_done;
                          }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "ercareplanning") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_eldercareplanning;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "tr", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'i':
                                                if (strncmp(&(json_string->getData()[7]), "ci", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[9]))
                                                      {
                                                        case 'a':
                                                            if (strcmp(&(json_string->getData()[10]), "ns") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_electricians;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 't':
                                                            if (strcmp(&(json_string->getData()[10]), "ysuppliers") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_electricitysuppliers;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'o':
                                                if (strncmp(&(json_string->getData()[7]), "nics", 4) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[11]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_electronics;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'r':
                                                            if (strcmp(&(json_string->getData()[12]), "epair") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_electronicsrepair;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "entaryschools") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_elementaryschools;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ern_cafes") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_eltern_cafes;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'm':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "ssy") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_embassy;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "oideryandcrochet") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_embroideryandcrochet;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strncmp(&(json_string->getData()[3]), "rgency", 6) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[9]))
                                  {
                                    case 'm':
                                        if (strcmp(&(json_string->getData()[10]), "edicine") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_emergencymedicine;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[10]), "ethospital") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_emergencypethospital;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[10]), "ooms") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_emergencyrooms;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "nadas") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_empanadas;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strncmp(&(json_string->getData()[4]), "oyment", 6) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[10]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[11]), "gencies") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_employmentagencies;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[11]), "awyers") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_employmentlawyers;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "training") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_emstraining;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "o", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "rinologists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_endocrinologists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[5]), "ontists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_endodontists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "raving") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_engraving;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ertainmentlaw") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_entertainmentlaw;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'v':
                            if (strncmp(&(json_string->getData()[3]), "iro", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[7]), "batement") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_enviroabatement;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'n':
                                        if (strcmp(&(json_string->getData()[7]), "mentaltesting") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_environmentaltesting;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    if (strcmp(&(json_string->getData()[2]), "oticmassage") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_eroticmassage;
                            goto open_enum_is_done;
                          }
                    break;
                case 's':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "apegames") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_escapegames;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strncmp(&(json_string->getData()[4]), "te", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[7]), "iquidation") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_estateliquidation;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 'h':
                                                        if (strcmp(&(json_string->getData()[8]), "otography") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_estatephotography;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(json_string->getData()[8]), "anning") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_estateplanning;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "eticians") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_estheticians;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 't':
                    if (strncmp(&(json_string->getData()[2]), "h", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'i':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "grocery") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_ethicgrocery;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'o':
                                        if (strcmp(&(json_string->getData()[5]), "pian") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_ethiopian;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'n':
                                if (strncmp(&(json_string->getData()[4]), "ic", 2) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[6]))
                                      {
                                        case 'g':
                                            if (strcmp(&(json_string->getData()[7]), "rocery") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_ethnicgrocery;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[7]), "arkets") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_ethnicmarkets;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'v':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "hargingstations") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_evchargingstations;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strncmp(&(json_string->getData()[3]), "nt", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'p':
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'h':
                                                if (strcmp(&(json_string->getData()[7]), "otography") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_eventphotography;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[7]), "anning") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_eventplanning;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[6]), "ervices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_eventservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'x':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "avationservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_excavationservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "eriences") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_experiences;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    if (strncmp(&(json_string->getData()[2]), "e", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'b':
                                if (strcmp(&(json_string->getData()[4]), "rowservices") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_eyebrowservices;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'l':
                                if (strcmp(&(json_string->getData()[4]), "ashservice") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_eyelashservice;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'f':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "ricstores") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_fabricstores;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "epainting") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_facepainting;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "afel") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_falafel;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "ilydr") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_familydr;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'q':
                                                    if (strcmp(&(json_string->getData()[6]), "uipmentrepair") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_farmequipmentrepair;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(json_string->getData()[6]), "smarket") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_farmersmarket;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ngequipment") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_farmingequipment;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_farms;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "iers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_farriers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "ion") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fashion;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "l") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fasil;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "sgates") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_fencesgates;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ng") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_fencing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "shui") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fengshui;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "ies") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_ferries;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ility") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fertility;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "tivals") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_festivals;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ipino") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_filipino;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strncmp(&(json_string->getData()[4]), "ncial", 5) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[9]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[10]), "dvising") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_financialadvising;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[10]), "ervices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_financialservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "erprinting") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fingerprinting;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "rmtraining") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_firearmtraining;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'd':
                                            if (strcmp(&(json_string->getData()[5]), "epartments") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_firedepartments;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'p':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'l':
                                                    if (strcmp(&(json_string->getData()[6]), "ace") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_fireplace;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(json_string->getData()[6]), "otection") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_fireprotection;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'w':
                                            if (strncmp(&(json_string->getData()[5]), "o", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'o':
                                                        if (strcmp(&(json_string->getData()[7]), "d") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_firewood;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(json_string->getData()[7]), "ks") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_fireworks;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "taidclasses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_firstaidclasses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "hbroetchen") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fischbroetchen;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'h':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ng") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_fishing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[5]), "onger") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_fishmonger;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'n':
                                            if (strcmp(&(json_string->getData()[5]), "chips") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_fishnchips;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "ness", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fitness;
                                            goto open_enum_is_done;
                                          }
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[8]), "quipment") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_fitnessequipment;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "tbread") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_flatbread;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "markets") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_fleamarkets;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "ish") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_flemish;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ghtinstruction") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_flightinstruction;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "tspa") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_floatspa;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "ring") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_flooring;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "ldesigners") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_floraldesigners;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "sts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_florists;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'w':
                                    if (strncmp(&(json_string->getData()[4]), "ers", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_flowers;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'o':
                                                if (strcmp(&(json_string->getData()[8]), "nly") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_flowersonly;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            if (strcmp(&(json_string->getData()[3]), "boarding") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_flyboarding;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "due") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_fondue;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_food;
                                                goto open_enum_is_done;
                                              }
                                        case '_':
                                            if (strcmp(&(json_string->getData()[5]), "court") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_food_court;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'b':
                                            if (strcmp(&(json_string->getData()[5]), "anks") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_foodbanks;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'd':
                                            if (strcmp(&(json_string->getData()[5]), "eliveryservices") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_fooddeliveryservices;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'a':
                                                    if (strcmp(&(json_string->getData()[6]), "fety") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_foodsafety;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[6]), "ands") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_foodstands;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'o':
                                                    if (strcmp(&(json_string->getData()[6]), "urs") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_foodtours;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'r':
                                                    if (strcmp(&(json_string->getData()[6]), "ucks") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_foodtrucks;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ball") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_football;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "stry") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_forestry;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "alwear") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_formalwear;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "ndationrepair") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_foundationrepair;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "ing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_framing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "conian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_franconian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "diving") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_freediving;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "ch") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_french;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "terie") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_friterie;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "zenfood") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_frozenfood;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "ldocks") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_fueldocks;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ralservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_funeralservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "air") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_funfair;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "lothing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_furclothing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strncmp(&(json_string->getData()[4]), "iture", 5) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[9]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_furniture;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[10]), "ssembly") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_furnitureassembly;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[10]), "epair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_furniturerepair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'z':
                            if (strcmp(&(json_string->getData()[3]), "hou") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_fuzhou;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'g':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "cian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_galician;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "eries") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_galleries;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'm':
                                        if (strcmp(&(json_string->getData()[5]), "eat") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_gamemeat;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "ruckrental") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_gametruckrental;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "ge_door_services") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_garage_door_services;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'd':
                                    if (strncmp(&(json_string->getData()[4]), "en", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[7]), "rs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_gardeners;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[7]), "ng") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_gardening;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (json_string->getData()[7] == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_gardens;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "tations") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_gasstations;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strncmp(&(json_string->getData()[4]), "ro", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[7]), "nterologist") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_gastroenterologist;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[7]), "ubs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_gastropubs;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            if (strcmp(&(json_string->getData()[3]), "bars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gaybars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ato") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gelato;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "stonesandminerals") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gemstonesandminerals;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'r':
                                        if (strncmp(&(json_string->getData()[5]), "a", 1) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[6]))
                                              {
                                                case 'l':
                                                    switch ((unsigned char)(json_string->getData()[7]))
                                                      {
                                                        case '_':
                                                            if (strcmp(&(json_string->getData()[8]), "litigation") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_general_litigation;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'd':
                                                            if (strcmp(&(json_string->getData()[8]), "entistry") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_generaldentistry;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'f':
                                                            if (strcmp(&(json_string->getData()[8]), "estivals") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_generalfestivals;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[7]), "orinstallrepair") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_generatorinstallrepair;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "icists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_geneticists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "rgian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_georgian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "an") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_german;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "ntologist") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_gerontologist;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    if (strcmp(&(json_string->getData()[2]), "ftshops") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_giftshops;
                            goto open_enum_is_done;
                          }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strncmp(&(json_string->getData()[3]), "ss", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[6]), "ndmirrors") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_glassandmirrors;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[6]), "lowing") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_glassblowing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ding") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gliding;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "wein") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_gluhwein;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "en_free") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_gluten_free;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "arts") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gokarts;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "buyers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_goldbuyers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'f':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_golf;
                                                goto open_enum_is_done;
                                              }
                                        case 'c':
                                            if (strncmp(&(json_string->getData()[5]), "art", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[8]))
                                                  {
                                                    case 'd':
                                                        if (strcmp(&(json_string->getData()[9]), "ealers") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_golfcartdealers;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(json_string->getData()[9]), "entals") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_golfcartrentals;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "quipment") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_golfequipment;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[5]), "essons") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_golflessons;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "hops") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_golfshops;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "rmet") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gourmet;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "phicdesign") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_graphicdesign;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "ek") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_greek;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "llingequipment") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_grillingequipment;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "ery") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_grocery;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "mer") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_groomer;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "tservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_groutservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "manian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_guamanian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "sthouses") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_guesthouses;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "tarstores") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_guitarstores;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case '_':
                                    if (strcmp(&(json_string->getData()[4]), "ranges") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_gun_ranges;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case '_':
                                            if (strcmp(&(json_string->getData()[5]), "and_ammo") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_guns_and_ammo;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[5]), "ith") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_gunsmith;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "terservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_gutterservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    if (strncmp(&(json_string->getData()[2]), "m", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'n':
                                if (strcmp(&(json_string->getData()[4]), "astics") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_gymnastics;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 's':
                                if (json_string->getData()[4] == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_gyms;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'h':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "ilitativeservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_habilitativeservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "an") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hainan;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_hair;
                                                goto open_enum_is_done;
                                              }
                                        case '_':
                                            if (strcmp(&(json_string->getData()[5]), "extensions") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_hair_extensions;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[5]), "oss") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_hairloss;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "emoval") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_hairremoval;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "tylists") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_hairstylists;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_haitian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "ka") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hakka;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "l") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_halal;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "wayhouses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_halfwayhouses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "therapy") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_halotherapy;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'b':
                                            if (strcmp(&(json_string->getData()[5]), "all") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_handball;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'y':
                                            if (strcmp(&(json_string->getData()[5]), "man") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_handyman;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "gliding") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hanggliding;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "dware") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hardware;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "s") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hats;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "ntedhouses") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hauntedhouses;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'w':
                            if (strcmp(&(json_string->getData()[3]), "aiian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hawaiian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'z':
                            if (strcmp(&(json_string->getData()[3]), "ardouswastedisposal") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hazardouswastedisposal;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "shops") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_headshops;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strncmp(&(json_string->getData()[4]), "th", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_health;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[7]), "oach") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_healthcoach;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[7]), "nsurance") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_healthinsurance;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[7]), "arkets") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_healthmarkets;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[7]), "etreats") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_healthretreats;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[7]), "rainers") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_healthtrainers;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strncmp(&(json_string->getData()[4]), "ing", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[8]), "aids") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_hearing_aids;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[8]), "idproviders") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_hearingaidproviders;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "naartists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hennaartists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "atologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hepatologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "b", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[5]), "lshops") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_herbalshops;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "andspices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_herbsandspices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "sian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hessian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'f':
                            if (strcmp(&(json_string->getData()[3]), "i") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hifi;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "hschools") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_highschools;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "ing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hiking;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "alayan") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_himalayan;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "du_temples") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hindu_temples;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "toricaltours") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_historicaltours;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'k':
                    if (strcmp(&(json_string->getData()[2]), "cafe") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_hkcafe;
                            goto open_enum_is_done;
                          }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "byshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hobbyshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "keyequipment") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hockeyequipment;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "idaydecorations") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_holidaydecorations;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case '_':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[6]), "nspectors") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_home_inspectors;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'o':
                                                if (strcmp(&(json_string->getData()[6]), "rganization") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_home_organization;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'a':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'n':
                                                if (strcmp(&(json_string->getData()[6]), "dgarden") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homeandgarden;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[6]), "pliancerepair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homeappliancerepair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'u':
                                                if (strcmp(&(json_string->getData()[6]), "tomation") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homeautomation;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "leaning") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homecleaning;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'd':
                                        if (strncmp(&(json_string->getData()[5]), "e", 1) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[6]))
                                              {
                                                case 'c':
                                                    if (strcmp(&(json_string->getData()[7]), "or") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_homedecor;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'v':
                                                    if (strcmp(&(json_string->getData()[7]), "elopers") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_homedevelopers;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "nergyauditors") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homeenergyauditors;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[5]), "ealthcare") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homehealthcare;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "nsurance") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homeinsurance;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[5]), "essshelters") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homelessshelters;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'n':
                                        if (strcmp(&(json_string->getData()[5]), "etworkinstall") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homenetworkinstall;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'o':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[6]), "athic") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homeopathic;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'w':
                                                if (strcmp(&(json_string->getData()[6]), "nerassociation") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homeownerassociation;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 's':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "rvices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homeservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[6]), "aging") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_homestaging;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "heatreinstallation") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_hometheatreinstallation;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'w':
                                        if (strcmp(&(json_string->getData()[5]), "indowtinting") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_homewindowtinting;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "uran") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_honduran;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "y") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_honey;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "kah_bars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hookah_bars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "se", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[6]), "boarding") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_horse_boarding;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[6]), "ackriding") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_horsebackriding;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'q':
                                        if (strcmp(&(json_string->getData()[6]), "uipment") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_horsequipment;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[6]), "acing") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_horseracing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'p':
                                    if (strncmp(&(json_string->getData()[4]), "i", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[6]), "e") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_hospice;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strncmp(&(json_string->getData()[6]), "al", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[8]))
                                                      {
                                                        case 'i':
                                                            if (strcmp(&(json_string->getData()[9]), "sts") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_hospitalists;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 's':
                                                            if (json_string->getData()[9] == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_hospitals;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "els") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hostels;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case '_':
                                    if (strcmp(&(json_string->getData()[4]), "air_balloons") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hot_air_balloons;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'd':
                                    if (strncmp(&(json_string->getData()[4]), "og", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_hotdog;
                                                    goto open_enum_is_done;
                                                  }
                                            case 's':
                                                if (json_string->getData()[7] == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_hotdogs;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[6]), "bar") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_hotel_bar;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_hotels;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 't':
                                                        if (strcmp(&(json_string->getData()[7]), "ravel") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_hotelstravel;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "ot") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hotpot;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "prings") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hotsprings;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ubandpool") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_hottubandpool;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "sitters") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_housesitters;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "ngcooperatives") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_housingcooperatives;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strncmp(&(json_string->getData()[2]), "n", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'a':
                                if (strcmp(&(json_string->getData()[4]), "n") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_hunan;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'g':
                                if (strcmp(&(json_string->getData()[4]), "arian") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_hungarian;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 't':
                                if (strcmp(&(json_string->getData()[4]), "ingfishingsupplies") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_huntingfishingsupplies;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'v':
                    if (strcmp(&(json_string->getData()[2]), "ac") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_hvac;
                            goto open_enum_is_done;
                          }
                    break;
                case 'y':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "ridcarrepair") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hybridcarrepair;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "ro", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'j':
                                        if (strcmp(&(json_string->getData()[6]), "etting") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_hydrojetting;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[6]), "onics") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_hydroponics;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[6]), "herapy") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_hydrotherapy;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "nosis") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_hypnosis;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'i':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'b':
                    if (strcmp(&(json_string->getData()[2]), "erian") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_iberian;
                            goto open_enum_is_done;
                          }
                    break;
                case 'c':
                    if (strncmp(&(json_string->getData()[2]), "e", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'c':
                                if (strcmp(&(json_string->getData()[4]), "ream") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_icecream;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'd':
                                if (strcmp(&(json_string->getData()[4]), "elivery") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_icedelivery;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'm':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'm':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "grationlawyers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_immigrationlawyers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "nodermatologists") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_immunodermatologists;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "ortedfood") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_importedfood;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'n':
                                            if (strcmp(&(json_string->getData()[5]), "esian") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_indonesian;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strncmp(&(json_string->getData()[5]), "r", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case '_':
                                                        if (strcmp(&(json_string->getData()[7]), "playcenter") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_indoor_playcenter;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(json_string->getData()[7]), "andscaping") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_indoorlandscaping;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "ak") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_indpak;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'f':
                            if (strcmp(&(json_string->getData()[3]), "ectiousdisease") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_infectiousdisease;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "allmentloans") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_installmentloans;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'u':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[5]), "ationinstallation") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_insulationinstallation;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "ance") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_insurance;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "r", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[6]), "ordesign") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_interiordesign;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[6]), "ocksystems") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_interlocksystems;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'n':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'a':
                                                        switch ((unsigned char)(json_string->getData()[7]))
                                                          {
                                                            case 'l':
                                                                if (strcmp(&(json_string->getData()[8]), "med") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_internalmed;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 't':
                                                                if (strcmp(&(json_string->getData()[8]), "ional") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_international;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'e':
                                                        if (strcmp(&(json_string->getData()[7]), "tcafe") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_internetcafe;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'v':
                                                if (strcmp(&(json_string->getData()[6]), "altraininggyms") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_intervaltraininggyms;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "grocery") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_intlgrocery;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "esting") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_investing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    if (strcmp(&(json_string->getData()[2]), "law") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_iplaw;
                            goto open_enum_is_done;
                          }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strncmp(&(json_string->getData()[3]), "sh", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_irish;
                                            goto open_enum_is_done;
                                          }
                                    case '_':
                                        if (strcmp(&(json_string->getData()[6]), "pubs") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_irish_pubs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "igation") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_irrigation;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "and_pub") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_island_pub;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "s") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_isps;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "aeli") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_israeli;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 't':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "lian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_italian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "ervices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_itservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    if (strcmp(&(json_string->getData()[2]), "hydration") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_ivhydration;
                            goto open_enum_is_done;
                          }
                    break;
                case 'z':
                    if (strcmp(&(json_string->getData()[2]), "akaya") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_izakaya;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'j':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "lsandprisons") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_jailsandprisons;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strncmp(&(json_string->getData()[3]), "a", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "urry") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_japacurry;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'n':
                                        if (strcmp(&(json_string->getData()[5]), "ese") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_japanese;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'z':
                            if (strcmp(&(json_string->getData()[3]), "zandblues") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_jazzandblues;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "skis") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_jetskis;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'w':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "lry", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_jewelry;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[8]), "epair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_jewelryrepair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "sh") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_jewish;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "cebars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_juicebars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strncmp(&(json_string->getData()[3]), "k", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "emovalandhauling") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_junkremovalandhauling;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'y':
                                        if (strcmp(&(json_string->getData()[5]), "ards") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_junkyards;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'k':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    if (strncmp(&(json_string->getData()[2]), "ra", 2) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[4]))
                          {
                            case 'o':
                                if (strncmp(&(json_string->getData()[5]), "ke", 2) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[7]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_karaoke;
                                                goto open_enum_is_done;
                                              }
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[8]), "ental") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_karaokerental;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 't':
                                if (strcmp(&(json_string->getData()[5]), "e") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_karate;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'e':
                    if (strcmp(&(json_string->getData()[2]), "bab") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_kebab;
                            goto open_enum_is_done;
                          }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "kboxing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_kickboxing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[5]), "activities") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_kids_activities;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[5]), "airsalons") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_kidshairsalons;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "sk") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_kiosk;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "hen", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[8]), "ndbath") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_kitchenandbath;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[8]), "ncubators") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_kitchenincubators;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "upplies") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_kitchensupplies;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "boarding") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_kiteboarding;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'n':
                    if (strncmp(&(json_string->getData()[2]), "i", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'f':
                                if (strcmp(&(json_string->getData()[4]), "esharpening") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_knifesharpening;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 't':
                                if (strcmp(&(json_string->getData()[4]), "tingsupplies") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_knittingsupplies;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "bucha") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_kombucha;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "ean") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_korean;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "her") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_kosher;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'l':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "oratorytesting") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_laboratorytesting;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "tationservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_lactationservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "es") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_lakes;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "enters") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_lancenters;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'd':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[5]), "arks") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_landmarks;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'c':
                                                    if (strncmp(&(json_string->getData()[6]), "ap", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[8]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(json_string->getData()[9]), "architects") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_landscapearchitects;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'i':
                                                                if (strcmp(&(json_string->getData()[9]), "ng") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_landscaping;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strcmp(&(json_string->getData()[6]), "rveying") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_landsurveying;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "uage_schools") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_language_schools;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "tian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_laotian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strncmp(&(json_string->getData()[3]), "er", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[6]), "hair_removal") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_laser_hair_removal;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[6]), "asikeyes") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_laserlasikeyes;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[6]), "ag") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_lasertag;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "in") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_latin;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "ndr", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'o':
                                        if (strcmp(&(json_string->getData()[7]), "mat") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_laundromat;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'y':
                                        if (strcmp(&(json_string->getData()[7]), "services") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_laundryservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'w':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case '_':
                                            if (strcmp(&(json_string->getData()[5]), "bowling") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_lawn_bowling;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "ervices") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_lawnservices;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'y':
                                    if (strcmp(&(json_string->getData()[4]), "ers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_lawyers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "ther") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_leather;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "anese") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_lebanese;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "alservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_legalservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "raries") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_libraries;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "eservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_liceservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'f':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "oach") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_lifecoach;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "nsurance") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_lifeinsurance;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'g':
                            if (strncmp(&(json_string->getData()[3]), "hting", 5) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[8]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_lighting;
                                            goto open_enum_is_done;
                                          }
                                    case 's':
                                        if (strcmp(&(json_string->getData()[9]), "tores") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_lightingstores;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "os") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_limos;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ns") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_linens;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "erie") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_lingerie;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'v':
                            if (strcmp(&(json_string->getData()[3]), "estocksupply") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_livestocksupply;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strncmp(&(json_string->getData()[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'f':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'i':
                                                        if (strcmp(&(json_string->getData()[7]), "shstores") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_localfishstores;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(json_string->getData()[7]), "avor") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_localflavor;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "ervices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_localservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'k':
                                    if (strcmp(&(json_string->getData()[4]), "smiths") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_locksmiths;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "nges") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_lounges;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strncmp(&(json_string->getData()[2]), "ggage", 5) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[7]))
                          {
                            case 0:
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_luggage;
                                    goto open_enum_is_done;
                                  }
                            case 's':
                                if (strcmp(&(json_string->getData()[8]), "torage") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_luggagestorage;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'y':
                    if (strcmp(&(json_string->getData()[2]), "onnais") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_lyonnais;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'm':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "rons") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_macarons;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'h':
                                    if (strncmp(&(json_string->getData()[4]), "ine", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[8]), "ental") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_machinerental;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "hops") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_machineshops;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "cians") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_magicians;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (json_string->getData()[4] == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_mags;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "lboxcenters") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mailboxcenters;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "spaces") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_makerspaces;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'u':
                                        if (strcmp(&(json_string->getData()[5]), "partists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_makeupartists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "aysian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_malaysian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "hingbands") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_marchingbands;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "nas") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_marinas;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    if (strncmp(&(json_string->getData()[4]), "et", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[7]), "ng") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_marketing;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_markets;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 't':
                                                        if (strcmp(&(json_string->getData()[8]), "alls") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_marketstalls;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ialarts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_martialarts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "nry_concrete") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_masonry_concrete;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strncmp(&(json_string->getData()[5]), "ge", 2) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_massage;
                                                            goto open_enum_is_done;
                                                          }
                                                    case '_':
                                                        switch ((unsigned char)(json_string->getData()[8]))
                                                          {
                                                            case 's':
                                                                if (strcmp(&(json_string->getData()[9]), "chools") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_massage_schools;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 't':
                                                                if (strcmp(&(json_string->getData()[9]), "herapy") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_massage_therapy;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[5]), "edia") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_massmedia;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "hmakers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_matchmakers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "rnity") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_maternity;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "resses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_mattresses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "ritius") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mauritius;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strncmp(&(json_string->getData()[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[5]), "alls") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_meatballs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (json_string->getData()[5] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_meats;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "enters") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_medcenters;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_media;
                                                        goto open_enum_is_done;
                                                      }
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[6]), "ors") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_mediators;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'c':
                                            if (strncmp(&(json_string->getData()[5]), "al", 2) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 'f':
                                                        if (strcmp(&(json_string->getData()[8]), "oot") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_medicalfoot;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(json_string->getData()[8]), "aw") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_medicallaw;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[8]))
                                                          {
                                                            case 'p':
                                                                if (strcmp(&(json_string->getData()[9]), "a") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_medicalspa;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'u':
                                                                if (strcmp(&(json_string->getData()[9]), "pplies") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_medicalsupplies;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 't':
                                                        if (strcmp(&(json_string->getData()[8]), "ransportation") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_medicaltransportation;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'a':
                                                    if (strcmp(&(json_string->getData()[6]), "tioncenters") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_meditationcenters;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[6]), "rranean") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_mediterranean;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "orycare") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_memorycare;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strncmp(&(json_string->getData()[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "loth") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_menscloth;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[5]), "air") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_menshair;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strncmp(&(json_string->getData()[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'd':
                                                if (strcmp(&(json_string->getData()[6]), "etectorservices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_metaldetectorservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'f':
                                                if (strcmp(&(json_string->getData()[6]), "abricators") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_metalfabricators;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "ostations") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_metrostations;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'x':
                            if (strcmp(&(json_string->getData()[3]), "ican") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mexican;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "astern") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_mideastern;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "ives") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_midwives;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "tarysurplus") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_militarysurplus;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    if (strcmp(&(json_string->getData()[4]), "shakebars") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_milkshakebars;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "i_golf") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mini_golf;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "tingsystemservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mistingsystemservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strncmp(&(json_string->getData()[3]), "il", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[7]), "home_repair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_mobile_home_repair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'd':
                                                if (strcmp(&(json_string->getData()[7]), "entrepair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_mobiledentrepair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'h':
                                                if (strcmp(&(json_string->getData()[7]), "omes") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_mobilehomes;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(json_string->getData()[8]), "rks") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_mobileparks;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'h':
                                                        if (strncmp(&(json_string->getData()[8]), "one", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[11]))
                                                              {
                                                                case 'r':
                                                                    if (strcmp(&(json_string->getData()[12]), "epair") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_mobilephonerepair;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    if (json_string->getData()[12] == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_mobilephones;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "tyequipment") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_mobilityequipment;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "ern_", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[8]), "ustralian") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_modern_australian;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[8]), "uropean") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_modern_european;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'h':
                            if (strcmp(&(json_string->getData()[3]), "els") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mohels;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "olian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_mongolian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "essori") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_montessori;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "ccan") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_moroccan;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'g':
                                            if (strncmp(&(json_string->getData()[5]), "age", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[8]))
                                                  {
                                                    case 'b':
                                                        if (strcmp(&(json_string->getData()[9]), "rokers") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_mortgagebrokers;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'l':
                                                        if (strcmp(&(json_string->getData()[9]), "enders") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_mortgagelenders;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'u':
                                            if (strcmp(&(json_string->getData()[5]), "aryservices") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_mortuaryservices;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "ques") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_mosques;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "o", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[5]), "ealers") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_motodealers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'c':
                                                if (strncmp(&(json_string->getData()[6]), "ycl", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[9]))
                                                      {
                                                        case 'e':
                                                            switch ((unsigned char)(json_string->getData()[10]))
                                                              {
                                                                case '_':
                                                                    if (strcmp(&(json_string->getData()[11]), "rental") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_motorcycle_rental;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'd':
                                                                    if (strcmp(&(json_string->getData()[11]), "ealers") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_motorcycledealers;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'r':
                                                                    if (strcmp(&(json_string->getData()[11]), "epair") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_motorcyclerepair;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'i':
                                                            if (strcmp(&(json_string->getData()[10]), "nggear") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_motorcyclinggear;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "pairs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_motorepairs;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "ntain", 5) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[8]))
                                  {
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[9]), "iking") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_mountainbiking;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[9]), "uts") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_mountainhuts;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'v':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "rs") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_movers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "etheaters") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_movietheaters;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "ythai") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_muaythai;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "icipality") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_municipality;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ums") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_museums;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strncmp(&(json_string->getData()[4]), "c", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[6]), "linstrumentsandteachers") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_musicalinstrumentsandteachers;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(json_string->getData()[7]), "ns") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_musicians;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'n':
                                                        if (strcmp(&(json_string->getData()[7]), "strumentservices") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_musicinstrumentservices;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[6]), "roduction") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_musicproduction;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'v':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'e':
                                                        if (strcmp(&(json_string->getData()[7]), "nues") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_musicvenues;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'i':
                                                        if (strcmp(&(json_string->getData()[7]), "deo") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_musicvideo;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    if (strcmp(&(json_string->getData()[2]), "stics") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_mystics;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'n':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ltechnicians") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nailtechnicians;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "nys") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nannys;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "oletana") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_napoletana;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "ur", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[6]), "lgassuppliers") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_naturalgassuppliers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'o':
                                        if (strcmp(&(json_string->getData()[6]), "pathic") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_naturopathic;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "hrologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nephrologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "ro", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[6]), "ogist") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_neurologist;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[6]), "athologists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_neuropathologists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[6]), "ologists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_neurotologists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'w':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "merican") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_newamerican;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "anadian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_newcanadian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "exican") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_newmexican;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'z':
                                    if (strcmp(&(json_string->getData()[4]), "ealand") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_newzealand;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "raguan") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_nicaraguan;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "is") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_nicois;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "htlife") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nightlife;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "profit") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nonprofit;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "dles") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_noodles;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "herngerman") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_northerngerman;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "egian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_norwegian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "aries") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_notaries;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "ist") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nudist;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "s", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "practitioner") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_nursepractitioner;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "ngschools") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_nursingschools;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "ritionists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_nutritionists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'o':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'b':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "yn") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_obgyn;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "ervatories") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_observatories;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'c':
                    if (strcmp(&(json_string->getData()[2]), "cupationaltherapy") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_occupationaltherapy;
                            goto open_enum_is_done;
                          }
                    break;
                case 'f':
                    if (strncmp(&(json_string->getData()[2]), "fic", 3) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[5]))
                          {
                            case 'e':
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[7]), "leaning") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_officecleaning;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[7]), "quipment") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_officeequipment;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'i':
                                if (strcmp(&(json_string->getData()[6]), "ants") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_officiants;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'i':
                    if (strcmp(&(json_string->getData()[2]), "lchange") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_oilchange;
                            goto open_enum_is_done;
                          }
                    break;
                case 'l':
                    if (strcmp(&(json_string->getData()[2]), "iveoil") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_oliveoil;
                            goto open_enum_is_done;
                          }
                    break;
                case 'n':
                    if (strcmp(&(json_string->getData()[2]), "cologist") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_oncologist;
                            goto open_enum_is_done;
                          }
                    break;
                case 'p':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "sandwiches") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_opensandwiches;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "a") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_opera;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "amalogists") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_opthamalogists;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "cians") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_opticians;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "metrists") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_optometrists;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "lsurgeons") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_oralsurgeons;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strncmp(&(json_string->getData()[3]), "an", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[6]), "onorservices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_organdonorservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "c_stores") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_organic_stores;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ental") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_oriental;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "ho", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[6]), "ontists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_orthodontists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[6]), "edists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_orthopedists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[6]), "ics") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_orthotics;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strncmp(&(json_string->getData()[2]), "teopath", 7) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[9]))
                          {
                            case 'i':
                                if (strcmp(&(json_string->getData()[10]), "cphysicians") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_osteopathicphysicians;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 's':
                                if (json_string->getData()[10] == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_osteopaths;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 't':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'h':
                            if (strcmp(&(json_string->getData()[3]), "ersalons") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_othersalons;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "logists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_otologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strncmp(&(json_string->getData()[2]), "t", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'd':
                                if (strncmp(&(json_string->getData()[4]), "oor", 3) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[7]))
                                      {
                                        case 'f':
                                            if (strcmp(&(json_string->getData()[8]), "urniture") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_outdoorfurniture;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'g':
                                            if (strcmp(&(json_string->getData()[8]), "ear") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_outdoorgear;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'm':
                                            if (strcmp(&(json_string->getData()[8]), "ovies") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_outdoormovies;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'l':
                                if (strcmp(&(json_string->getData()[4]), "et_stores") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_outlet_stores;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'x':
                    if (strcmp(&(json_string->getData()[2]), "ygenbars") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_oxygenbars;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'p':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "kings", 5) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[8]))
                                  {
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[9]), "rvices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_packingservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'u':
                                        if (strcmp(&(json_string->getData()[9]), "pplies") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_packingsupplies;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "dleboarding") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_paddleboarding;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strncmp(&(json_string->getData()[3]), "n", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'm':
                                        if (strcmp(&(json_string->getData()[5]), "anagement") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_painmanagement;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[6]), "ndsip") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_paintandsip;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'b':
                                                if (strcmp(&(json_string->getData()[6]), "all") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_paintball;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "rs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_painters;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "tores") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_paintstores;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'y':
                                                if (strcmp(&(json_string->getData()[6]), "ourownpottery") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_paintyourownpottery;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "istani") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pakistani;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "atine") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_palatine;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "asian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_panasian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "sailing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_parasailing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ntingclasses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_parentingclasses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ng") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_parking;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[5]), "ets") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_parklets;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_parks;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strncmp(&(json_string->getData()[4]), "y", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'b':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'i':
                                                        if (strcmp(&(json_string->getData()[7]), "kerentals") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_partybikerentals;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(json_string->getData()[7]), "srentals") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_partybusrentals;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[6]), "haracters") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_partycharacters;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "quipmentrentals") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_partyequipmentrentals;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "upplies") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_partysupplies;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "portvisaservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_passportvisaservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ashops") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_pastashops;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ntlaw") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_patentlaw;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "ologists") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_pathologists;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ocoverings") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_patiocoverings;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'w':
                            if (strcmp(&(json_string->getData()[3]), "n") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pawn;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'y':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "ayloans") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_paydayloans;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "oll") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_payroll;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "i", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "tric", 4) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[9]))
                                              {
                                                case '_':
                                                    if (strcmp(&(json_string->getData()[10]), "dentists") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_pediatric_dentists;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'i':
                                                    if (strcmp(&(json_string->getData()[10]), "ans") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_pediatricians;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "abs") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_pedicabs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "inese") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pekinese;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "sions") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pensions;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "ume") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_perfume;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "odontists") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_periodontists;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "anentmakeup") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_permanentmakeup;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "an") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_persian;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strncmp(&(json_string->getData()[5]), "nal", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[8]))
                                                  {
                                                    case '_':
                                                        switch ((unsigned char)(json_string->getData()[9]))
                                                          {
                                                            case 'i':
                                                                if (strcmp(&(json_string->getData()[10]), "njury") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_personal_injury;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (strcmp(&(json_string->getData()[10]), "hopping") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_personal_shopping;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'a':
                                                        if (strcmp(&(json_string->getData()[9]), "ssistants") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_personalassistants;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'c':
                                                        switch ((unsigned char)(json_string->getData()[9]))
                                                          {
                                                            case 'a':
                                                                if (strcmp(&(json_string->getData()[10]), "re") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_personalcare;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'h':
                                                                if (strcmp(&(json_string->getData()[10]), "efs") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_personalchefs;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "vian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_peruvian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "t_control") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pest_control;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case '_':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "itting") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_pet_sitting;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strcmp(&(json_string->getData()[5]), "raining") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_pet_training;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "doption") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_petadoption;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'b':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[5]), "arding") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_petboarding;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "eeders") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_petbreeders;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "remation") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_petcremation;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'h':
                                    if (strcmp(&(json_string->getData()[4]), "ospice") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_pethospice;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "nsurance") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_petinsurance;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "hotography") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_petphotography;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_pets;
                                                goto open_enum_is_done;
                                              }
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "rvices") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_petservices;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strcmp(&(json_string->getData()[5]), "ore") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_petstore;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ngzoos") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_pettingzoos;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "ansport") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_pettransport;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "asteremoval") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_petwasteremoval;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "rmacy") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pharmacy;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ebologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_phlebologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "to", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[6]), "oothrentals") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_photoboothrentals;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[6]), "lasses") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_photoclasses;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'g':
                                        if (strncmp(&(json_string->getData()[6]), "raph", 4) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[10]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[11]), "rs") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_photographers;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'y':
                                                    if (strcmp(&(json_string->getData()[11]), "stores") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_photographystores;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'y':
                            if (strncmp(&(json_string->getData()[3]), "sic", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[7]), "ltherapy") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_physicaltherapy;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[7]), "ans") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_physicians;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "ina") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_piadina;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strncmp(&(json_string->getData()[4]), "o", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'b':
                                                if (strcmp(&(json_string->getData()[6]), "ars") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_pianobars;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'e':
                                                        if (strcmp(&(json_string->getData()[7]), "rvices") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_pianoservices;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 't':
                                                        if (strcmp(&(json_string->getData()[7]), "ores") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_pianostores;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "kyourown") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pickyourown;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "rcing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_piercing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ates") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pilates;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "a") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pita;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'z':
                            if (strcmp(&(json_string->getData()[3]), "za") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pizza;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "entaencapsulation") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_placentaencapsulation;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "etarium") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_planetarium;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "ticsurgeons") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_plasticsurgeons;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'y':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'g':
                                            if (strcmp(&(json_string->getData()[5]), "rounds") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_playgrounds;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "ets") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_playsets;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "bing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_plumbing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "_size_fashion") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_plus_size_fashion;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "iatrists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_podiatrists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "e") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_poke;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "dancingclasses") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_poledancingclasses;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "edepartments") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_policedepartments;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "h") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_polish;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "l", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[5]), "illiards") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_poolbilliards;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "leaners") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_poolcleaners;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[5]), "alls") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_poolhalls;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "ervice") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_poolservice;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "orn") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_popcorn;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'u':
                                    if (strncmp(&(json_string->getData()[4]), "p", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[6]), "estaurants") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_popuprestaurants;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "hops") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_popupshops;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "tuguese") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_portuguese;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "toffices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_postoffices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "atoes") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_potatoes;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "tineries") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_poutineries;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'w':
                            if (strcmp(&(json_string->getData()[3]), "dercoating") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_powdercoating;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "atal") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_prenatal;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "hools") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_preschools;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "urewashers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_pressurewashers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "zels") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_pretzels;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "entivemedicine") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_preventivemedicine;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "tmedia") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_printmedia;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strncmp(&(json_string->getData()[4]), "ate", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[8]), "nvestigation") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_privateinvestigation;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'j':
                                                if (strcmp(&(json_string->getData()[8]), "etcharter") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_privatejetcharter;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "chools") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_privateschools;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[8]), "utors") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_privatetutors;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "ssservers") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_processservers;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strcmp(&(json_string->getData()[5]), "ologist") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_proctologist;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "uctdesign") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_productdesign;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "essional") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_professional;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "ne") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_propane;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "rtymgmt") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_propertymgmt;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_props;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 's':
                                    if (strncmp(&(json_string->getData()[4]), "th", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[7]), "tics") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_prosthetics;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'o':
                                                if (strcmp(&(json_string->getData()[7]), "dontists") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_prosthodontists;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "encal") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_provencal;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strncmp(&(json_string->getData()[2]), "ych", 3) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[5]))
                          {
                            case 'i':
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[7]), "trists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_psychiatrists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'c':
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[8]), "astrology") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_psychic_astrology;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[8]), "ediums") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_psychicmediums;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (json_string->getData()[8] == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_psychics;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'o':
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[7]), "nalysts") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_psychoanalysts;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[7]), "ogists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_psychologists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[7]), "herapists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_psychotherapists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "ood") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_pubfood;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strncmp(&(json_string->getData()[4]), "ic", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'a':
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 'd':
                                                        if (strcmp(&(json_string->getData()[8]), "justers") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_publicadjusters;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(json_string->getData()[8]), "t") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_publicart;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[7]), "arkets") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_publicmarkets;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[7]), "lazas") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_publicplazas;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[7]), "elations") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_publicrelations;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[7]), "ervicesgovt") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_publicservicesgovt;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[7]), "ransport") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_publictransport;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 's':
                                    if (json_string->getData()[4] == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_pubs;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "rtorican") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_puertorican;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "monologist") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pulmonologist;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "pkinpatches") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_pumpkinpatches;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'q':
            if (strcmp(&(json_string->getData()[1]), "igong") == 0)
                  {
                    the_open_enum.in_known_list = true;
                    the_open_enum.list_value = Value_qigong;
                    goto open_enum_is_done;
                  }
            break;
        case 'r':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 's':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_races;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strcmp(&(json_string->getData()[5]), "racks") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_racetracks;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ngexperience") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_racingexperience;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "io", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[6]), "ogists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_radiologists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[6]), "tations") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_radiostations;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'f':
                            if (strcmp(&(json_string->getData()[3]), "ting") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rafting;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "en") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_ramen;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "ches") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_ranches;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'w':
                            if (strcmp(&(json_string->getData()[3]), "_food") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_raw_food;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strncmp(&(json_string->getData()[3]), "lestate", 7) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[10]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_realestate;
                                            goto open_enum_is_done;
                                          }
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[11]), "gents") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_realestateagents;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[11]), "awyers") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_realestatelawyers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[11]), "vcs") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_realestatesvcs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'c':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    if (strncmp(&(json_string->getData()[4]), "rd", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[7]), "labels") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_record_labels;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[7]), "ng_studios") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_recording_studios;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "eation") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_recreation;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'y':
                                    if (strcmp(&(json_string->getData()[4]), "clingcenter") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_recyclingcenter;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'f':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "nishing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_refinishing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "exology") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_reflexology;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'g':
                            if (strncmp(&(json_string->getData()[3]), "istr", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[8]), "tionservices") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_registrationservices;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'y':
                                        if (strcmp(&(json_string->getData()[8]), "_office") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_registry_office;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'h':
                            if (strcmp(&(json_string->getData()[3]), "abilitation_center") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rehabilitation_center;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ki") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_reiki;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strncmp(&(json_string->getData()[3]), "igious", 6) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[9]))
                                  {
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[10]), "tems") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_religiousitems;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'o':
                                        if (strcmp(&(json_string->getData()[10]), "rgs") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_religiousorgs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[10]), "chools") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_religiousschools;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "tfurniture") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rentfurniture;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "tileshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_reptileshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "rts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_resorts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "urants") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_restaurants;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "tops") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_reststops;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "i", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'n':
                                        if (strcmp(&(json_string->getData()[5]), "aspecialists") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_retinaspecialists;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[5]), "ement_homes") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_retirement_homes;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "ion") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_reunion;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    if (strcmp(&(json_string->getData()[4]), "holstery") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_reupholstery;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "matologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rhematologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "nelandian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rhinelandian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "dsideassist") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_roadsideassist;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "k_climbing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rock_climbing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "eo") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rodeo;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strncmp(&(json_string->getData()[3]), "an", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_roman;
                                            goto open_enum_is_done;
                                          }
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "an") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_romanian;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "fin", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 'g':
                                        if (json_string->getData()[7] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_roofing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[7]), "pectors") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_roofinspectors;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "isserie_chicken") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rotisserie_chicken;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "s") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rugs;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "sian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_russian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case '_':
                            if (strcmp(&(json_string->getData()[3]), "dealers") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rv_dealers;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "arks") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_rvparks;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'n':
                                        if (strcmp(&(json_string->getData()[5]), "tal") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_rvrental;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[5]), "air") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_rvrepair;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 's':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'f':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "tores") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_safestores;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "yequipment") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_safetyequipment;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ling") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sailing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "d") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_salad;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "adoran") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_salvadoran;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            if (strncmp(&(json_string->getData()[3]), "d", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[5]), "lasting") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_sandblasting;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'w':
                                        if (strcmp(&(json_string->getData()[5]), "iches") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_sandwiches;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "dinian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sardinian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "na", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "nstallation") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_saunainstallation;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (json_string->getData()[6] == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_saunas;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'c':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "dinavian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_scandinavian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "engerhunts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_scavengerhunts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'h':
                            if (strcmp(&(json_string->getData()[3]), "nitzel") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_schnitzel;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'o':
                                    if (strncmp(&(json_string->getData()[4]), "ter", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[8]), "entals") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_scooterrentals;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[8]), "ours") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_scootertours;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "tish") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_scottish;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strncmp(&(json_string->getData()[3]), "een", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[7]), "printing_tshirt_printing") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_screen_printing_tshirt_printing;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[7]), "rinting") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_screenprinting;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "ba") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_scuba;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'f':
                                    if (strncmp(&(json_string->getData()[4]), "ood", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_seafood;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[8]), "arkets") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_seafoodmarkets;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "onaldecorservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_seasonaldecorservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "urity", 5) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[8]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_security;
                                            goto open_enum_is_done;
                                          }
                                    case 's':
                                        if (strcmp(&(json_string->getData()[9]), "ystems") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_securitysystems;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strncmp(&(json_string->getData()[3]), "f", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[5]), "efenseclasses") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_selfdefenseclasses;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "torage") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_selfstorage;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "galese") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_senegalese;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "orcenters") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_seniorcenters;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "ticservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_septicservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'b':
                                    if (strcmp(&(json_string->getData()[4]), "ocroatian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_serbocroatian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strncmp(&(json_string->getData()[4]), "ice", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[8]), "stations") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_service_stations;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "tations") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_servicestations;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "sionphotography") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sessionphotography;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'w':
                            if (strcmp(&(json_string->getData()[3]), "ingalterations") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sewingalterations;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'x':
                            if (strcmp(&(json_string->getData()[3]), "therapists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sextherapists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "ghainese") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_shanghainese;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "edofficespaces") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_sharedofficespaces;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strncmp(&(json_string->getData()[4]), "ed", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'i':
                                                if (strcmp(&(json_string->getData()[7]), "ce") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_shavedice;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[7]), "now") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_shavedsnow;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "pping_centers") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_shipping_centers;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "epair") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_shoerepair;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_shoes;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'h':
                                                    if (strcmp(&(json_string->getData()[6]), "ine") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_shoeshine;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'p':
                                    if (strncmp(&(json_string->getData()[4]), "ping", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[8]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_shopping;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[9]), "enters") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_shoppingcenters;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[9]), "assages") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_shoppingpassages;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "dding") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_shredding;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "nes") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_shrines;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "tters") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_shutters;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "ilian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sicilian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "nmaking") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_signmaking;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "htemples") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sikhtemples;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "entdisco") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_silentdisco;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "gaporean") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_singaporean;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'k':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strncmp(&(json_string->getData()[3]), "t", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[6]), "parks") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_skate_parks;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "hops") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_skateshops;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "ngrinks") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_skatingrinks;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ng") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_skiing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "lednursing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_skillednursing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "care") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_skincare;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "esorts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_skiresorts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "hools") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_skischools;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'h':
                                            if (strcmp(&(json_string->getData()[5]), "ops") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_skishops;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'y':
                            if (strcmp(&(json_string->getData()[3]), "diving") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_skydiving;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'l':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "ding") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_sledding;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "p", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "pecialists") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sleepspecialists;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'w':
                                                if (strcmp(&(json_string->getData()[6]), "ear") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sleepwear;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "vakian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_slovakian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'm':
                    if (strncmp(&(json_string->getData()[2]), "o", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'g':
                                if (strcmp(&(json_string->getData()[4]), "_check_stations") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_smog_check_stations;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'k':
                                if (strcmp(&(json_string->getData()[4]), "ehouse") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_smokehouse;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'n':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'o':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "keling") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_snorkeling;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "removal") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_snowremoval;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "ggleservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_snuggleservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "ial", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[7]), "clubs") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_social_clubs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[7]), "ecuritylaw") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_socialsecuritylaw;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'f':
                            if (strcmp(&(json_string->getData()[3]), "twaredevelopment") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_softwaredevelopment;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strncmp(&(json_string->getData()[3]), "ar", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "nstallation") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_solarinstallation;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'p':
                                        if (strcmp(&(json_string->getData()[6]), "anelcleaning") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_solarpanelcleaning;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "melierservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sommelierservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "hrologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sophrologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "food") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_soulfood;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'p':
                                    if (json_string->getData()[4] == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_soup;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strncmp(&(json_string->getData()[4]), "h", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[6]), "frican") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_southafrican;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "rn") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_southern;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "enirs") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_souvenirs;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'p':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "ish") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_spanish;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (json_string->getData()[4] == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_spas;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "keasies") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_speakeasies;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "ial", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 'b':
                                                if (strcmp(&(json_string->getData()[8]), "ikes") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_specialbikes;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[8]), "d") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_specialed;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[8]), "yschools") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_specialtyschools;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "ch", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[7]), "therapists") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_speech_therapists;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[7]), "raining") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_speechtraining;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "mclinic") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_spermclinic;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "esurgeons") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_spinesurgeons;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "itual_shop") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_spiritual_shop;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "rt", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'g':
                                        if (strcmp(&(json_string->getData()[6]), "oods") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_sportgoods;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[7]), "clubs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sports_clubs;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'b':
                                                if (strcmp(&(json_string->getData()[7]), "ars") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sportsbars;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[7]), "ed") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sportsmed;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[7]), "sychologists") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sportspsychologists;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[7]), "eams") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sportsteams;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'w':
                                                if (strcmp(&(json_string->getData()[7]), "ear") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_sportswear;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "aytanning") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_spraytanning;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'q':
                    if (strcmp(&(json_string->getData()[2]), "uash") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_squash;
                            goto open_enum_is_done;
                          }
                    break;
                case 'r':
                    if (strcmp(&(json_string->getData()[2]), "ilankan") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_srilankan;
                            goto open_enum_is_done;
                          }
                    break;
                case 't':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "iumsarenas") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_stadiumsarenas;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "ionery") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_stationery;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "k") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_steak;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'r':
                                    if (strcmp(&(json_string->getData()[4]), "eo_installation") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_stereo_installation;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "ckings") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_stockings;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "et", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[7]), "rt") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_streetart;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'v':
                                                if (strcmp(&(json_string->getData()[7]), "endors") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_streetvendors;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    if (strncmp(&(json_string->getData()[4]), "p", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[6]), "lubs") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_stripclubs;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[6]), "easedancers") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_stripteasedancers;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "cturalengineers") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_structuralengineers;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'u':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "co") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_stucco;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "iotaping") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_studiotaping;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "_ouest") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sud_ouest;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'g':
                            if (strncmp(&(json_string->getData()[3]), "ar", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[6]), "ng") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_sugaring;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[6]), "hacks") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_sugarshacks;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "mer_camps") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_summer_camps;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "glasses") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sunglasses;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strncmp(&(json_string->getData()[3]), "p", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "rclubs") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_supperclubs;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[5]), "iesrestaurant") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_suppliesrestaurant;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'f':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[5]), "ng") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_surfing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'c':
                                                    if (strcmp(&(json_string->getData()[6]), "hools") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_surfschools;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'h':
                                                    if (strcmp(&(json_string->getData()[6]), "op") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_surfshop;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'g':
                                    if (strcmp(&(json_string->getData()[4]), "eons") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_surgeons;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "hi") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_sushi;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'w':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "bian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_swabian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "dish") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_swedish;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'm':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'm':
                                            if (strncmp(&(json_string->getData()[5]), "ing", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[8]))
                                                  {
                                                    case 'l':
                                                        if (strcmp(&(json_string->getData()[9]), "essons") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_swimminglessons;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'p':
                                                        if (strcmp(&(json_string->getData()[9]), "ools") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_swimmingpools;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'w':
                                            if (strcmp(&(json_string->getData()[5]), "ear") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_swimwear;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "sfood") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_swissfood;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'y':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'n':
                            if (strcmp(&(json_string->getData()[3]), "agogues") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_synagogues;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "ian") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_syrian;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'z':
                    if (strcmp(&(json_string->getData()[2]), "echuan") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_szechuan;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 't':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "c") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tabac;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'l':
                                    if (strncmp(&(json_string->getData()[4]), "e", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 't':
                                                if (strcmp(&(json_string->getData()[6]), "opgames") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_tabletopgames;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'w':
                                                if (strcmp(&(json_string->getData()[6]), "are") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_tableware;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'c':
                            if (strcmp(&(json_string->getData()[3]), "os") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tacos;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "kwondo") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_taekwondo;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "hi") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_taichi;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'w':
                                    if (strcmp(&(json_string->getData()[4]), "anese") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_taiwanese;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "entagencies") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_talentagencies;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            if (strncmp(&(json_string->getData()[3]), "ning", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tanning;
                                            goto open_enum_is_done;
                                          }
                                    case 'b':
                                        if (strcmp(&(json_string->getData()[8]), "eds") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_tanningbeds;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'p':
                            if (strncmp(&(json_string->getData()[3]), "as", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tapas;
                                            goto open_enum_is_done;
                                          }
                                    case 'm':
                                        if (strcmp(&(json_string->getData()[6]), "allplates") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_tapasmallplates;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "tingclasses") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tastingclasses;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strncmp(&(json_string->getData()[3]), "too", 3) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[6]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tattoo;
                                            goto open_enum_is_done;
                                          }
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[7]), "emoval") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_tattooremoval;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'x':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'd':
                                            if (strcmp(&(json_string->getData()[5]), "ermy") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_taxidermy;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            if (json_string->getData()[5] == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_taxis;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "aw") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_taxlaw;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'o':
                                    if (strcmp(&(json_string->getData()[4]), "ffice") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_taxoffice;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    if (strcmp(&(json_string->getData()[4]), "ervices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_taxservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'c':
                    if (strcmp(&(json_string->getData()[2]), "m") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_tcm;
                            goto open_enum_is_done;
                          }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 0:
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_tea;
                                        goto open_enum_is_done;
                                      }
                                case 'c':
                                    if (strcmp(&(json_string->getData()[4]), "hersupplies") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_teachersupplies;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "building") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_teambuilding;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "thwhitening") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_teethwhitening;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strncmp(&(json_string->getData()[3]), "e", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "ommunications") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_telecommunications;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'v':
                                        if (strncmp(&(json_string->getData()[5]), "isions", 6) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[11]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[12]), "rviceproviders") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_televisionserviceproviders;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[12]), "ations") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_televisionstations;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "ntlaw") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tenantlaw;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "is") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tennis;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "panyaki") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_teppanyaki;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "tprep") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_testprep;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'x':
                            if (strcmp(&(json_string->getData()[3]), "-mex") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tex_mex;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "i") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_thai;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "ter") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_theater;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "edcafes") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_themedcafes;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "adingservices") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_threadingservices;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ft_stores") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_thrift_stores;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "kets", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 0:
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_tickets;
                                            goto open_enum_is_done;
                                          }
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[8]), "les") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_ticketsales;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'k':
                            if (strcmp(&(json_string->getData()[3]), "ibars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tikibars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tiling;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "es") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tires;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "leloans") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_titleloans;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "accoshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tobaccoshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "rs") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tours;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'w':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'i':
                                    if (strcmp(&(json_string->getData()[4]), "ng") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_towing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "arservice") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_towncarservice;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'h':
                                            if (strcmp(&(json_string->getData()[5]), "all") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_townhall;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'x':
                            if (strcmp(&(json_string->getData()[3]), "icologists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_toxicologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'y':
                            if (strcmp(&(json_string->getData()[3]), "s") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_toys;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[5]), "merican") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_tradamerican;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'c':
                                            if (strcmp(&(json_string->getData()[5]), "lothing") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_tradclothing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[5]), "fairs") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_tradefairs;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'f':
                                    if (strncmp(&(json_string->getData()[4]), "fic", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[7]))
                                          {
                                            case 's':
                                                if (strcmp(&(json_string->getData()[8]), "chools") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_trafficschools;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[8]), "icketinglaw") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_trafficticketinglaw;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'i':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'l':
                                            if (strncmp(&(json_string->getData()[5]), "er", 2) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[7]))
                                                  {
                                                    case 'd':
                                                        if (strcmp(&(json_string->getData()[8]), "ealers") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_trailerdealers;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'r':
                                                        if (strncmp(&(json_string->getData()[8]), "e", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[9]))
                                                              {
                                                                case 'n':
                                                                    if (strcmp(&(json_string->getData()[10]), "tal") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_trailerrental;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'p':
                                                                    if (strcmp(&(json_string->getData()[10]), "air") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_trailerrepair;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'n':
                                            if (strncmp(&(json_string->getData()[5]), "s", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_trains;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 't':
                                                        if (strcmp(&(json_string->getData()[7]), "ations") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_trainstations;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'm':
                                    if (strcmp(&(json_string->getData()[4]), "poline") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_trampoline;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'n':
                                    if (strncmp(&(json_string->getData()[4]), "s", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[6]), "ationservices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_translationservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'm':
                                                if (strcmp(&(json_string->getData()[6]), "issionrepair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_transmissionrepair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                if (strcmp(&(json_string->getData()[6]), "ort") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_transport;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "torie") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_trattorie;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strncmp(&(json_string->getData()[4]), "el", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[7]), "gents") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_travelagents;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[7]), "ervices") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_travelservices;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "eservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_treeservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'n':
                                    if (strcmp(&(json_string->getData()[4]), "idadian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_trinidadian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "iahosts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_triviahosts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "p", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'h':
                                        if (strcmp(&(json_string->getData()[5]), "yshops") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_trophyshops;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'i':
                                        if (strcmp(&(json_string->getData()[5]), "calmedicine") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_tropicalmedicine;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'u':
                            if (strncmp(&(json_string->getData()[3]), "ck", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[6]), "rental") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_truck_rental;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'd':
                                        if (strcmp(&(json_string->getData()[6]), "ealers") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_truckdealers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[6]), "epair") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_truckrepair;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "ing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tubing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "na") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tuina;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "kish") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_turkish;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "can") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tuscan;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "oring") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_tutoring;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'v':
                    if (strcmp(&(json_string->getData()[2]), "mounting") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_tvmounting;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'u':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'k':
                    if (strcmp(&(json_string->getData()[2]), "rainian") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_ukrainian;
                            goto open_enum_is_done;
                          }
                    break;
                case 'l':
                    if (strcmp(&(json_string->getData()[2]), "trasoundimagingcenters") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_ultrasoundimagingcenters;
                            goto open_enum_is_done;
                          }
                    break;
                case 'n':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strcmp(&(json_string->getData()[3]), "erseamedicine") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_underseamedicine;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'f':
                                    if (strcmp(&(json_string->getData()[4]), "orms") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_uniforms;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'v':
                                    if (strcmp(&(json_string->getData()[4]), "ersity_housing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_university_housing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "fficialyelpevents") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_unofficialyelpevents;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "ent_care") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_urgent_care;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "logists") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_urologists;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 's':
                    if (strncmp(&(json_string->getData()[2]), "ed", 2) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[4]))
                          {
                            case 'b':
                                if (strcmp(&(json_string->getData()[5]), "ooks") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_usedbooks;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'c':
                                if (strcmp(&(json_string->getData()[5]), "ardealers") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_usedcardealers;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 't':
                    if (strcmp(&(json_string->getData()[2]), "ilities") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_utilities;
                            goto open_enum_is_done;
                          }
                    break;
                case 'z':
                    if (strcmp(&(json_string->getData()[2]), "bek") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_uzbek;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'v':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "ation", 5) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[8]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[9]), "rentals") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_vacation_rentals;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[9]), "entalagents") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_vacationrentalagents;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "etservices") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_valetservices;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'p':
                            if (strcmp(&(json_string->getData()[3]), "eshops") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_vapeshops;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "cularmedicine") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_vascularmedicine;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'a':
                                    if (strcmp(&(json_string->getData()[4]), "n") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_vegan;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "tarian") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_vegetarian;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'h':
                            if (strncmp(&(json_string->getData()[3]), "icle", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case 's':
                                        if (strcmp(&(json_string->getData()[8]), "hipping") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_vehicleshipping;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'w':
                                        if (strcmp(&(json_string->getData()[8]), "raps") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_vehiclewraps;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "zuelan") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_venezuelan;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'u':
                                    if (strcmp(&(json_string->getData()[4]), "es") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_venues;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "mouthbars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_vermouthbars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 0:
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_vet;
                                        goto open_enum_is_done;
                                      }
                                case 'e':
                                    if (strcmp(&(json_string->getData()[4]), "ransorganizations") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_veteransorganizations;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "eo", 2) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[5]))
                                  {
                                    case 'a':
                                        if (strcmp(&(json_string->getData()[6]), "ndgames") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_videoandgames;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'f':
                                        if (strcmp(&(json_string->getData()[6]), "ilmproductions") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_videofilmproductions;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'g':
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'a':
                                                if (strcmp(&(json_string->getData()[7]), "mestores") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_videogamestores;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'r':
                                                if (strcmp(&(json_string->getData()[7]), "aphers") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_videographers;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "tnamese") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_vietnamese;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 't':
                                    if (strcmp(&(json_string->getData()[4]), "age") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_vintage;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'y':
                                    if (strncmp(&(json_string->getData()[4]), "l", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[6]), "records") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_vinyl_records;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[6]), "iding") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_vinylsiding;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "tualrealitycenters") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_virtualrealitycenters;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 's':
                            if (strcmp(&(json_string->getData()[3]), "itorcenters") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_visitorcenters;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 't':
                            if (strcmp(&(json_string->getData()[3]), "aminssupplements") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_vitaminssupplements;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'c':
                            if (strncmp(&(json_string->getData()[3]), "a", 1) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[5]), "coach") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_vocalcoach;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 't':
                                        if (strcmp(&(json_string->getData()[5]), "ion") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_vocation;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "leyball") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_volleyball;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'w':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'a':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'f':
                            if (strcmp(&(json_string->getData()[3]), "fles") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_waffles;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strcmp(&(json_string->getData()[4]), "orfschools") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_waldorfschools;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'k':
                                    if (strncmp(&(json_string->getData()[4]), "in", 2) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[6]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[7]), "linics") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_walkinclinics;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'g':
                                                if (strcmp(&(json_string->getData()[7]), "tours") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_walkingtours;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "papering") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_wallpapering;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 't':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'c':
                                    if (strncmp(&(json_string->getData()[4]), "h", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case '_':
                                                if (strcmp(&(json_string->getData()[6]), "repair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_watch_repair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[6]), "s") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_watches;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'e':
                                    if (strncmp(&(json_string->getData()[4]), "r", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'd':
                                                if (strcmp(&(json_string->getData()[6]), "elivery") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_waterdelivery;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'h':
                                                if (strcmp(&(json_string->getData()[6]), "eaterinstallrepair") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_waterheaterinstallrepair;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'p':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'a':
                                                        if (strcmp(&(json_string->getData()[7]), "rks") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_waterparks;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'r':
                                                        if (strcmp(&(json_string->getData()[7]), "oofing") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_waterproofing;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(json_string->getData()[7]), "rification") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_waterpurification;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 's':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 't':
                                                        if (strcmp(&(json_string->getData()[7]), "ores") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_waterstores;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'u':
                                                        if (strcmp(&(json_string->getData()[7]), "ppliers") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_watersuppliers;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            case 't':
                                                if (strcmp(&(json_string->getData()[6]), "axis") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_watertaxis;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'x':
                            if (strcmp(&(json_string->getData()[3]), "ing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_waxing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'e':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'b':
                            if (strcmp(&(json_string->getData()[3]), "_design") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_web_design;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'd':
                            if (strncmp(&(json_string->getData()[3]), "ding", 4) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[7]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[8]), "planning") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_wedding_planning;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[8]), "happels") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_weddingchappels;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "ghtlosscenters") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_weightlosscenters;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            if (strcmp(&(json_string->getData()[3]), "ldrilling") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_welldrilling;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'h':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'a':
                            if (strcmp(&(json_string->getData()[3]), "lewatchingtours") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_whalewatchingtours;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'e':
                            if (strcmp(&(json_string->getData()[3]), "elrimrepair") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_wheelrimrepair;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'i':
                            if (strcmp(&(json_string->getData()[3]), "skeybars") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_whiskeybars;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'o':
                            if (strncmp(&(json_string->getData()[3]), "lesale", 6) == 0)
                              {
                                switch ((unsigned char)(json_string->getData()[9]))
                                  {
                                    case '_':
                                        if (strcmp(&(json_string->getData()[10]), "stores") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_wholesale_stores;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'r':
                                        if (strcmp(&(json_string->getData()[10]), "s") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_wholesalers;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'i':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "s") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_wigs;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'l':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    if (strncmp(&(json_string->getData()[4]), "life", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[8]))
                                          {
                                            case 'c':
                                                if (strcmp(&(json_string->getData()[9]), "ontrol") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_wildlifecontrol;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'h':
                                                if (strcmp(&(json_string->getData()[9]), "unting") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_wildlifehunting;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'l':
                                    if (strcmp(&(json_string->getData()[4]), "strustsprobates") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_willstrustsprobates;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        case 'n':
                            switch ((unsigned char)(json_string->getData()[3]))
                              {
                                case 'd':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case 'o':
                                            if (strncmp(&(json_string->getData()[5]), "w", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 's':
                                                        if (strcmp(&(json_string->getData()[7]), "installation") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_windowsinstallation;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'w':
                                                        if (strcmp(&(json_string->getData()[7]), "ashing") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_windowwashing;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[5]), "hieldinstallrepair") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_windshieldinstallrepair;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'e':
                                    switch ((unsigned char)(json_string->getData()[4]))
                                      {
                                        case '_':
                                            if (strcmp(&(json_string->getData()[5]), "bars") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_wine_bars;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[5]), "ies") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_wineries;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(json_string->getData()[5]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(json_string->getData()[6]), "st", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[8]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(json_string->getData()[9]), "classes") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_winetasteclasses;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'i':
                                                                if (strcmp(&(json_string->getData()[9]), "ngroom") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_winetastingroom;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'o':
                                                    if (strcmp(&(json_string->getData()[6]), "urs") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_winetours;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'k':
                            if (json_string->getData()[3] == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_wok;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'm':
                            if (strcmp(&(json_string->getData()[3]), "enscloth") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_womenscloth;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "kerscomplaw") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_workerscomplaw;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'r':
                    if (strcmp(&(json_string->getData()[2]), "aps") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_wraps;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'x':
            if (strcmp(&(json_string->getData()[1]), "masmarkets") == 0)
                  {
                    the_open_enum.in_known_list = true;
                    the_open_enum.list_value = Value_xmasmarkets;
                    goto open_enum_is_done;
                  }
            break;
        case 'y':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'e':
                    if (strcmp(&(json_string->getData()[2]), "lpevents") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_yelpevents;
                            goto open_enum_is_done;
                          }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'g':
                            if (strcmp(&(json_string->getData()[3]), "a") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_yoga;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'u':
                            if (strcmp(&(json_string->getData()[3]), "th_club") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_youth_club;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                case 'u':
                    if (strcmp(&(json_string->getData()[2]), "goslav") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_yugoslav;
                            goto open_enum_is_done;
                          }
                    break;
                default:
                    break;
              }
            break;
        case 'z':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'i':
                    if (strcmp(&(json_string->getData()[2]), "pline") == 0)
                          {
                            the_open_enum.in_known_list = true;
                            the_open_enum.list_value = Value_zipline;
                            goto open_enum_is_done;
                          }
                    break;
                case 'o':
                    switch ((unsigned char)(json_string->getData()[2]))
                      {
                        case 'o':
                            if (strcmp(&(json_string->getData()[3]), "s") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_zoos;
                                    goto open_enum_is_done;
                                  }
                            break;
                        case 'r':
                            if (strcmp(&(json_string->getData()[3]), "bing") == 0)
                                  {
                                    the_open_enum.in_known_list = true;
                                    the_open_enum.list_value = Value_zorbing;
                                    goto open_enum_is_done;
                                  }
                            break;
                        default:
                            break;
                      }
                    break;
                default:
                    break;
              }
            break;
        default:
            break;
      }
    the_open_enum.in_known_list = false;
    the_open_enum.string_value = json_string->getData();
  open_enum_is_done:;
    setValue(the_open_enum);
  }

YelpCategoryAliasJSON::YelpCategoryAliasJSON(void) :
        flagHasValue(false)
  {
  }

YelpCategoryAliasJSON::YelpCategoryAliasJSON(TypeValue init_value) :
        flagHasValue(true),
        storeValue(init_value)
  {
  }

YelpCategoryAliasJSON::YelpCategoryAliasJSON(const char *init_value) :
        flagHasValue(true)
  {
    TypeValueKnownValues known = stringToValue(init_value);
    if (known == Value__none)
      {
        storeValue.in_known_list = false;
        storeValue.string_value = init_value;
      }
    else
      {
        storeValue.in_known_list = true;
        storeValue.list_value = known;
      }
  }

YelpCategoryAliasJSON::YelpCategoryAliasJSON(std::string init_value) :
        flagHasValue(true)
  {
    TypeValueKnownValues known = stringToValue(init_value.c_str());
    if (known == Value__none)
      {
        storeValue.in_known_list = false;
        storeValue.string_value = init_value;
      }
    else
      {
        storeValue.in_known_list = true;
        storeValue.list_value = known;
      }
  }

YelpCategoryAliasJSON::YelpCategoryAliasJSON(TypeValueKnownValues init_value) :
        flagHasValue(true)
  {
    assert(init_value != Value__none);
    storeValue.in_known_list = true;
    storeValue.list_value = init_value;
  }

YelpCategoryAliasJSON::~YelpCategoryAliasJSON(void)
  {
  }

bool YelpCategoryAliasJSON::hasValue(void) const
  {
    return flagHasValue;
  }

YelpCategoryAliasJSON::TypeValue YelpCategoryAliasJSON::getValue(void)
  {
    assert(flagHasValue);
    return storeValue;
  }

const YelpCategoryAliasJSON::TypeValue YelpCategoryAliasJSON::getValue(void) const
  {
    assert(flagHasValue);
    return storeValue;
  }

const char *YelpCategoryAliasJSON::getValueAsChars(void) const
  {
    TypeValue result = getValue();
    if (result.in_known_list)
        return stringFromValue(result.list_value);
    else
        return result.string_value.c_str();
  }

std::string YelpCategoryAliasJSON::getValueAsString(void) const
  {
    return getValueAsChars();
  }

YelpCategoryAliasJSON *YelpCategoryAliasJSON::from_json(JSONValue *json_value, bool ignore_extras)
  {
    YelpCategoryAliasJSON *result;
      {
        JSONHoldingGenerator<Generator, RCHandle<YelpCategoryAliasJSON>, YelpCategoryAliasJSON *, bool> generator("Type YelpCategoryAlias", ignore_extras);
        json_value->write(&generator);
        assert(generator.have_value);
        result = generator.value.referenced();
        result->add_reference();
      };
    result->remove_reference_no_delete();
    return result;
  }
