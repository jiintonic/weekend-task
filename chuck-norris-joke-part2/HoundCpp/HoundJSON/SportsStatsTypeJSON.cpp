/* file "SportsStatsTypeJSON.cpp" */

/* Generated automatically by Classy JSON. */


#pragma implementation "SportsStatsTypeJSON.h"

#include "SportsStatsTypeJSON.h"


SportsStatsTypeJSON::TypeValue::TypeValue(void)
  {
  }

SportsStatsTypeJSON::TypeValue::TypeValue(const TypeValue &other) : in_known_list(other.in_known_list)
  {
    if (in_known_list)
        list_value = other.list_value;
    else
        string_value = other.string_value;
  }

SportsStatsTypeJSON::TypeValue::TypeValue(TypeValueKnownValues other) : in_known_list(true), list_value(other)

  {
  }

bool SportsStatsTypeJSON::TypeValue::operator==(const TypeValue &other) const
  {
    if (in_known_list != other.in_known_list)
        return false;
    if (in_known_list)
        return list_value == other.list_value;
    else
        return (strcmp(string_value.c_str(), other.string_value.c_str()) == 0);
  }

bool SportsStatsTypeJSON::TypeValue::operator!=(const TypeValue &other) const
  {
    return !(operator==(other));
  }

bool SportsStatsTypeJSON::TypeValue::operator<(const TypeValue &other) const
  {
    if (in_known_list != other.in_known_list)
        return in_known_list;
    if (in_known_list)
        return list_value < other.list_value;
    else
        return (strcmp(string_value.c_str(), other.string_value.c_str()) < 0);
  }

bool SportsStatsTypeJSON::TypeValue::operator>(const TypeValue &other) const
  {
    return other.operator<(*this);
  }

bool SportsStatsTypeJSON::TypeValue::operator>=(const TypeValue &other) const
  {
    return !(operator<(other));
  }

bool SportsStatsTypeJSON::TypeValue::operator<=(const TypeValue &other) const
  {
    return !(other.operator<(*this));
  }

SportsStatsTypeJSON::TypeValueKnownValues SportsStatsTypeJSON::stringToValue(const char *chars)
  {
    switch ((unsigned char)(chars[0]))
      {
        case 'M':
            if (strncmp(&(chars[1]), "LB", 2) == 0)
              {
                switch ((unsigned char)(chars[3]))
                  {
                    case 'B':
                        if (strncmp(&(chars[4]), "aserunning", 10) == 0)
                          {
                            switch ((unsigned char)(chars[14]))
                              {
                                case 'C':
                                    if (strcmp(&(chars[15]), "aughtStealing") == 0)
                                        return Value_MLBBaserunningCaughtStealing;
                                    break;
                                case 'P':
                                    if (strcmp(&(chars[15]), "ickoffs") == 0)
                                        return Value_MLBBaserunningPickoffs;
                                    break;
                                case 'S':
                                    if (strncmp(&(chars[15]), "tolenBase", 9) == 0)
                                      {
                                        switch ((unsigned char)(chars[24]))
                                          {
                                            case 'P':
                                                if (strcmp(&(chars[25]), "erc") == 0)
                                                    return Value_MLBBaserunningStolenBasePerc;
                                                break;
                                            case 's':
                                                if (chars[25] == 0)
                                                    return Value_MLBBaserunningStolenBases;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'F':
                        if (strncmp(&(chars[4]), "ielding", 7) == 0)
                          {
                            switch ((unsigned char)(chars[11]))
                              {
                                case 'A':
                                    if (strcmp(&(chars[12]), "ssists") == 0)
                                        return Value_MLBFieldingAssists;
                                    break;
                                case 'C':
                                    if (strcmp(&(chars[12]), "ompleteGames") == 0)
                                        return Value_MLBFieldingCompleteGames;
                                    break;
                                case 'D':
                                    if (strcmp(&(chars[12]), "oublePlays") == 0)
                                        return Value_MLBFieldingDoublePlays;
                                    break;
                                case 'E':
                                    if (strcmp(&(chars[12]), "rrors") == 0)
                                        return Value_MLBFieldingErrors;
                                    break;
                                case 'F':
                                    if (strcmp(&(chars[12]), "ieldingPercentage") == 0)
                                        return Value_MLBFieldingFieldingPercentage;
                                    break;
                                case 'G':
                                    if (strncmp(&(chars[12]), "ames", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[16]))
                                          {
                                            case 'F':
                                                if (strcmp(&(chars[17]), "inished") == 0)
                                                    return Value_MLBFieldingGamesFinished;
                                                break;
                                            case 'P':
                                                if (strcmp(&(chars[17]), "layed") == 0)
                                                    return Value_MLBFieldingGamesPlayed;
                                                break;
                                            case 'S':
                                                if (strcmp(&(chars[17]), "tarted") == 0)
                                                    return Value_MLBFieldingGamesStarted;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'P':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[13]), "ssedBalls") == 0)
                                                return Value_MLBFieldingPassedBalls;
                                            break;
                                        case 'u':
                                            if (strcmp(&(chars[13]), "touts") == 0)
                                                return Value_MLBFieldingPutouts;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'R':
                                    if (strcmp(&(chars[12]), "angeFactor") == 0)
                                        return Value_MLBFieldingRangeFactor;
                                    break;
                                case 'T':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'o':
                                            if (strcmp(&(chars[13]), "talChances") == 0)
                                                return Value_MLBFieldingTotalChances;
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[13]), "iplePlays") == 0)
                                                return Value_MLBFieldingTriplePlays;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'H':
                        if (strncmp(&(chars[4]), "itting", 6) == 0)
                          {
                            switch ((unsigned char)(chars[10]))
                              {
                                case 'A':
                                    if (strncmp(&(chars[11]), "tBats", 5) == 0)
                                      {
                                        switch ((unsigned char)(chars[16]))
                                          {
                                            case 0:
                                                return Value_MLBHittingAtBats;
                                            case 'P':
                                                if (strncmp(&(chars[17]), "er", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[19]))
                                                      {
                                                        case 'H':
                                                            if (strcmp(&(chars[20]), "omeRun") == 0)
                                                                return Value_MLBHittingAtBatsPerHomeRun;
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(chars[20]), "trikeout") == 0)
                                                                return Value_MLBHittingAtBatsPerStrikeout;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'W':
                                                if (strcmp(&(chars[17]), "ithRunnersInScoringPosition") == 0)
                                                    return Value_MLBHittingAtBatsWithRunnersInScoringPosition;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'B':
                                    if (strncmp(&(chars[11]), "a", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[12]))
                                          {
                                            case 'l':
                                                if (strncmp(&(chars[13]), "ls", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[15]))
                                                      {
                                                        case 0:
                                                            return Value_MLBHittingBalls;
                                                        case 'I':
                                                            if (strcmp(&(chars[16]), "nPlay") == 0)
                                                                return Value_MLBHittingBallsInPlay;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 't':
                                                if (strncmp(&(chars[13]), "tingAverage", 11) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[24]))
                                                      {
                                                        case 0:
                                                            return Value_MLBHittingBattingAverage;
                                                        case 'O':
                                                            if (strcmp(&(chars[25]), "nBallsInPlay") == 0)
                                                                return Value_MLBHittingBattingAverageOnBallsInPlay;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'C':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'o':
                                            if (strcmp(&(chars[12]), "mpleteGames") == 0)
                                                return Value_MLBHittingCompleteGames;
                                            break;
                                        case 'y':
                                            if (strcmp(&(chars[12]), "cles") == 0)
                                                return Value_MLBHittingCycles;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'D':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[12]), "rtBallsFaced") == 0)
                                                return Value_MLBHittingDirtBallsFaced;
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[12]), "ubles") == 0)
                                                return Value_MLBHittingDoubles;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'E':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'a':
                                            if (strcmp(&(chars[12]), "rnedRunsScored") == 0)
                                                return Value_MLBHittingEarnedRunsScored;
                                            break;
                                        case 'x':
                                            if (strcmp(&(chars[12]), "traBaseHits") == 0)
                                                return Value_MLBHittingExtraBaseHits;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'F':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[12]), "eldersChoice") == 0)
                                                return Value_MLBHittingFieldersChoice;
                                            break;
                                        case 'l':
                                            if (strncmp(&(chars[12]), "y", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[14]), "alls") == 0)
                                                            return Value_MLBHittingFlyBalls;
                                                        break;
                                                    case 'O':
                                                        if (strncmp(&(chars[14]), "uts", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[17]))
                                                              {
                                                                case 0:
                                                                    return Value_MLBHittingFlyOuts;
                                                                case 'I':
                                                                    if (strcmp(&(chars[18]), "ntoDoublePlays") == 0)
                                                                        return Value_MLBHittingFlyOutsIntoDoublePlays;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[12]), "ulBalls") == 0)
                                                return Value_MLBHittingFoulBalls;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'G':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'a':
                                            if (strncmp(&(chars[12]), "mes", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[15]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(chars[16]), "inished") == 0)
                                                            return Value_MLBHittingGamesFinished;
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(chars[16]), "layed") == 0)
                                                            return Value_MLBHittingGamesPlayed;
                                                        break;
                                                    case 'S':
                                                        if (strcmp(&(chars[16]), "tarted") == 0)
                                                            return Value_MLBHittingGamesStarted;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strncmp(&(chars[12]), "ound", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[16]))
                                                  {
                                                    case 'B':
                                                        if (strncmp(&(chars[17]), "all", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[20]))
                                                              {
                                                                case 'T':
                                                                    if (strcmp(&(chars[21]), "oFlyBallRatio") == 0)
                                                                        return Value_MLBHittingGroundBallToFlyBallRatio;
                                                                    break;
                                                                case 's':
                                                                    if (chars[21] == 0)
                                                                        return Value_MLBHittingGroundBalls;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'O':
                                                        if (strcmp(&(chars[17]), "uts") == 0)
                                                            return Value_MLBHittingGroundOuts;
                                                        break;
                                                    case 'e':
                                                        if (strcmp(&(chars[17]), "dIntoDoublePlay") == 0)
                                                            return Value_MLBHittingGroundedIntoDoublePlay;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'H':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'i':
                                            if (strncmp(&(chars[12]), "t", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[14]), "yPitch") == 0)
                                                            return Value_MLBHittingHitByPitch;
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[14]))
                                                          {
                                                            case 0:
                                                                return Value_MLBHittingHits;
                                                            case 'W':
                                                                if (strcmp(&(chars[15]), "ithRunnersInScoringPosition") == 0)
                                                                    return Value_MLBHittingHitsWithRunnersInScoringPosition;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[12]), "meRuns") == 0)
                                                return Value_MLBHittingHomeRuns;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'I':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'n':
                                            if (strncmp(&(chars[12]), "tentional", 9) == 0)
                                              {
                                                switch ((unsigned char)(chars[21]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[22]), "alls") == 0)
                                                            return Value_MLBHittingIntentionalBalls;
                                                        break;
                                                    case 'W':
                                                        if (strcmp(&(chars[22]), "alks") == 0)
                                                            return Value_MLBHittingIntentionalWalks;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 's':
                                            if (strcmp(&(chars[12]), "olatedPower") == 0)
                                                return Value_MLBHittingIsolatedPower;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'L':
                                    if (strncmp(&(chars[11]), "ine", 3) == 0)
                                      {
                                        switch ((unsigned char)(chars[14]))
                                          {
                                            case 'D':
                                                if (strcmp(&(chars[15]), "rives") == 0)
                                                    return Value_MLBHittingLineDrives;
                                                break;
                                            case 'O':
                                                if (strncmp(&(chars[15]), "uts", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[18]))
                                                      {
                                                        case 0:
                                                            return Value_MLBHittingLineOuts;
                                                        case 'I':
                                                            if (strcmp(&(chars[19]), "ntoDoublePlay") == 0)
                                                                return Value_MLBHittingLineOutsIntoDoublePlay;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'O':
                                    if (strncmp(&(chars[11]), "nBaseP", 6) == 0)
                                      {
                                        switch ((unsigned char)(chars[17]))
                                          {
                                            case 'e':
                                                if (strcmp(&(chars[18]), "rc") == 0)
                                                    return Value_MLBHittingOnBasePerc;
                                                break;
                                            case 'l':
                                                if (strcmp(&(chars[18]), "usSluggingPerc") == 0)
                                                    return Value_MLBHittingOnBasePlusSluggingPerc;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'P':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[12]), "tchesFaced") == 0)
                                                return Value_MLBHittingPitchesFaced;
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[12]), "ateAppearances") == 0)
                                                return Value_MLBHittingPlateAppearances;
                                            break;
                                        case 'o':
                                            if (strncmp(&(chars[12]), "p", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'O':
                                                        if (strcmp(&(chars[14]), "uts") == 0)
                                                            return Value_MLBHittingPopOuts;
                                                        break;
                                                    case 'U':
                                                        if (strcmp(&(chars[14]), "ps") == 0)
                                                            return Value_MLBHittingPopUps;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'R':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[12]), "achedOnError") == 0)
                                                return Value_MLBHittingReachedOnError;
                                            break;
                                        case 'u':
                                            if (strncmp(&(chars[12]), "n", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'n':
                                                        if (strncmp(&(chars[14]), "ersLeftOnBase", 13) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[27]))
                                                              {
                                                                case 0:
                                                                    return Value_MLBHittingRunnersLeftOnBase;
                                                                case 'T':
                                                                    if (strcmp(&(chars[28]), "woOutsRunnersInScoringPosition") == 0)
                                                                        return Value_MLBHittingRunnersLeftOnBaseTwoOutsRunnersInScoringPosition;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 's':
                                                        if (strncmp(&(chars[14]), "BattedIn", 8) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[22]))
                                                              {
                                                                case 0:
                                                                    return Value_MLBHittingRunsBattedIn;
                                                                case 'W':
                                                                    if (strcmp(&(chars[23]), "ithTwoOuts") == 0)
                                                                        return Value_MLBHittingRunsBattedInWithTwoOuts;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'S':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'a':
                                            if (strncmp(&(chars[12]), "crifice", 7) == 0)
                                              {
                                                switch ((unsigned char)(chars[19]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(chars[20]), "lys") == 0)
                                                            return Value_MLBHittingSacrificeFlys;
                                                        break;
                                                    case 'H':
                                                        if (strcmp(&(chars[20]), "its") == 0)
                                                            return Value_MLBHittingSacrificeHits;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'e':
                                            if (strcmp(&(chars[12]), "condaryAverage") == 0)
                                                return Value_MLBHittingSecondaryAverage;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[12]), "ngles") == 0)
                                                return Value_MLBHittingSingles;
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[12]), "uggingPerc") == 0)
                                                return Value_MLBHittingSluggingPerc;
                                            break;
                                        case 't':
                                            if (strncmp(&(chars[12]), "rike", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[16]))
                                                  {
                                                    case 'o':
                                                        if (strncmp(&(chars[17]), "uts", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[20]))
                                                              {
                                                                case 'L':
                                                                    if (strcmp(&(chars[21]), "ooking") == 0)
                                                                        return Value_MLBHittingStrikeoutsLooking;
                                                                    break;
                                                                case 'S':
                                                                    if (strcmp(&(chars[21]), "winging") == 0)
                                                                        return Value_MLBHittingStrikeoutsSwinging;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[17]))
                                                          {
                                                            case 'L':
                                                                if (strcmp(&(chars[18]), "ooking") == 0)
                                                                    return Value_MLBHittingStrikesLooking;
                                                                break;
                                                            case 'S':
                                                                if (strcmp(&(chars[18]), "winging") == 0)
                                                                    return Value_MLBHittingStrikesSwinging;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'T':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'o':
                                            if (strncmp(&(chars[12]), "tal", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[15]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[16]), "ases") == 0)
                                                            return Value_MLBHittingTotalBases;
                                                        break;
                                                    case 'R':
                                                        if (strcmp(&(chars[16]), "unsScored") == 0)
                                                            return Value_MLBHittingTotalRunsScored;
                                                        break;
                                                    case 'S':
                                                        if (strncmp(&(chars[16]), "trike", 5) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[21]))
                                                              {
                                                                case 'o':
                                                                    if (strcmp(&(chars[22]), "uts") == 0)
                                                                        return Value_MLBHittingTotalStrikeouts;
                                                                    break;
                                                                case 's':
                                                                    if (chars[22] == 0)
                                                                        return Value_MLBHittingTotalStrikes;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[12]), "iples") == 0)
                                                return Value_MLBHittingTriples;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'U':
                                    if (strcmp(&(chars[11]), "nearnedRunsScored") == 0)
                                        return Value_MLBHittingUnearnedRunsScored;
                                    break;
                                case 'W':
                                    if (strncmp(&(chars[11]), "alks", 4) == 0)
                                      {
                                        switch ((unsigned char)(chars[15]))
                                          {
                                            case 0:
                                                return Value_MLBHittingWalks;
                                            case 'P':
                                                if (strncmp(&(chars[16]), "er", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[18]))
                                                      {
                                                        case 'P':
                                                            if (strcmp(&(chars[19]), "laceAppearance") == 0)
                                                                return Value_MLBHittingWalksPerPlaceAppearance;
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(chars[19]), "trikeout") == 0)
                                                                return Value_MLBHittingWalksPerStrikeout;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'P':
                        if (strncmp(&(chars[4]), "itching", 7) == 0)
                          {
                            switch ((unsigned char)(chars[11]))
                              {
                                case 'B':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'a':
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'l':
                                                    switch ((unsigned char)(chars[14]))
                                                      {
                                                        case 'k':
                                                            if (strcmp(&(chars[15]), "s") == 0)
                                                                return Value_MLBPitchingBalks;
                                                            break;
                                                        case 'l':
                                                            if (strcmp(&(chars[15]), "s") == 0)
                                                                return Value_MLBPitchingBalls;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(chars[14]), "tersFaced") == 0)
                                                        return Value_MLBPitchingBattersFaced;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'l':
                                            if (strcmp(&(chars[13]), "ownSaves") == 0)
                                                return Value_MLBPitchingBlownSaves;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'C':
                                    if (strcmp(&(chars[12]), "ompleteGames") == 0)
                                        return Value_MLBPitchingCompleteGames;
                                    break;
                                case 'D':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[13]), "rtBallsThrown") == 0)
                                                return Value_MLBPitchingDirtBallsThrown;
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[13]), "ublesAllowed") == 0)
                                                return Value_MLBPitchingDoublesAllowed;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'E':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'a':
                                            if (strncmp(&(chars[13]), "rnedRun", 7) == 0)
                                              {
                                                switch ((unsigned char)(chars[20]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(chars[21]), "verage") == 0)
                                                            return Value_MLBPitchingEarnedRunAverage;
                                                        break;
                                                    case 's':
                                                        if (strcmp(&(chars[21]), "Allowed") == 0)
                                                            return Value_MLBPitchingEarnedRunsAllowed;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[13]), "rors") == 0)
                                                return Value_MLBPitchingErrors;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'F':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'i':
                                            if (strcmp(&(chars[13]), "eldersChoice") == 0)
                                                return Value_MLBPitchingFieldersChoice;
                                            break;
                                        case 'l':
                                            if (strncmp(&(chars[13]), "yOuts", 5) == 0)
                                              {
                                                switch ((unsigned char)(chars[18]))
                                                  {
                                                    case 0:
                                                        return Value_MLBPitchingFlyOuts;
                                                    case 'I':
                                                        if (strcmp(&(chars[19]), "ntoDoublePlays") == 0)
                                                            return Value_MLBPitchingFlyOutsIntoDoublePlays;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[13]), "ulBalls") == 0)
                                                return Value_MLBPitchingFoulBalls;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'G':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'a':
                                            if (strncmp(&(chars[13]), "mes", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[16]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(chars[17]), "inished") == 0)
                                                            return Value_MLBPitchingGamesFinished;
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(chars[17]), "layed") == 0)
                                                            return Value_MLBPitchingGamesPlayed;
                                                        break;
                                                    case 'S':
                                                        if (strcmp(&(chars[17]), "tarted") == 0)
                                                            return Value_MLBPitchingGamesStarted;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strncmp(&(chars[13]), "ound", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[17]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[18]), "allToFlyBallRatio") == 0)
                                                            return Value_MLBPitchingGroundBallToFlyBallRatio;
                                                        break;
                                                    case 'O':
                                                        if (strncmp(&(chars[18]), "uts", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[21]))
                                                              {
                                                                case 0:
                                                                    return Value_MLBPitchingGroundOuts;
                                                                case 'I':
                                                                    if (strcmp(&(chars[22]), "ntoDoublePlays") == 0)
                                                                        return Value_MLBPitchingGroundOutsIntoDoublePlays;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'H':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'i':
                                            if (strncmp(&(chars[13]), "t", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[14]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[15]), "atters") == 0)
                                                            return Value_MLBPitchingHitBatters;
                                                        break;
                                                    case 's':
                                                        if (strcmp(&(chars[15]), "Allowed") == 0)
                                                            return Value_MLBPitchingHitsAllowed;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'l':
                                                    if (strcmp(&(chars[14]), "ds") == 0)
                                                        return Value_MLBPitchingHolds;
                                                    break;
                                                case 'm':
                                                    if (strcmp(&(chars[14]), "eRunsAllowed") == 0)
                                                        return Value_MLBPitchingHomeRunsAllowed;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'I':
                                    if (strncmp(&(chars[12]), "n", 1) == 0)
                                      {
                                        switch ((unsigned char)(chars[13]))
                                          {
                                            case 'n':
                                                if (strncmp(&(chars[14]), "ingsPitched", 11) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[25]))
                                                      {
                                                        case 'C':
                                                            if (strcmp(&(chars[26]), "ompletePartial") == 0)
                                                                return Value_MLBPitchingInningsPitchedCompletePartial;
                                                            break;
                                                        case 'T':
                                                            if (strcmp(&(chars[26]), "otalOuts") == 0)
                                                                return Value_MLBPitchingInningsPitchedTotalOuts;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 't':
                                                if (strncmp(&(chars[14]), "entional", 8) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[22]))
                                                      {
                                                        case 'B':
                                                            if (strcmp(&(chars[23]), "alls") == 0)
                                                                return Value_MLBPitchingIntentionalBalls;
                                                            break;
                                                        case 'W':
                                                            if (strcmp(&(chars[23]), "alks") == 0)
                                                                return Value_MLBPitchingIntentionalWalks;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'L':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'i':
                                            if (strncmp(&(chars[13]), "neOuts", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[19]))
                                                  {
                                                    case 0:
                                                        return Value_MLBPitchingLineOuts;
                                                    case 'I':
                                                        if (strcmp(&(chars[20]), "ntoDoublePlays") == 0)
                                                            return Value_MLBPitchingLineOutsIntoDoublePlays;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[13]), "sses") == 0)
                                                return Value_MLBPitchingLosses;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'O':
                                    if (strncmp(&(chars[12]), "pponent", 7) == 0)
                                      {
                                        switch ((unsigned char)(chars[19]))
                                          {
                                            case 'R':
                                                if (strcmp(&(chars[20]), "unnersLeftOnBase") == 0)
                                                    return Value_MLBPitchingOpponentRunnersLeftOnBase;
                                                break;
                                            case 's':
                                                if (strcmp(&(chars[20]), "BattingAverage") == 0)
                                                    return Value_MLBPitchingOpponentsBattingAverage;
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'P':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'i':
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'c':
                                                    if (strcmp(&(chars[14]), "koffs") == 0)
                                                        return Value_MLBPitchingPickoffs;
                                                    break;
                                                case 't':
                                                    if (strcmp(&(chars[14]), "chCount") == 0)
                                                        return Value_MLBPitchingPitchCount;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(chars[13]), "pOutsForced") == 0)
                                                return Value_MLBPitchingPopOutsForced;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'Q':
                                    if (strcmp(&(chars[12]), "ualityStarts") == 0)
                                        return Value_MLBPitchingQualityStarts;
                                    break;
                                case 'R':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'e':
                                            if (strcmp(&(chars[13]), "achedOnError") == 0)
                                                return Value_MLBPitchingReachedOnError;
                                            break;
                                        case 'u':
                                            if (strcmp(&(chars[13]), "nnersCaughtStealing") == 0)
                                                return Value_MLBPitchingRunnersCaughtStealing;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'S':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'a':
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'c':
                                                    if (strncmp(&(chars[14]), "rifice", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[20]))
                                                          {
                                                            case 'F':
                                                                if (strcmp(&(chars[21]), "lys") == 0)
                                                                    return Value_MLBPitchingSacrificeFlys;
                                                                break;
                                                            case 'H':
                                                                if (strcmp(&(chars[21]), "its") == 0)
                                                                    return Value_MLBPitchingSacrificeHits;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'v':
                                                    if (strncmp(&(chars[14]), "e", 1) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[15]))
                                                          {
                                                            case 'O':
                                                                if (strcmp(&(chars[16]), "pportunities") == 0)
                                                                    return Value_MLBPitchingSaveOpportunities;
                                                                break;
                                                            case 's':
                                                                if (chars[16] == 0)
                                                                    return Value_MLBPitchingSaves;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'h':
                                            if (strcmp(&(chars[13]), "utouts") == 0)
                                                return Value_MLBPitchingShutouts;
                                            break;
                                        case 'i':
                                            if (strcmp(&(chars[13]), "nglesAllowed") == 0)
                                                return Value_MLBPitchingSinglesAllowed;
                                            break;
                                        case 't':
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'o':
                                                    if (strcmp(&(chars[14]), "lenBasesAllowed") == 0)
                                                        return Value_MLBPitchingStolenBasesAllowed;
                                                    break;
                                                case 'r':
                                                    if (strncmp(&(chars[14]), "ike", 3) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[17]))
                                                          {
                                                            case 'o':
                                                                if (strncmp(&(chars[18]), "uts", 3) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[21]))
                                                                      {
                                                                        case 'L':
                                                                            if (strcmp(&(chars[22]), "ooking") == 0)
                                                                                return Value_MLBPitchingStrikeoutsLooking;
                                                                            break;
                                                                        case 'P':
                                                                            if (strncmp(&(chars[22]), "er", 2) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[24]))
                                                                                  {
                                                                                    case '9':
                                                                                        if (strcmp(&(chars[25]), "Innings") == 0)
                                                                                            return Value_MLBPitchingStrikeoutsPer9Innings;
                                                                                        break;
                                                                                    case 'W':
                                                                                        if (strcmp(&(chars[25]), "alk") == 0)
                                                                                            return Value_MLBPitchingStrikeoutsPerWalk;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'S':
                                                                            if (strcmp(&(chars[22]), "winging") == 0)
                                                                                return Value_MLBPitchingStrikeoutsSwinging;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 's':
                                                                switch ((unsigned char)(chars[18]))
                                                                  {
                                                                    case 'L':
                                                                        if (strcmp(&(chars[19]), "ooking") == 0)
                                                                            return Value_MLBPitchingStrikesLooking;
                                                                        break;
                                                                    case 'S':
                                                                        if (strcmp(&(chars[19]), "winging") == 0)
                                                                            return Value_MLBPitchingStrikesSwinging;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'T':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'o':
                                            if (strncmp(&(chars[13]), "tal", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[16]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(chars[17]), "asesAllowed") == 0)
                                                            return Value_MLBPitchingTotalBasesAllowed;
                                                        break;
                                                    case 'R':
                                                        if (strcmp(&(chars[17]), "unsAllowed") == 0)
                                                            return Value_MLBPitchingTotalRunsAllowed;
                                                        break;
                                                    case 'S':
                                                        if (strncmp(&(chars[17]), "trike", 5) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[22]))
                                                              {
                                                                case 'o':
                                                                    if (strcmp(&(chars[23]), "uts") == 0)
                                                                        return Value_MLBPitchingTotalStrikeouts;
                                                                    break;
                                                                case 's':
                                                                    if (chars[23] == 0)
                                                                        return Value_MLBPitchingTotalStrikes;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strcmp(&(chars[13]), "iplesAllowed") == 0)
                                                return Value_MLBPitchingTriplesAllowed;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'U':
                                    if (strcmp(&(chars[12]), "nearnedRunsAllowed") == 0)
                                        return Value_MLBPitchingUnearnedRunsAllowed;
                                    break;
                                case 'W':
                                    switch ((unsigned char)(chars[12]))
                                      {
                                        case 'a':
                                            if (strncmp(&(chars[13]), "lks", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[16]))
                                                  {
                                                    case 0:
                                                        return Value_MLBPitchingWalks;
                                                    case 'P':
                                                        if (strcmp(&(chars[17]), "lusHitsPerInningPitched") == 0)
                                                            return Value_MLBPitchingWalksPlusHitsPerInningPitched;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'l':
                                                    if (strcmp(&(chars[14]), "dPitches") == 0)
                                                        return Value_MLBPitchingWildPitches;
                                                    break;
                                                case 'n':
                                                    if (strcmp(&(chars[14]), "s") == 0)
                                                        return Value_MLBPitchingWins;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
              }
            break;
        case 'N':
            switch ((unsigned char)(chars[1]))
              {
                case 'B':
                    if (strncmp(&(chars[2]), "A", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'A':
                                if (strncmp(&(chars[4]), "ssists", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 0:
                                            return Value_NBAAssists;
                                        case 'P':
                                            if (strcmp(&(chars[11]), "erGame") == 0)
                                                return Value_NBAAssistsPerGame;
                                            break;
                                        case 'T':
                                            if (strcmp(&(chars[11]), "oTurnoverRatio") == 0)
                                                return Value_NBAAssistsToTurnoverRatio;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'B':
                                if (strncmp(&(chars[4]), "locked", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 'A':
                                            if (strncmp(&(chars[11]), "ttempts", 7) == 0)
                                              {
                                                switch ((unsigned char)(chars[18]))
                                                  {
                                                    case 0:
                                                        return Value_NBABlockedAttempts;
                                                    case 'P':
                                                        if (strcmp(&(chars[19]), "erGame") == 0)
                                                            return Value_NBABlockedAttemptsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (strncmp(&(chars[11]), "hots", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[15]))
                                                  {
                                                    case 0:
                                                        return Value_NBABlockedShots;
                                                    case 'P':
                                                        if (strcmp(&(chars[16]), "erGame") == 0)
                                                            return Value_NBABlockedShotsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'C':
                                if (strcmp(&(chars[4]), "oachTechnicalFouls") == 0)
                                    return Value_NBACoachTechnicalFouls;
                                break;
                            case 'D':
                                if (strncmp(&(chars[4]), "efensiveRebounds", 16) == 0)
                                  {
                                    switch ((unsigned char)(chars[20]))
                                      {
                                        case 0:
                                            return Value_NBADefensiveRebounds;
                                        case 'P':
                                            if (strcmp(&(chars[21]), "erGame") == 0)
                                                return Value_NBADefensiveReboundsPerGame;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'E':
                                if (strcmp(&(chars[4]), "jections") == 0)
                                    return Value_NBAEjections;
                                break;
                            case 'F':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "stBreakPoints", 13) == 0)
                                          {
                                            switch ((unsigned char)(chars[18]))
                                              {
                                                case 0:
                                                    return Value_NBAFastBreakPoints;
                                                case 'P':
                                                    if (strcmp(&(chars[19]), "erGame") == 0)
                                                        return Value_NBAFastBreakPointsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'i':
                                        if (strncmp(&(chars[5]), "eldGoal", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(chars[13]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[20]))
                                                          {
                                                            case 0:
                                                                return Value_NBAFieldGoalAttempts;
                                                            case 'P':
                                                                if (strcmp(&(chars[21]), "erGame") == 0)
                                                                    return Value_NBAFieldGoalAttemptsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(chars[13]), "ercentage") == 0)
                                                        return Value_NBAFieldGoalPercentage;
                                                    break;
                                                case 's':
                                                    if (strncmp(&(chars[13]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[17]))
                                                          {
                                                            case 0:
                                                                return Value_NBAFieldGoalsMade;
                                                            case 'P':
                                                                if (strcmp(&(chars[18]), "erGame") == 0)
                                                                    return Value_NBAFieldGoalsMadePerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'l':
                                        if (strncmp(&(chars[5]), "agrantFouls", 11) == 0)
                                          {
                                            switch ((unsigned char)(chars[16]))
                                              {
                                                case 0:
                                                    return Value_NBAFlagrantFouls;
                                                case 'P':
                                                    if (strcmp(&(chars[17]), "erGame") == 0)
                                                        return Value_NBAFlagrantFoulsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'r':
                                        if (strncmp(&(chars[5]), "eeThrow", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(chars[13]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[20]))
                                                          {
                                                            case 0:
                                                                return Value_NBAFreeThrowAttempts;
                                                            case 'P':
                                                                if (strcmp(&(chars[21]), "erGame") == 0)
                                                                    return Value_NBAFreeThrowAttemptsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(chars[13]), "ercentage") == 0)
                                                        return Value_NBAFreeThrowPercentage;
                                                    break;
                                                case 's':
                                                    if (strncmp(&(chars[13]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[17]))
                                                          {
                                                            case 0:
                                                                return Value_NBAFreeThrowsMade;
                                                            case 'P':
                                                                if (strcmp(&(chars[18]), "erGame") == 0)
                                                                    return Value_NBAFreeThrowsMadePerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'G':
                                if (strncmp(&(chars[4]), "ames", 4) == 0)
                                  {
                                    switch ((unsigned char)(chars[8]))
                                      {
                                        case 'P':
                                            if (strcmp(&(chars[9]), "layed") == 0)
                                                return Value_NBAGamesPlayed;
                                            break;
                                        case 'S':
                                            if (strcmp(&(chars[9]), "tarted") == 0)
                                                return Value_NBAGamesStarted;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(chars[4]), "inutesPlayed", 12) == 0)
                                  {
                                    switch ((unsigned char)(chars[16]))
                                      {
                                        case 0:
                                            return Value_NBAMinutesPlayed;
                                        case 'P':
                                            if (strcmp(&(chars[17]), "erGame") == 0)
                                                return Value_NBAMinutesPlayedPerGame;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'O':
                                if (strncmp(&(chars[4]), "ffensiveRebounds", 16) == 0)
                                  {
                                    switch ((unsigned char)(chars[20]))
                                      {
                                        case 0:
                                            return Value_NBAOffensiveRebounds;
                                        case 'P':
                                            if (strcmp(&(chars[21]), "erGame") == 0)
                                                return Value_NBAOffensiveReboundsPerGame;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'P':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strncmp(&(chars[5]), "rsonalFouls", 11) == 0)
                                          {
                                            switch ((unsigned char)(chars[16]))
                                              {
                                                case 0:
                                                    return Value_NBAPersonalFouls;
                                                case 'P':
                                                    if (strcmp(&(chars[17]), "erGame") == 0)
                                                        return Value_NBAPersonalFoulsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[5]), "ayerTechnicalFouls") == 0)
                                            return Value_NBAPlayerTechnicalFouls;
                                        break;
                                    case 'o':
                                        if (strncmp(&(chars[5]), "ints", 4) == 0)
                                          {
                                            switch ((unsigned char)(chars[9]))
                                              {
                                                case 0:
                                                    return Value_NBAPoints;
                                                case 'I':
                                                    if (strncmp(&(chars[10]), "nPaint", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[16]))
                                                          {
                                                            case 0:
                                                                return Value_NBAPointsInPaint;
                                                            case 'P':
                                                                if (strcmp(&(chars[17]), "erGame") == 0)
                                                                    return Value_NBAPointsInPaintPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'O':
                                                    if (strncmp(&(chars[10]), "ffTurnovers", 11) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[21]))
                                                          {
                                                            case 0:
                                                                return Value_NBAPointsOffTurnovers;
                                                            case 'P':
                                                                if (strcmp(&(chars[22]), "erGame") == 0)
                                                                    return Value_NBAPointsOffTurnoversPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(chars[10]), "erGame") == 0)
                                                        return Value_NBAPointsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'R':
                                if (strncmp(&(chars[4]), "ebounds", 7) == 0)
                                  {
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 0:
                                            return Value_NBARebounds;
                                        case 'P':
                                            if (strcmp(&(chars[12]), "erGame") == 0)
                                                return Value_NBAReboundsPerGame;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'S':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strncmp(&(chars[5]), "condChancePoints", 16) == 0)
                                          {
                                            switch ((unsigned char)(chars[21]))
                                              {
                                                case 0:
                                                    return Value_NBASecondChancePoints;
                                                case 'P':
                                                    if (strcmp(&(chars[22]), "erGame") == 0)
                                                        return Value_NBASecondChancePointsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 't':
                                        if (strncmp(&(chars[5]), "eals", 4) == 0)
                                          {
                                            switch ((unsigned char)(chars[9]))
                                              {
                                                case 0:
                                                    return Value_NBASteals;
                                                case 'P':
                                                    if (strcmp(&(chars[10]), "erGame") == 0)
                                                        return Value_NBAStealsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'T':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(chars[5]), "amTechnicalFouls") == 0)
                                            return Value_NBATeamTechnicalFouls;
                                        break;
                                    case 'h':
                                        if (strncmp(&(chars[5]), "reePoint", 8) == 0)
                                          {
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(chars[14]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[21]))
                                                          {
                                                            case 0:
                                                                return Value_NBAThreePointAttempts;
                                                            case 'P':
                                                                if (strcmp(&(chars[22]), "erGame") == 0)
                                                                    return Value_NBAThreePointAttemptsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(chars[14]), "ercentage") == 0)
                                                        return Value_NBAThreePointPercentage;
                                                    break;
                                                case 's':
                                                    if (strncmp(&(chars[14]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[18]))
                                                          {
                                                            case 0:
                                                                return Value_NBAThreePointsMade;
                                                            case 'P':
                                                                if (strcmp(&(chars[19]), "erGame") == 0)
                                                                    return Value_NBAThreePointsMadePerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'u':
                                        if (strncmp(&(chars[5]), "rnovers", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 0:
                                                    return Value_NBATurnovers;
                                                case 'P':
                                                    if (strcmp(&(chars[13]), "erGame") == 0)
                                                        return Value_NBATurnoversPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'w':
                                        if (strncmp(&(chars[5]), "oPoint", 6) == 0)
                                          {
                                            switch ((unsigned char)(chars[11]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(chars[12]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[19]))
                                                          {
                                                            case 0:
                                                                return Value_NBATwoPointAttempts;
                                                            case 'P':
                                                                if (strcmp(&(chars[20]), "erGame") == 0)
                                                                    return Value_NBATwoPointAttemptsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(chars[12]), "ercentage") == 0)
                                                        return Value_NBATwoPointPercentage;
                                                    break;
                                                case 's':
                                                    if (strncmp(&(chars[12]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[16]))
                                                          {
                                                            case 0:
                                                                return Value_NBATwoPointsMade;
                                                            case 'P':
                                                                if (strcmp(&(chars[17]), "erGame") == 0)
                                                                    return Value_NBATwoPointsMadePerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'C':
                    if (strncmp(&(chars[2]), "AA", 2) == 0)
                      {
                        switch ((unsigned char)(chars[4]))
                          {
                            case 'F':
                                if (strncmp(&(chars[5]), "B", 1) == 0)
                                  {
                                    switch ((unsigned char)(chars[6]))
                                      {
                                        case '1':
                                            if (strcmp(&(chars[7]), "stDowns") == 0)
                                                return Value_NCAAFB1stDowns;
                                            break;
                                        case '2':
                                            if (strncmp(&(chars[7]), "PointConversions", 16) == 0)
                                              {
                                                switch ((unsigned char)(chars[23]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(chars[24]), "ttempted") == 0)
                                                            return Value_NCAAFB2PointConversionsAttempted;
                                                        break;
                                                    case 'F':
                                                        if (strcmp(&(chars[24]), "ailed") == 0)
                                                            return Value_NCAAFB2PointConversionsFailed;
                                                        break;
                                                    case 'M':
                                                        if (strcmp(&(chars[24]), "ade") == 0)
                                                            return Value_NCAAFB2PointConversionsMade;
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(chars[24]), "assing") == 0)
                                                            return Value_NCAAFB2PointConversionsPassing;
                                                        break;
                                                    case 'R':
                                                        switch ((unsigned char)(chars[24]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(chars[25]), "ceiving") == 0)
                                                                    return Value_NCAAFB2PointConversionsReceiving;
                                                                break;
                                                            case 'u':
                                                                if (strcmp(&(chars[25]), "shing") == 0)
                                                                    return Value_NCAAFB2PointConversionsRushing;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case '3':
                                            if (strncmp(&(chars[7]), "rdDownConversion", 16) == 0)
                                              {
                                                switch ((unsigned char)(chars[23]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(chars[24]), "ttempts") == 0)
                                                            return Value_NCAAFB3rdDownConversionAttempts;
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(chars[24]), "erc") == 0)
                                                            return Value_NCAAFB3rdDownConversionPerc;
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[24]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAFB3rdDownConversions;
                                                            case 'V':
                                                                if (strncmp(&(chars[25]), "ia", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[27]))
                                                                      {
                                                                        case 'P':
                                                                            switch ((unsigned char)(chars[28]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(chars[29]), "ss") == 0)
                                                                                        return Value_NCAAFB3rdDownConversionsViaPass;
                                                                                    break;
                                                                                case 'e':
                                                                                    if (strcmp(&(chars[29]), "nalty") == 0)
                                                                                        return Value_NCAAFB3rdDownConversionsViaPenalty;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(chars[28]), "ush") == 0)
                                                                                return Value_NCAAFB3rdDownConversionsViaRush;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case '4':
                                            if (strncmp(&(chars[7]), "thDownConversion", 16) == 0)
                                              {
                                                switch ((unsigned char)(chars[23]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(chars[24]), "ttempts") == 0)
                                                            return Value_NCAAFB4thDownConversionAttempts;
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(chars[24]), "erc") == 0)
                                                            return Value_NCAAFB4thDownConversionPerc;
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[24]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAFB4thDownConversions;
                                                            case 'V':
                                                                if (strncmp(&(chars[25]), "ia", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[27]))
                                                                      {
                                                                        case 'P':
                                                                            switch ((unsigned char)(chars[28]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(chars[29]), "ss") == 0)
                                                                                        return Value_NCAAFB4thDownConversionsViaPass;
                                                                                    break;
                                                                                case 'e':
                                                                                    if (strcmp(&(chars[29]), "nalty") == 0)
                                                                                        return Value_NCAAFB4thDownConversionsViaPenalty;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(chars[28]), "ush") == 0)
                                                                                return Value_NCAAFB4thDownConversionsViaRush;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'B':
                                            if (strncmp(&(chars[7]), "locked", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'F':
                                                        if (strncmp(&(chars[14]), "ieldGoalReturns", 15) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[29]))
                                                              {
                                                                case 0:
                                                                    return Value_NCAAFBBlockedFieldGoalReturns;
                                                                case '1':
                                                                    if (strcmp(&(chars[30]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturns10PlusYards;
                                                                    break;
                                                                case '2':
                                                                    if (strcmp(&(chars[30]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturns20PlusYards;
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(chars[30]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturns30PlusYards;
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(chars[30]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturns40PlusYards;
                                                                    break;
                                                                case '5':
                                                                    if (strcmp(&(chars[30]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturns50PlusYards;
                                                                    break;
                                                                case 'A':
                                                                    if (strcmp(&(chars[30]), "verageReturn") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturnsAverageReturn;
                                                                    break;
                                                                case 'L':
                                                                    if (strcmp(&(chars[30]), "ongestReturn") == 0)
                                                                        return Value_NCAAFBBlockedFieldGoalReturnsLongestReturn;
                                                                    break;
                                                                case 'T':
                                                                    if (strncmp(&(chars[30]), "o", 1) == 0)
                                                                      {
                                                                        switch ((unsigned char)(chars[31]))
                                                                          {
                                                                            case 't':
                                                                                if (strcmp(&(chars[32]), "alYards") == 0)
                                                                                    return Value_NCAAFBBlockedFieldGoalReturnsTotalYards;
                                                                                break;
                                                                            case 'u':
                                                                                if (strcmp(&(chars[32]), "chdowns") == 0)
                                                                                    return Value_NCAAFBBlockedFieldGoalReturnsTouchdowns;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'K':
                                                        if (strcmp(&(chars[14]), "icks") == 0)
                                                            return Value_NCAAFBBlockedKicks;
                                                        break;
                                                    case 'P':
                                                        if (strncmp(&(chars[14]), "untReturn", 9) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[23]))
                                                              {
                                                                case '1':
                                                                    if (strcmp(&(chars[24]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedPuntReturn10PlusYards;
                                                                    break;
                                                                case '2':
                                                                    if (strcmp(&(chars[24]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedPuntReturn20PlusYards;
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(chars[24]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedPuntReturn30PlusYards;
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(chars[24]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedPuntReturn40PlusYards;
                                                                    break;
                                                                case '5':
                                                                    if (strcmp(&(chars[24]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBBlockedPuntReturn50PlusYards;
                                                                    break;
                                                                case 's':
                                                                    switch ((unsigned char)(chars[24]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAFBBlockedPuntReturns;
                                                                        case 'A':
                                                                            if (strcmp(&(chars[25]), "verageReturn") == 0)
                                                                                return Value_NCAAFBBlockedPuntReturnsAverageReturn;
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(chars[25]), "ongestReturn") == 0)
                                                                                return Value_NCAAFBBlockedPuntReturnsLongestReturn;
                                                                            break;
                                                                        case 'T':
                                                                            if (strncmp(&(chars[25]), "o", 1) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[26]))
                                                                                  {
                                                                                    case 't':
                                                                                        if (strcmp(&(chars[27]), "alYards") == 0)
                                                                                            return Value_NCAAFBBlockedPuntReturnsTotalYards;
                                                                                        break;
                                                                                    case 'u':
                                                                                        if (strcmp(&(chars[27]), "chdowns") == 0)
                                                                                            return Value_NCAAFBBlockedPuntReturnsTouchdowns;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'E':
                                            if (strncmp(&(chars[7]), "xtraPoints", 10) == 0)
                                              {
                                                switch ((unsigned char)(chars[17]))
                                                  {
                                                    case 'A':
                                                        if (strncmp(&(chars[18]), "ttempted", 8) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[26]))
                                                              {
                                                                case 0:
                                                                    return Value_NCAAFBExtraPointsAttempted;
                                                                case '2':
                                                                    if (strcmp(&(chars[27]), "PointConversion") == 0)
                                                                        return Value_NCAAFBExtraPointsAttempted2PointConversion;
                                                                    break;
                                                                case 'K':
                                                                    if (strcmp(&(chars[27]), "icking") == 0)
                                                                        return Value_NCAAFBExtraPointsAttemptedKicking;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'B':
                                                        if (strcmp(&(chars[18]), "locked") == 0)
                                                            return Value_NCAAFBExtraPointsBlocked;
                                                        break;
                                                    case 'M':
                                                        if (strncmp(&(chars[18]), "ade", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[21]))
                                                              {
                                                                case 0:
                                                                    return Value_NCAAFBExtraPointsMade;
                                                                case '2':
                                                                    if (strcmp(&(chars[22]), "PointConversion") == 0)
                                                                        return Value_NCAAFBExtraPointsMade2PointConversion;
                                                                    break;
                                                                case 'K':
                                                                    if (strcmp(&(chars[22]), "icking") == 0)
                                                                        return Value_NCAAFBExtraPointsMadeKicking;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(chars[18]), "erc") == 0)
                                                            return Value_NCAAFBExtraPointsPerc;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'F':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'i':
                                                    if (strncmp(&(chars[8]), "eldGoal", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[15]))
                                                          {
                                                            case 'R':
                                                                if (strncmp(&(chars[16]), "eturns", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[22]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAFBFieldGoalReturns;
                                                                        case '1':
                                                                            if (strcmp(&(chars[23]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBFieldGoalReturns10PlusYards;
                                                                            break;
                                                                        case '2':
                                                                            if (strcmp(&(chars[23]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBFieldGoalReturns20PlusYards;
                                                                            break;
                                                                        case '3':
                                                                            if (strcmp(&(chars[23]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBFieldGoalReturns30PlusYards;
                                                                            break;
                                                                        case '4':
                                                                            if (strcmp(&(chars[23]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBFieldGoalReturns40PlusYards;
                                                                            break;
                                                                        case '5':
                                                                            if (strcmp(&(chars[23]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBFieldGoalReturns50PlusYards;
                                                                            break;
                                                                        case 'A':
                                                                            if (strcmp(&(chars[23]), "verageReturn") == 0)
                                                                                return Value_NCAAFBFieldGoalReturnsAverageReturn;
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(chars[23]), "ongestReturn") == 0)
                                                                                return Value_NCAAFBFieldGoalReturnsLongestReturn;
                                                                            break;
                                                                        case 'T':
                                                                            if (strncmp(&(chars[23]), "o", 1) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[24]))
                                                                                  {
                                                                                    case 't':
                                                                                        if (strcmp(&(chars[25]), "alYards") == 0)
                                                                                            return Value_NCAAFBFieldGoalReturnsTotalYards;
                                                                                        break;
                                                                                    case 'u':
                                                                                        if (strcmp(&(chars[25]), "chdowns") == 0)
                                                                                            return Value_NCAAFBFieldGoalReturnsTouchdowns;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 's':
                                                                switch ((unsigned char)(chars[16]))
                                                                  {
                                                                    case 'A':
                                                                        if (strncmp(&(chars[17]), "ttempted", 8) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[25]))
                                                                              {
                                                                                case 0:
                                                                                    return Value_NCAAFBFieldGoalsAttempted;
                                                                                case '1':
                                                                                    if (strcmp(&(chars[26]), "to19Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsAttempted1to19Yards;
                                                                                    break;
                                                                                case '2':
                                                                                    if (strcmp(&(chars[26]), "0to29Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsAttempted20to29Yards;
                                                                                    break;
                                                                                case '3':
                                                                                    if (strcmp(&(chars[26]), "0to39Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsAttempted30to39Yards;
                                                                                    break;
                                                                                case '4':
                                                                                    if (strcmp(&(chars[26]), "0to49Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsAttempted40to49Yards;
                                                                                    break;
                                                                                case '5':
                                                                                    if (strcmp(&(chars[26]), "0PlusYards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsAttempted50PlusYards;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'B':
                                                                        if (strcmp(&(chars[17]), "locked") == 0)
                                                                            return Value_NCAAFBFieldGoalsBlocked;
                                                                        break;
                                                                    case 'L':
                                                                        if (strcmp(&(chars[17]), "ongestMade") == 0)
                                                                            return Value_NCAAFBFieldGoalsLongestMade;
                                                                        break;
                                                                    case 'M':
                                                                        if (strncmp(&(chars[17]), "ade", 3) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[20]))
                                                                              {
                                                                                case 0:
                                                                                    return Value_NCAAFBFieldGoalsMade;
                                                                                case '1':
                                                                                    if (strcmp(&(chars[21]), "to19Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsMade1to19Yards;
                                                                                    break;
                                                                                case '2':
                                                                                    if (strcmp(&(chars[21]), "0to29Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsMade20to29Yards;
                                                                                    break;
                                                                                case '3':
                                                                                    if (strcmp(&(chars[21]), "0to39Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsMade30to39Yards;
                                                                                    break;
                                                                                case '4':
                                                                                    if (strcmp(&(chars[21]), "0to49Yards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsMade40to49Yards;
                                                                                    break;
                                                                                case '5':
                                                                                    if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                                                        return Value_NCAAFBFieldGoalsMade50PlusYards;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'P':
                                                                        if (strcmp(&(chars[17]), "erc") == 0)
                                                                            return Value_NCAAFBFieldGoalsPerc;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'o':
                                                    if (strcmp(&(chars[8]), "rcedFumbles") == 0)
                                                        return Value_NCAAFBForcedFumbles;
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(chars[8]), "mbles", 5) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[13]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAFBFumbles;
                                                            case 'F':
                                                                if (strcmp(&(chars[14]), "orced") == 0)
                                                                    return Value_NCAAFBFumblesForced;
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[14]), "ost") == 0)
                                                                    return Value_NCAAFBFumblesLost;
                                                                break;
                                                            case 'O':
                                                                switch ((unsigned char)(chars[14]))
                                                                  {
                                                                    case 'p':
                                                                        if (strncmp(&(chars[15]), "ponent", 6) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[21]))
                                                                              {
                                                                                case 'R':
                                                                                    if (strcmp(&(chars[22]), "ecovery") == 0)
                                                                                        return Value_NCAAFBFumblesOpponentRecovery;
                                                                                    break;
                                                                                case 'T':
                                                                                    if (strcmp(&(chars[22]), "ouchdownsFromRecovery") == 0)
                                                                                        return Value_NCAAFBFumblesOpponentTouchdownsFromRecovery;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'u':
                                                                        if (strcmp(&(chars[15]), "tOfBounds") == 0)
                                                                            return Value_NCAAFBFumblesOutOfBounds;
                                                                        break;
                                                                    case 'w':
                                                                        if (strncmp(&(chars[15]), "n", 1) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[16]))
                                                                              {
                                                                                case 'R':
                                                                                    if (strcmp(&(chars[17]), "ecovery") == 0)
                                                                                        return Value_NCAAFBFumblesOwnRecovery;
                                                                                    break;
                                                                                case 'T':
                                                                                    if (strcmp(&(chars[17]), "ouchdownsFromRecovery") == 0)
                                                                                        return Value_NCAAFBFumblesOwnTouchdownsFromRecovery;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'R':
                                                                if (strncmp(&(chars[14]), "ecovered", 8) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[22]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAFBFumblesRecovered;
                                                                        case 'F':
                                                                            if (strcmp(&(chars[23]), "orTouchdowns") == 0)
                                                                                return Value_NCAAFBFumblesRecoveredForTouchdowns;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'Y':
                                                                if (strncmp(&(chars[14]), "ardsFromO", 9) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[23]))
                                                                      {
                                                                        case 'p':
                                                                            if (strcmp(&(chars[24]), "ponentRecovery") == 0)
                                                                                return Value_NCAAFBFumblesYardsFromOpponentRecovery;
                                                                            break;
                                                                        case 'w':
                                                                            if (strcmp(&(chars[24]), "nRecovery") == 0)
                                                                                return Value_NCAAFBFumblesYardsFromOwnRecovery;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'G':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(chars[8]), "mes", 3) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[11]))
                                                          {
                                                            case 'P':
                                                                if (strcmp(&(chars[12]), "layed") == 0)
                                                                    return Value_NCAAFBGamesPlayed;
                                                                break;
                                                            case 'S':
                                                                if (strcmp(&(chars[12]), "tarted") == 0)
                                                                    return Value_NCAAFBGamesStarted;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'o':
                                                    if (strncmp(&(chars[8]), "alEfficiency", 12) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[20]))
                                                          {
                                                            case 'A':
                                                                if (strcmp(&(chars[21]), "ttempts") == 0)
                                                                    return Value_NCAAFBGoalEfficiencyAttempts;
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[21]), "erc") == 0)
                                                                    return Value_NCAAFBGoalEfficiencyPerc;
                                                                break;
                                                            case 'T':
                                                                if (strcmp(&(chars[21]), "ouchdowns") == 0)
                                                                    return Value_NCAAFBGoalEfficiencyTouchdowns;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'I':
                                            if (strncmp(&(chars[7]), "nterceptions", 12) == 0)
                                              {
                                                switch ((unsigned char)(chars[19]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAFBInterceptions;
                                                    case 'L':
                                                        if (strcmp(&(chars[20]), "ongestInterception") == 0)
                                                            return Value_NCAAFBInterceptionsLongestInterception;
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(chars[20]), "ouchdowns") == 0)
                                                            return Value_NCAAFBInterceptionsTouchdowns;
                                                        break;
                                                    case 'Y':
                                                        if (strcmp(&(chars[20]), "ards") == 0)
                                                            return Value_NCAAFBInterceptionsYards;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'K':
                                            if (strncmp(&(chars[7]), "ickoff", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'R':
                                                        if (strncmp(&(chars[14]), "eturns", 6) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[20]))
                                                              {
                                                                case '1':
                                                                    if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBKickoffReturns10PlusYards;
                                                                    break;
                                                                case '2':
                                                                    if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBKickoffReturns20PlusYards;
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBKickoffReturns30PlusYards;
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBKickoffReturns40PlusYards;
                                                                    break;
                                                                case '5':
                                                                    if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                                        return Value_NCAAFBKickoffReturns50PlusYards;
                                                                    break;
                                                                case 'A':
                                                                    if (strcmp(&(chars[21]), "verageRun") == 0)
                                                                        return Value_NCAAFBKickoffReturnsAverageRun;
                                                                    break;
                                                                case 'F':
                                                                    if (strcmp(&(chars[21]), "airCatches") == 0)
                                                                        return Value_NCAAFBKickoffReturnsFairCatches;
                                                                    break;
                                                                case 'L':
                                                                    if (strcmp(&(chars[21]), "ongestKickReturn") == 0)
                                                                        return Value_NCAAFBKickoffReturnsLongestKickReturn;
                                                                    break;
                                                                case 'R':
                                                                    if (strcmp(&(chars[21]), "eturns") == 0)
                                                                        return Value_NCAAFBKickoffReturnsReturns;
                                                                    break;
                                                                case 'T':
                                                                    if (strcmp(&(chars[21]), "ouchdowns") == 0)
                                                                        return Value_NCAAFBKickoffReturnsTouchdowns;
                                                                    break;
                                                                case 'Y':
                                                                    if (strcmp(&(chars[21]), "ards") == 0)
                                                                        return Value_NCAAFBKickoffReturnsYards;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[14]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(chars[15]), "verage", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[21]))
                                                                      {
                                                                        case 'G':
                                                                            if (strcmp(&(chars[22]), "rossYards") == 0)
                                                                                return Value_NCAAFBKickoffsAverageGrossYards;
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(chars[22]), "etYards") == 0)
                                                                                return Value_NCAAFBKickoffsAverageNetYards;
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(chars[22]), "eturnYards") == 0)
                                                                                return Value_NCAAFBKickoffsAverageReturnYards;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'E':
                                                                if (strcmp(&(chars[15]), "ndZoneKicks") == 0)
                                                                    return Value_NCAAFBKickoffsEndZoneKicks;
                                                                break;
                                                            case 'G':
                                                                if (strcmp(&(chars[15]), "rossYards") == 0)
                                                                    return Value_NCAAFBKickoffsGrossYards;
                                                                break;
                                                            case 'I':
                                                                if (strncmp(&(chars[15]), "nsideOpponents20YardLine", 24) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[39]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAFBKickoffsInsideOpponents20YardLine;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[40]), "erc") == 0)
                                                                                return Value_NCAAFBKickoffsInsideOpponents20YardLinePerc;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'K':
                                                                if (strcmp(&(chars[15]), "icks") == 0)
                                                                    return Value_NCAAFBKickoffsKicks;
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[15]), "ongestKick") == 0)
                                                                    return Value_NCAAFBKickoffsLongestKick;
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(chars[15]), "etYards") == 0)
                                                                    return Value_NCAAFBKickoffsNetYards;
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(chars[15]), "eturned") == 0)
                                                                    return Value_NCAAFBKickoffsReturned;
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(chars[15]), "o", 1) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[16]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(chars[17]), "alReturnYards") == 0)
                                                                                return Value_NCAAFBKickoffsTotalReturnYards;
                                                                            break;
                                                                        case 'u':
                                                                            if (strncmp(&(chars[17]), "chbacks", 7) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[24]))
                                                                                  {
                                                                                    case 0:
                                                                                        return Value_NCAAFBKickoffsTouchbacks;
                                                                                    case 'P':
                                                                                        if (strcmp(&(chars[25]), "erc") == 0)
                                                                                            return Value_NCAAFBKickoffsTouchbacksPerc;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'M':
                                            if (strncmp(&(chars[7]), "isc", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[10]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(chars[11]), "ssistedTackles") == 0)
                                                            return Value_NCAAFBMiscAssistedTackles;
                                                        break;
                                                    case 'C':
                                                        if (strcmp(&(chars[11]), "ombinedTackles") == 0)
                                                            return Value_NCAAFBMiscCombinedTackles;
                                                        break;
                                                    case 'F':
                                                        switch ((unsigned char)(chars[11]))
                                                          {
                                                            case 'o':
                                                                if (strcmp(&(chars[12]), "rcedFumbles") == 0)
                                                                    return Value_NCAAFBMiscForcedFumbles;
                                                                break;
                                                            case 'u':
                                                                if (strcmp(&(chars[12]), "mblesRecovered") == 0)
                                                                    return Value_NCAAFBMiscFumblesRecovered;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(chars[11]), "ackles") == 0)
                                                            return Value_NCAAFBMiscTackles;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'P':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(chars[8]), "ss", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[10]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(chars[11]), "sDefended") == 0)
                                                                    return Value_NCAAFBPassesDefended;
                                                                break;
                                                            case 'i':
                                                                if (strncmp(&(chars[11]), "ng", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[13]))
                                                                      {
                                                                        case '1':
                                                                            switch ((unsigned char)(chars[14]))
                                                                              {
                                                                                case '0':
                                                                                    if (strcmp(&(chars[15]), "PlusYards") == 0)
                                                                                        return Value_NCAAFBPassing10PlusYards;
                                                                                    break;
                                                                                case 's':
                                                                                    if (strcmp(&(chars[15]), "tDowns") == 0)
                                                                                        return Value_NCAAFBPassing1stDowns;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case '2':
                                                                            if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPassing20PlusYards;
                                                                            break;
                                                                        case '3':
                                                                            if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPassing30PlusYards;
                                                                            break;
                                                                        case '4':
                                                                            if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPassing40PlusYards;
                                                                            break;
                                                                        case '5':
                                                                            if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPassing50PlusYards;
                                                                            break;
                                                                        case 'A':
                                                                            switch ((unsigned char)(chars[14]))
                                                                              {
                                                                                case 't':
                                                                                    if (strcmp(&(chars[15]), "tempts") == 0)
                                                                                        return Value_NCAAFBPassingAttempts;
                                                                                    break;
                                                                                case 'v':
                                                                                    if (strncmp(&(chars[15]), "erageYardsPer", 13) == 0)
                                                                                      {
                                                                                        switch ((unsigned char)(chars[28]))
                                                                                          {
                                                                                            case 'A':
                                                                                                if (strcmp(&(chars[29]), "ttempt") == 0)
                                                                                                    return Value_NCAAFBPassingAverageYardsPerAttempt;
                                                                                                break;
                                                                                            case 'C':
                                                                                                if (strcmp(&(chars[29]), "ompletion") == 0)
                                                                                                    return Value_NCAAFBPassingAverageYardsPerCompletion;
                                                                                                break;
                                                                                            default:
                                                                                                break;
                                                                                          }
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'C':
                                                                            if (strncmp(&(chars[14]), "ompletion", 9) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[23]))
                                                                                  {
                                                                                    case 'P':
                                                                                        if (strcmp(&(chars[24]), "erc") == 0)
                                                                                            return Value_NCAAFBPassingCompletionPerc;
                                                                                        break;
                                                                                    case 's':
                                                                                        if (chars[24] == 0)
                                                                                            return Value_NCAAFBPassingCompletions;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'G':
                                                                            if (strcmp(&(chars[14]), "rossYards") == 0)
                                                                                return Value_NCAAFBPassingGrossYards;
                                                                            break;
                                                                        case 'I':
                                                                            if (strncmp(&(chars[14]), "nterception", 11) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[25]))
                                                                                  {
                                                                                    case 'P':
                                                                                        if (strcmp(&(chars[26]), "erc") == 0)
                                                                                            return Value_NCAAFBPassingInterceptionPerc;
                                                                                        break;
                                                                                    case 's':
                                                                                        switch ((unsigned char)(chars[26]))
                                                                                          {
                                                                                            case 0:
                                                                                                return Value_NCAAFBPassingInterceptions;
                                                                                            case 'R':
                                                                                                if (strcmp(&(chars[27]), "eturnedForTouchdown") == 0)
                                                                                                    return Value_NCAAFBPassingInterceptionsReturnedForTouchdown;
                                                                                                break;
                                                                                            default:
                                                                                                break;
                                                                                          }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(chars[14]), "ongestPass") == 0)
                                                                                return Value_NCAAFBPassingLongestPass;
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(chars[14]), "etYards") == 0)
                                                                                return Value_NCAAFBPassingNetYards;
                                                                            break;
                                                                        case 'R':
                                                                            switch ((unsigned char)(chars[14]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(chars[15]), "ting") == 0)
                                                                                        return Value_NCAAFBPassingRating;
                                                                                    break;
                                                                                case 'e':
                                                                                    if (strcmp(&(chars[15]), "dZoneAttempts") == 0)
                                                                                        return Value_NCAAFBPassingRedZoneAttempts;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'S':
                                                                            if (strncmp(&(chars[14]), "acked", 5) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[19]))
                                                                                  {
                                                                                    case 0:
                                                                                        return Value_NCAAFBPassingSacked;
                                                                                    case 'Y':
                                                                                        if (strcmp(&(chars[20]), "ardsLost") == 0)
                                                                                            return Value_NCAAFBPassingSackedYardsLost;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'T':
                                                                            switch ((unsigned char)(chars[14]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(chars[15]), "ckledForSafety") == 0)
                                                                                        return Value_NCAAFBPassingTackledForSafety;
                                                                                    break;
                                                                                case 'o':
                                                                                    switch ((unsigned char)(chars[15]))
                                                                                      {
                                                                                        case 't':
                                                                                            if (strcmp(&(chars[16]), "alYards") == 0)
                                                                                                return Value_NCAAFBPassingTotalYards;
                                                                                            break;
                                                                                        case 'u':
                                                                                            if (strncmp(&(chars[16]), "chdown", 6) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(chars[22]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(chars[23]), "erc") == 0)
                                                                                                            return Value_NCAAFBPassingTouchdownPerc;
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (chars[23] == 0)
                                                                                                            return Value_NCAAFBPassingTouchdowns;
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'e':
                                                    if (strncmp(&(chars[8]), "nalties", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[15]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAFBPenalties;
                                                            case '1':
                                                                if (strcmp(&(chars[16]), "stDowns") == 0)
                                                                    return Value_NCAAFBPenalties1stDowns;
                                                                break;
                                                            case 'Y':
                                                                if (strcmp(&(chars[16]), "ards") == 0)
                                                                    return Value_NCAAFBPenaltiesYards;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(chars[8]), "nt", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[10]))
                                                          {
                                                            case 'R':
                                                                if (strncmp(&(chars[11]), "eturns", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[17]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAFBPuntReturns;
                                                                        case '1':
                                                                            if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPuntReturns10PlusYards;
                                                                            break;
                                                                        case '2':
                                                                            if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPuntReturns20PlusYards;
                                                                            break;
                                                                        case '3':
                                                                            if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPuntReturns30PlusYards;
                                                                            break;
                                                                        case '4':
                                                                            if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPuntReturns40PlusYards;
                                                                            break;
                                                                        case '5':
                                                                            if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                                                return Value_NCAAFBPuntReturns50PlusYards;
                                                                            break;
                                                                        case 'A':
                                                                            if (strcmp(&(chars[18]), "verageRun") == 0)
                                                                                return Value_NCAAFBPuntReturnsAverageRun;
                                                                            break;
                                                                        case 'F':
                                                                            if (strcmp(&(chars[18]), "airCatches") == 0)
                                                                                return Value_NCAAFBPuntReturnsFairCatches;
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(chars[18]), "ongestKickReturn") == 0)
                                                                                return Value_NCAAFBPuntReturnsLongestKickReturn;
                                                                            break;
                                                                        case 'T':
                                                                            if (strcmp(&(chars[18]), "ouchdowns") == 0)
                                                                                return Value_NCAAFBPuntReturnsTouchdowns;
                                                                            break;
                                                                        case 'Y':
                                                                            if (strcmp(&(chars[18]), "ards") == 0)
                                                                                return Value_NCAAFBPuntReturnsYards;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'i':
                                                                if (strncmp(&(chars[11]), "ng", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[13]))
                                                                      {
                                                                        case 'A':
                                                                            if (strncmp(&(chars[14]), "verage", 6) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[20]))
                                                                                  {
                                                                                    case 'G':
                                                                                        if (strcmp(&(chars[21]), "rossYards") == 0)
                                                                                            return Value_NCAAFBPuntingAverageGrossYards;
                                                                                        break;
                                                                                    case 'N':
                                                                                        if (strcmp(&(chars[21]), "etYards") == 0)
                                                                                            return Value_NCAAFBPuntingAverageNetYards;
                                                                                        break;
                                                                                    case 'R':
                                                                                        if (strcmp(&(chars[21]), "eturnYards") == 0)
                                                                                            return Value_NCAAFBPuntingAverageReturnYards;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'B':
                                                                            if (strcmp(&(chars[14]), "locked") == 0)
                                                                                return Value_NCAAFBPuntingBlocked;
                                                                            break;
                                                                        case 'G':
                                                                            if (strcmp(&(chars[14]), "rossYards") == 0)
                                                                                return Value_NCAAFBPuntingGrossYards;
                                                                            break;
                                                                        case 'I':
                                                                            if (strncmp(&(chars[14]), "nsideOpponents20YardLine", 24) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[38]))
                                                                                  {
                                                                                    case 0:
                                                                                        return Value_NCAAFBPuntingInsideOpponents20YardLine;
                                                                                    case 'P':
                                                                                        if (strcmp(&(chars[39]), "erc") == 0)
                                                                                            return Value_NCAAFBPuntingInsideOpponents20YardLinePerc;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(chars[14]), "ongestPunt") == 0)
                                                                                return Value_NCAAFBPuntingLongestPunt;
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(chars[14]), "etYards") == 0)
                                                                                return Value_NCAAFBPuntingNetYards;
                                                                            break;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[14]), "unts") == 0)
                                                                                return Value_NCAAFBPuntingPunts;
                                                                            break;
                                                                        case 'R':
                                                                            if (strncmp(&(chars[14]), "eturn", 5) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[19]))
                                                                                  {
                                                                                    case 'Y':
                                                                                        if (strcmp(&(chars[20]), "ards") == 0)
                                                                                            return Value_NCAAFBPuntingReturnYards;
                                                                                        break;
                                                                                    case 'e':
                                                                                        if (strcmp(&(chars[20]), "d") == 0)
                                                                                            return Value_NCAAFBPuntingReturned;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'T':
                                                                            if (strncmp(&(chars[14]), "ouchbacks", 9) == 0)
                                                                              {
                                                                                switch ((unsigned char)(chars[23]))
                                                                                  {
                                                                                    case 0:
                                                                                        return Value_NCAAFBPuntingTouchbacks;
                                                                                    case 'P':
                                                                                        if (strcmp(&(chars[24]), "erc") == 0)
                                                                                            return Value_NCAAFBPuntingTouchbacksPerc;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'Q':
                                            if (strcmp(&(chars[7]), "uarterbackHits") == 0)
                                                return Value_NCAAFBQuarterbackHits;
                                            break;
                                        case 'R':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'e':
                                                    switch ((unsigned char)(chars[8]))
                                                      {
                                                        case 'c':
                                                            if (strncmp(&(chars[9]), "eiving", 6) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[15]))
                                                                  {
                                                                    case '1':
                                                                        switch ((unsigned char)(chars[16]))
                                                                          {
                                                                            case '0':
                                                                                if (strcmp(&(chars[17]), "PlusYards") == 0)
                                                                                    return Value_NCAAFBReceiving10PlusYards;
                                                                                break;
                                                                            case 's':
                                                                                if (strcmp(&(chars[17]), "tDowns") == 0)
                                                                                    return Value_NCAAFBReceiving1stDowns;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    case '2':
                                                                        if (strcmp(&(chars[16]), "0PlusYards") == 0)
                                                                            return Value_NCAAFBReceiving20PlusYards;
                                                                        break;
                                                                    case '3':
                                                                        if (strcmp(&(chars[16]), "0PlusYards") == 0)
                                                                            return Value_NCAAFBReceiving30PlusYards;
                                                                        break;
                                                                    case '4':
                                                                        if (strcmp(&(chars[16]), "0PlusYards") == 0)
                                                                            return Value_NCAAFBReceiving40PlusYards;
                                                                        break;
                                                                    case '5':
                                                                        if (strcmp(&(chars[16]), "0PlusYards") == 0)
                                                                            return Value_NCAAFBReceiving50PlusYards;
                                                                        break;
                                                                    case 'A':
                                                                        if (strcmp(&(chars[16]), "verageReception") == 0)
                                                                            return Value_NCAAFBReceivingAverageReception;
                                                                        break;
                                                                    case 'F':
                                                                        if (strcmp(&(chars[16]), "umbledOnReception") == 0)
                                                                            return Value_NCAAFBReceivingFumbledOnReception;
                                                                        break;
                                                                    case 'L':
                                                                        if (strcmp(&(chars[16]), "ongestReception") == 0)
                                                                            return Value_NCAAFBReceivingLongestReception;
                                                                        break;
                                                                    case 'R':
                                                                        if (strncmp(&(chars[16]), "e", 1) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[17]))
                                                                              {
                                                                                case 'c':
                                                                                    if (strcmp(&(chars[18]), "eptions") == 0)
                                                                                        return Value_NCAAFBReceivingReceptions;
                                                                                    break;
                                                                                case 'd':
                                                                                    if (strcmp(&(chars[18]), "ZoneTargets") == 0)
                                                                                        return Value_NCAAFBReceivingRedZoneTargets;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'T':
                                                                        switch ((unsigned char)(chars[16]))
                                                                          {
                                                                            case 'a':
                                                                                if (strcmp(&(chars[17]), "rgets") == 0)
                                                                                    return Value_NCAAFBReceivingTargets;
                                                                                break;
                                                                            case 'o':
                                                                                switch ((unsigned char)(chars[17]))
                                                                                  {
                                                                                    case 't':
                                                                                        if (strcmp(&(chars[18]), "alYards") == 0)
                                                                                            return Value_NCAAFBReceivingTotalYards;
                                                                                        break;
                                                                                    case 'u':
                                                                                        if (strcmp(&(chars[18]), "chdowns") == 0)
                                                                                            return Value_NCAAFBReceivingTouchdowns;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    case 'Y':
                                                                        if (strcmp(&(chars[16]), "ardsAfterCompletion") == 0)
                                                                            return Value_NCAAFBReceivingYardsAfterCompletion;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'd':
                                                            if (strncmp(&(chars[9]), "ZoneEfficiency", 14) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[23]))
                                                                  {
                                                                    case 'A':
                                                                        if (strcmp(&(chars[24]), "ttempts") == 0)
                                                                            return Value_NCAAFBRedZoneEfficiencyAttempts;
                                                                        break;
                                                                    case 'C':
                                                                        if (strcmp(&(chars[24]), "onversions") == 0)
                                                                            return Value_NCAAFBRedZoneEfficiencyConversions;
                                                                        break;
                                                                    case 'P':
                                                                        if (strcmp(&(chars[24]), "erc") == 0)
                                                                            return Value_NCAAFBRedZoneEfficiencyPerc;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(chars[8]), "shing", 5) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[13]))
                                                          {
                                                            case '1':
                                                                switch ((unsigned char)(chars[14]))
                                                                  {
                                                                    case '0':
                                                                        if (strcmp(&(chars[15]), "PlusYards") == 0)
                                                                            return Value_NCAAFBRushing10PlusYards;
                                                                        break;
                                                                    case 's':
                                                                        if (strncmp(&(chars[15]), "tDown", 5) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[20]))
                                                                              {
                                                                                case 'P':
                                                                                    if (strcmp(&(chars[21]), "erc") == 0)
                                                                                        return Value_NCAAFBRushing1stDownPerc;
                                                                                    break;
                                                                                case 's':
                                                                                    if (chars[21] == 0)
                                                                                        return Value_NCAAFBRushing1stDowns;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                    return Value_NCAAFBRushing20PlusYards;
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                    return Value_NCAAFBRushing30PlusYards;
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                    return Value_NCAAFBRushing40PlusYards;
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(chars[14]), "0PlusYards") == 0)
                                                                    return Value_NCAAFBRushing50PlusYards;
                                                                break;
                                                            case 'A':
                                                                switch ((unsigned char)(chars[14]))
                                                                  {
                                                                    case 't':
                                                                        if (strcmp(&(chars[15]), "tempts") == 0)
                                                                            return Value_NCAAFBRushingAttempts;
                                                                        break;
                                                                    case 'v':
                                                                        if (strcmp(&(chars[15]), "erageRush") == 0)
                                                                            return Value_NCAAFBRushingAverageRush;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'F':
                                                                if (strcmp(&(chars[14]), "umbledOnRush") == 0)
                                                                    return Value_NCAAFBRushingFumbledOnRush;
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[14]), "ongestRush") == 0)
                                                                    return Value_NCAAFBRushingLongestRush;
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(chars[14]), "edZoneAttempts") == 0)
                                                                    return Value_NCAAFBRushingRedZoneAttempts;
                                                                break;
                                                            case 'T':
                                                                switch ((unsigned char)(chars[14]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(chars[15]), "ckledForSafety") == 0)
                                                                            return Value_NCAAFBRushingTackledForSafety;
                                                                        break;
                                                                    case 'o':
                                                                        switch ((unsigned char)(chars[15]))
                                                                          {
                                                                            case 't':
                                                                                if (strcmp(&(chars[16]), "alYards") == 0)
                                                                                    return Value_NCAAFBRushingTotalYards;
                                                                                break;
                                                                            case 'u':
                                                                                if (strcmp(&(chars[16]), "chdowns") == 0)
                                                                                    return Value_NCAAFBRushingTouchdowns;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'S':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'a':
                                                    switch ((unsigned char)(chars[8]))
                                                      {
                                                        case 'c':
                                                            if (strncmp(&(chars[9]), "k", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[10]))
                                                                  {
                                                                    case 'Y':
                                                                        if (strcmp(&(chars[11]), "ards") == 0)
                                                                            return Value_NCAAFBSackYards;
                                                                        break;
                                                                    case 's':
                                                                        if (chars[11] == 0)
                                                                            return Value_NCAAFBSacks;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'f':
                                                            if (strcmp(&(chars[9]), "eties") == 0)
                                                                return Value_NCAAFBSafeties;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'p':
                                                    if (strncmp(&(chars[8]), "ecialTeams", 10) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[18]))
                                                          {
                                                            case 'A':
                                                                if (strcmp(&(chars[19]), "ssistedTackles") == 0)
                                                                    return Value_NCAAFBSpecialTeamsAssistedTackles;
                                                                break;
                                                            case 'C':
                                                                if (strcmp(&(chars[19]), "ombinedTackles") == 0)
                                                                    return Value_NCAAFBSpecialTeamsCombinedTackles;
                                                                break;
                                                            case 'F':
                                                                switch ((unsigned char)(chars[19]))
                                                                  {
                                                                    case 'o':
                                                                        if (strcmp(&(chars[20]), "rcedFumbles") == 0)
                                                                            return Value_NCAAFBSpecialTeamsForcedFumbles;
                                                                        break;
                                                                    case 'u':
                                                                        if (strcmp(&(chars[20]), "mblesRecovered") == 0)
                                                                            return Value_NCAAFBSpecialTeamsFumblesRecovered;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if (strcmp(&(chars[19]), "otalTackles") == 0)
                                                                    return Value_NCAAFBSpecialTeamsTotalTackles;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'T':
                                            if (strncmp(&(chars[7]), "ackles", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAFBTackles;
                                                    case 'A':
                                                        if (strcmp(&(chars[14]), "ssisted") == 0)
                                                            return Value_NCAAFBTacklesAssisted;
                                                        break;
                                                    case 'C':
                                                        if (strcmp(&(chars[14]), "ombined") == 0)
                                                            return Value_NCAAFBTacklesCombined;
                                                        break;
                                                    case 'F':
                                                        if (strcmp(&(chars[14]), "orLoss") == 0)
                                                            return Value_NCAAFBTacklesForLoss;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(chars[5]), "B", 1) == 0)
                                  {
                                    switch ((unsigned char)(chars[6]))
                                      {
                                        case 'A':
                                            if (strncmp(&(chars[7]), "ssists", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAMBAssists;
                                                    case 'P':
                                                        if (strcmp(&(chars[14]), "erGame") == 0)
                                                            return Value_NCAAMBAssistsPerGame;
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(chars[14]), "oTurnoverRatio") == 0)
                                                            return Value_NCAAMBAssistsToTurnoverRatio;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'B':
                                            if (strncmp(&(chars[7]), "locked", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'A':
                                                        if (strncmp(&(chars[14]), "ttempts", 7) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[21]))
                                                              {
                                                                case 0:
                                                                    return Value_NCAAMBBlockedAttempts;
                                                                case 'P':
                                                                    if (strcmp(&(chars[22]), "erGame") == 0)
                                                                        return Value_NCAAMBBlockedAttemptsPerGame;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'S':
                                                        if (strncmp(&(chars[14]), "hots", 4) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[18]))
                                                              {
                                                                case 0:
                                                                    return Value_NCAAMBBlockedShots;
                                                                case 'P':
                                                                    if (strcmp(&(chars[19]), "erGame") == 0)
                                                                        return Value_NCAAMBBlockedShotsPerGame;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'C':
                                            if (strcmp(&(chars[7]), "oachTechnicalFouls") == 0)
                                                return Value_NCAAMBCoachTechnicalFouls;
                                            break;
                                        case 'D':
                                            if (strncmp(&(chars[7]), "efensiveRebounds", 16) == 0)
                                              {
                                                switch ((unsigned char)(chars[23]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAMBDefensiveRebounds;
                                                    case 'P':
                                                        if (strcmp(&(chars[24]), "erGame") == 0)
                                                            return Value_NCAAMBDefensiveReboundsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'E':
                                            if (strcmp(&(chars[7]), "jections") == 0)
                                                return Value_NCAAMBEjections;
                                            break;
                                        case 'F':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(chars[8]), "stBreakPoints", 13) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[21]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBFastBreakPoints;
                                                            case 'P':
                                                                if (strcmp(&(chars[22]), "erGame") == 0)
                                                                    return Value_NCAAMBFastBreakPointsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(chars[8]), "eldGoal", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[15]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(chars[16]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[23]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBFieldGoalAttempts;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[24]), "erGame") == 0)
                                                                                return Value_NCAAMBFieldGoalAttemptsPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[16]), "ercentage") == 0)
                                                                    return Value_NCAAMBFieldGoalPercentage;
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(chars[16]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[20]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBFieldGoalsMade;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[21]), "erGame") == 0)
                                                                                return Value_NCAAMBFieldGoalsMadePerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'l':
                                                    if (strncmp(&(chars[8]), "agrantFouls", 11) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[19]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBFlagrantFouls;
                                                            case 'P':
                                                                if (strcmp(&(chars[20]), "erGame") == 0)
                                                                    return Value_NCAAMBFlagrantFoulsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'r':
                                                    if (strncmp(&(chars[8]), "eeThrow", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[15]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(chars[16]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[23]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBFreeThrowAttempts;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[24]), "erGame") == 0)
                                                                                return Value_NCAAMBFreeThrowAttemptsPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[16]), "ercentage") == 0)
                                                                    return Value_NCAAMBFreeThrowPercentage;
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(chars[16]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[20]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBFreeThrowsMade;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[21]), "erGame") == 0)
                                                                                return Value_NCAAMBFreeThrowsMadePerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'G':
                                            if (strncmp(&(chars[7]), "ames", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[11]))
                                                  {
                                                    case 'P':
                                                        if (strcmp(&(chars[12]), "layed") == 0)
                                                            return Value_NCAAMBGamesPlayed;
                                                        break;
                                                    case 'S':
                                                        if (strcmp(&(chars[12]), "tarted") == 0)
                                                            return Value_NCAAMBGamesStarted;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'M':
                                            if (strncmp(&(chars[7]), "inutesPlayed", 12) == 0)
                                              {
                                                switch ((unsigned char)(chars[19]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAMBMinutesPlayed;
                                                    case 'P':
                                                        if (strcmp(&(chars[20]), "erGame") == 0)
                                                            return Value_NCAAMBMinutesPlayedPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'O':
                                            if (strncmp(&(chars[7]), "ffensiveRebounds", 16) == 0)
                                              {
                                                switch ((unsigned char)(chars[23]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAMBOffensiveRebounds;
                                                    case 'P':
                                                        if (strcmp(&(chars[24]), "erGame") == 0)
                                                            return Value_NCAAMBOffensiveReboundsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'P':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'e':
                                                    if (strncmp(&(chars[8]), "rsonalFouls", 11) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[19]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBPersonalFouls;
                                                            case 'P':
                                                                if (strcmp(&(chars[20]), "erGame") == 0)
                                                                    return Value_NCAAMBPersonalFoulsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'l':
                                                    if (strcmp(&(chars[8]), "ayerTechnicalFouls") == 0)
                                                        return Value_NCAAMBPlayerTechnicalFouls;
                                                    break;
                                                case 'o':
                                                    if (strncmp(&(chars[8]), "ints", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[12]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBPoints;
                                                            case 'I':
                                                                if (strncmp(&(chars[13]), "nPaint", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[19]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBPointsInPaint;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[20]), "erGame") == 0)
                                                                                return Value_NCAAMBPointsInPaintPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'O':
                                                                if (strncmp(&(chars[13]), "ffTurnovers", 11) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[24]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBPointsOffTurnovers;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[25]), "erGame") == 0)
                                                                                return Value_NCAAMBPointsOffTurnoversPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[13]), "erGame") == 0)
                                                                    return Value_NCAAMBPointsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'R':
                                            if (strncmp(&(chars[7]), "ebounds", 7) == 0)
                                              {
                                                switch ((unsigned char)(chars[14]))
                                                  {
                                                    case 0:
                                                        return Value_NCAAMBRebounds;
                                                    case 'P':
                                                        if (strcmp(&(chars[15]), "erGame") == 0)
                                                            return Value_NCAAMBReboundsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'e':
                                                    if (strncmp(&(chars[8]), "condChancePoints", 16) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[24]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBSecondChancePoints;
                                                            case 'P':
                                                                if (strcmp(&(chars[25]), "erGame") == 0)
                                                                    return Value_NCAAMBSecondChancePointsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 't':
                                                    if (strncmp(&(chars[8]), "eals", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[12]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBSteals;
                                                            case 'P':
                                                                if (strcmp(&(chars[13]), "erGame") == 0)
                                                                    return Value_NCAAMBStealsPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'T':
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(chars[8]), "amTechnicalFouls") == 0)
                                                        return Value_NCAAMBTeamTechnicalFouls;
                                                    break;
                                                case 'h':
                                                    if (strncmp(&(chars[8]), "reePoint", 8) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[16]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(chars[17]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[24]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBThreePointAttempts;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[25]), "erGame") == 0)
                                                                                return Value_NCAAMBThreePointAttemptsPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[17]), "ercentage") == 0)
                                                                    return Value_NCAAMBThreePointPercentage;
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(chars[17]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[21]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBThreePointsMade;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[22]), "erGame") == 0)
                                                                                return Value_NCAAMBThreePointsMadePerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(chars[8]), "rnovers", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[15]))
                                                          {
                                                            case 0:
                                                                return Value_NCAAMBTurnovers;
                                                            case 'P':
                                                                if (strcmp(&(chars[16]), "erGame") == 0)
                                                                    return Value_NCAAMBTurnoversPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'w':
                                                    if (strncmp(&(chars[8]), "oPoint", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[14]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(chars[15]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[22]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBTwoPointAttempts;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[23]), "erGame") == 0)
                                                                                return Value_NCAAMBTwoPointAttemptsPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[15]), "ercentage") == 0)
                                                                    return Value_NCAAMBTwoPointPercentage;
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(chars[15]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[19]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NCAAMBTwoPointsMade;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[20]), "erGame") == 0)
                                                                                return Value_NCAAMBTwoPointsMadePerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'F':
                    if (strncmp(&(chars[2]), "L", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case '1':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'P':
                                        if (strcmp(&(chars[5]), "ointSafety") == 0)
                                            return Value_NFL1PointSafety;
                                        break;
                                    case 's':
                                        if (strcmp(&(chars[5]), "tDowns") == 0)
                                            return Value_NFL1stDowns;
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case '2':
                                if (strncmp(&(chars[4]), "PointConversions", 16) == 0)
                                  {
                                    switch ((unsigned char)(chars[20]))
                                      {
                                        case 'A':
                                            if (strcmp(&(chars[21]), "ttempted") == 0)
                                                return Value_NFL2PointConversionsAttempted;
                                            break;
                                        case 'F':
                                            if (strcmp(&(chars[21]), "ailed") == 0)
                                                return Value_NFL2PointConversionsFailed;
                                            break;
                                        case 'M':
                                            if (strcmp(&(chars[21]), "ade") == 0)
                                                return Value_NFL2PointConversionsMade;
                                            break;
                                        case 'P':
                                            if (strcmp(&(chars[21]), "assing") == 0)
                                                return Value_NFL2PointConversionsPassing;
                                            break;
                                        case 'R':
                                            switch ((unsigned char)(chars[21]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(chars[22]), "ceiving") == 0)
                                                        return Value_NFL2PointConversionsReceiving;
                                                    break;
                                                case 'u':
                                                    if (strcmp(&(chars[22]), "shing") == 0)
                                                        return Value_NFL2PointConversionsRushing;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case '3':
                                if (strncmp(&(chars[4]), "rdDownConversion", 16) == 0)
                                  {
                                    switch ((unsigned char)(chars[20]))
                                      {
                                        case 'A':
                                            if (strcmp(&(chars[21]), "ttempts") == 0)
                                                return Value_NFL3rdDownConversionAttempts;
                                            break;
                                        case 'P':
                                            if (strcmp(&(chars[21]), "erc") == 0)
                                                return Value_NFL3rdDownConversionPerc;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[21]))
                                              {
                                                case 0:
                                                    return Value_NFL3rdDownConversions;
                                                case 'V':
                                                    if (strncmp(&(chars[22]), "ia", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[24]))
                                                          {
                                                            case 'P':
                                                                switch ((unsigned char)(chars[25]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(chars[26]), "ss") == 0)
                                                                            return Value_NFL3rdDownConversionsViaPass;
                                                                        break;
                                                                    case 'e':
                                                                        if (strcmp(&(chars[26]), "nalty") == 0)
                                                                            return Value_NFL3rdDownConversionsViaPenalty;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(chars[25]), "ush") == 0)
                                                                    return Value_NFL3rdDownConversionsViaRush;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case '4':
                                if (strncmp(&(chars[4]), "thDownConversion", 16) == 0)
                                  {
                                    switch ((unsigned char)(chars[20]))
                                      {
                                        case 'A':
                                            if (strcmp(&(chars[21]), "ttempts") == 0)
                                                return Value_NFL4thDownConversionAttempts;
                                            break;
                                        case 'P':
                                            if (strcmp(&(chars[21]), "erc") == 0)
                                                return Value_NFL4thDownConversionPerc;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[21]))
                                              {
                                                case 0:
                                                    return Value_NFL4thDownConversions;
                                                case 'V':
                                                    if (strncmp(&(chars[22]), "ia", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[24]))
                                                          {
                                                            case 'P':
                                                                switch ((unsigned char)(chars[25]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(chars[26]), "ss") == 0)
                                                                            return Value_NFL4thDownConversionsViaPass;
                                                                        break;
                                                                    case 'e':
                                                                        if (strcmp(&(chars[26]), "nalty") == 0)
                                                                            return Value_NFL4thDownConversionsViaPenalty;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(chars[25]), "ush") == 0)
                                                                    return Value_NFL4thDownConversionsViaRush;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'B':
                                if (strncmp(&(chars[4]), "locked", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 'F':
                                            if (strncmp(&(chars[11]), "ieldGoalReturns", 15) == 0)
                                              {
                                                switch ((unsigned char)(chars[26]))
                                                  {
                                                    case 0:
                                                        return Value_NFLBlockedFieldGoalReturns;
                                                    case '1':
                                                        if (strcmp(&(chars[27]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedFieldGoalReturns10PlusYards;
                                                        break;
                                                    case '2':
                                                        if (strcmp(&(chars[27]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedFieldGoalReturns20PlusYards;
                                                        break;
                                                    case '3':
                                                        if (strcmp(&(chars[27]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedFieldGoalReturns30PlusYards;
                                                        break;
                                                    case '4':
                                                        if (strcmp(&(chars[27]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedFieldGoalReturns40PlusYards;
                                                        break;
                                                    case '5':
                                                        if (strcmp(&(chars[27]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedFieldGoalReturns50PlusYards;
                                                        break;
                                                    case 'A':
                                                        if (strcmp(&(chars[27]), "verageReturn") == 0)
                                                            return Value_NFLBlockedFieldGoalReturnsAverageReturn;
                                                        break;
                                                    case 'L':
                                                        if (strcmp(&(chars[27]), "ongestReturn") == 0)
                                                            return Value_NFLBlockedFieldGoalReturnsLongestReturn;
                                                        break;
                                                    case 'T':
                                                        if (strncmp(&(chars[27]), "o", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[28]))
                                                              {
                                                                case 't':
                                                                    if (strcmp(&(chars[29]), "alYards") == 0)
                                                                        return Value_NFLBlockedFieldGoalReturnsTotalYards;
                                                                    break;
                                                                case 'u':
                                                                    if (strcmp(&(chars[29]), "chdowns") == 0)
                                                                        return Value_NFLBlockedFieldGoalReturnsTouchdowns;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'K':
                                            if (strcmp(&(chars[11]), "icks") == 0)
                                                return Value_NFLBlockedKicks;
                                            break;
                                        case 'P':
                                            if (strncmp(&(chars[11]), "untReturn", 9) == 0)
                                              {
                                                switch ((unsigned char)(chars[20]))
                                                  {
                                                    case '1':
                                                        if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedPuntReturn10PlusYards;
                                                        break;
                                                    case '2':
                                                        if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedPuntReturn20PlusYards;
                                                        break;
                                                    case '3':
                                                        if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedPuntReturn30PlusYards;
                                                        break;
                                                    case '4':
                                                        if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedPuntReturn40PlusYards;
                                                        break;
                                                    case '5':
                                                        if (strcmp(&(chars[21]), "0PlusYards") == 0)
                                                            return Value_NFLBlockedPuntReturn50PlusYards;
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[21]))
                                                          {
                                                            case 0:
                                                                return Value_NFLBlockedPuntReturns;
                                                            case 'A':
                                                                if (strcmp(&(chars[22]), "verageReturn") == 0)
                                                                    return Value_NFLBlockedPuntReturnsAverageReturn;
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[22]), "ongestReturn") == 0)
                                                                    return Value_NFLBlockedPuntReturnsLongestReturn;
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(chars[22]), "o", 1) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[23]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(chars[24]), "alYards") == 0)
                                                                                return Value_NFLBlockedPuntReturnsTotalYards;
                                                                            break;
                                                                        case 'u':
                                                                            if (strcmp(&(chars[24]), "chdowns") == 0)
                                                                                return Value_NFLBlockedPuntReturnsTouchdowns;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'C':
                                if (strncmp(&(chars[4]), "onversion", 9) == 0)
                                  {
                                    switch ((unsigned char)(chars[13]))
                                      {
                                        case 'A':
                                            if (strcmp(&(chars[14]), "ttempts") == 0)
                                                return Value_NFLConversionAttempts;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[14]))
                                              {
                                                case 'C':
                                                    if (strcmp(&(chars[15]), "ompleted") == 0)
                                                        return Value_NFLConversionsCompleted;
                                                    break;
                                                case 'F':
                                                    if (strcmp(&(chars[15]), "ailed") == 0)
                                                        return Value_NFLConversionsFailed;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'E':
                                if (strncmp(&(chars[4]), "xtraPoints", 10) == 0)
                                  {
                                    switch ((unsigned char)(chars[14]))
                                      {
                                        case 'A':
                                            if (strncmp(&(chars[15]), "ttempted", 8) == 0)
                                              {
                                                switch ((unsigned char)(chars[23]))
                                                  {
                                                    case 0:
                                                        return Value_NFLExtraPointsAttempted;
                                                    case '2':
                                                        if (strcmp(&(chars[24]), "PointConversion") == 0)
                                                            return Value_NFLExtraPointsAttempted2PointConversion;
                                                        break;
                                                    case 'K':
                                                        if (strcmp(&(chars[24]), "icking") == 0)
                                                            return Value_NFLExtraPointsAttemptedKicking;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'B':
                                            if (strcmp(&(chars[15]), "locked") == 0)
                                                return Value_NFLExtraPointsBlocked;
                                            break;
                                        case 'M':
                                            if (strncmp(&(chars[15]), "ade", 3) == 0)
                                              {
                                                switch ((unsigned char)(chars[18]))
                                                  {
                                                    case 0:
                                                        return Value_NFLExtraPointsMade;
                                                    case '2':
                                                        if (strcmp(&(chars[19]), "PointConversion") == 0)
                                                            return Value_NFLExtraPointsMade2PointConversion;
                                                        break;
                                                    case 'K':
                                                        if (strcmp(&(chars[19]), "icking") == 0)
                                                            return Value_NFLExtraPointsMadeKicking;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'P':
                                            if (strcmp(&(chars[15]), "erc") == 0)
                                                return Value_NFLExtraPointsPerc;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'F':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'i':
                                        if (strncmp(&(chars[5]), "eldGoal", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 'R':
                                                    if (strncmp(&(chars[13]), "eturns", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[19]))
                                                          {
                                                            case 0:
                                                                return Value_NFLFieldGoalReturns;
                                                            case '1':
                                                                if (strcmp(&(chars[20]), "0PlusYards") == 0)
                                                                    return Value_NFLFieldGoalReturns10PlusYards;
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(chars[20]), "0PlusYards") == 0)
                                                                    return Value_NFLFieldGoalReturns20PlusYards;
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(chars[20]), "0PlusYards") == 0)
                                                                    return Value_NFLFieldGoalReturns30PlusYards;
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(chars[20]), "0PlusYards") == 0)
                                                                    return Value_NFLFieldGoalReturns40PlusYards;
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(chars[20]), "0PlusYards") == 0)
                                                                    return Value_NFLFieldGoalReturns50PlusYards;
                                                                break;
                                                            case 'A':
                                                                if (strcmp(&(chars[20]), "verageReturn") == 0)
                                                                    return Value_NFLFieldGoalReturnsAverageReturn;
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[20]), "ongestReturn") == 0)
                                                                    return Value_NFLFieldGoalReturnsLongestReturn;
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(chars[20]), "o", 1) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[21]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(chars[22]), "alYards") == 0)
                                                                                return Value_NFLFieldGoalReturnsTotalYards;
                                                                            break;
                                                                        case 'u':
                                                                            if (strcmp(&(chars[22]), "chdowns") == 0)
                                                                                return Value_NFLFieldGoalReturnsTouchdowns;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 's':
                                                    switch ((unsigned char)(chars[13]))
                                                      {
                                                        case 'A':
                                                            if (strncmp(&(chars[14]), "ttempted", 8) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[22]))
                                                                  {
                                                                    case 0:
                                                                        return Value_NFLFieldGoalsAttempted;
                                                                    case '1':
                                                                        if (strcmp(&(chars[23]), "to19Yards") == 0)
                                                                            return Value_NFLFieldGoalsAttempted1to19Yards;
                                                                        break;
                                                                    case '2':
                                                                        if (strcmp(&(chars[23]), "0to29Yards") == 0)
                                                                            return Value_NFLFieldGoalsAttempted20to29Yards;
                                                                        break;
                                                                    case '3':
                                                                        if (strcmp(&(chars[23]), "0to39Yards") == 0)
                                                                            return Value_NFLFieldGoalsAttempted30to39Yards;
                                                                        break;
                                                                    case '4':
                                                                        if (strcmp(&(chars[23]), "0to49Yards") == 0)
                                                                            return Value_NFLFieldGoalsAttempted40to49Yards;
                                                                        break;
                                                                    case '5':
                                                                        if (strcmp(&(chars[23]), "0PlusYards") == 0)
                                                                            return Value_NFLFieldGoalsAttempted50PlusYards;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'B':
                                                            if (strcmp(&(chars[14]), "locked") == 0)
                                                                return Value_NFLFieldGoalsBlocked;
                                                            break;
                                                        case 'L':
                                                            if (strcmp(&(chars[14]), "ongestMade") == 0)
                                                                return Value_NFLFieldGoalsLongestMade;
                                                            break;
                                                        case 'M':
                                                            if (strncmp(&(chars[14]), "ade", 3) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[17]))
                                                                  {
                                                                    case 0:
                                                                        return Value_NFLFieldGoalsMade;
                                                                    case '1':
                                                                        if (strcmp(&(chars[18]), "to19Yards") == 0)
                                                                            return Value_NFLFieldGoalsMade1to19Yards;
                                                                        break;
                                                                    case '2':
                                                                        if (strcmp(&(chars[18]), "0to29Yards") == 0)
                                                                            return Value_NFLFieldGoalsMade20to29Yards;
                                                                        break;
                                                                    case '3':
                                                                        if (strcmp(&(chars[18]), "0to39Yards") == 0)
                                                                            return Value_NFLFieldGoalsMade30to39Yards;
                                                                        break;
                                                                    case '4':
                                                                        if (strcmp(&(chars[18]), "0to49Yards") == 0)
                                                                            return Value_NFLFieldGoalsMade40to49Yards;
                                                                        break;
                                                                    case '5':
                                                                        if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                                            return Value_NFLFieldGoalsMade50PlusYards;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'P':
                                                            if (strcmp(&(chars[14]), "erc") == 0)
                                                                return Value_NFLFieldGoalsPerc;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strcmp(&(chars[5]), "rcedFumbles") == 0)
                                            return Value_NFLForcedFumbles;
                                        break;
                                    case 'u':
                                        if (strncmp(&(chars[5]), "mbles", 5) == 0)
                                          {
                                            switch ((unsigned char)(chars[10]))
                                              {
                                                case 0:
                                                    return Value_NFLFumbles;
                                                case 'F':
                                                    if (strcmp(&(chars[11]), "orced") == 0)
                                                        return Value_NFLFumblesForced;
                                                    break;
                                                case 'L':
                                                    if (strcmp(&(chars[11]), "ost") == 0)
                                                        return Value_NFLFumblesLost;
                                                    break;
                                                case 'O':
                                                    switch ((unsigned char)(chars[11]))
                                                      {
                                                        case 'p':
                                                            if (strncmp(&(chars[12]), "ponent", 6) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[18]))
                                                                  {
                                                                    case 'R':
                                                                        if (strcmp(&(chars[19]), "ecovery") == 0)
                                                                            return Value_NFLFumblesOpponentRecovery;
                                                                        break;
                                                                    case 'T':
                                                                        if (strcmp(&(chars[19]), "ouchdownsFromRecovery") == 0)
                                                                            return Value_NFLFumblesOpponentTouchdownsFromRecovery;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'u':
                                                            if (strcmp(&(chars[12]), "tOfBounds") == 0)
                                                                return Value_NFLFumblesOutOfBounds;
                                                            break;
                                                        case 'w':
                                                            if (strncmp(&(chars[12]), "n", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[13]))
                                                                  {
                                                                    case 'R':
                                                                        if (strcmp(&(chars[14]), "ecovery") == 0)
                                                                            return Value_NFLFumblesOwnRecovery;
                                                                        break;
                                                                    case 'T':
                                                                        if (strcmp(&(chars[14]), "ouchdownsFromRecovery") == 0)
                                                                            return Value_NFLFumblesOwnTouchdownsFromRecovery;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'R':
                                                    if (strncmp(&(chars[11]), "ecovered", 8) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[19]))
                                                          {
                                                            case 0:
                                                                return Value_NFLFumblesRecovered;
                                                            case 'F':
                                                                if (strcmp(&(chars[20]), "orTouchdowns") == 0)
                                                                    return Value_NFLFumblesRecoveredForTouchdowns;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'Y':
                                                    if (strncmp(&(chars[11]), "ardsFromO", 9) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[20]))
                                                          {
                                                            case 'p':
                                                                if (strcmp(&(chars[21]), "ponentRecovery") == 0)
                                                                    return Value_NFLFumblesYardsFromOpponentRecovery;
                                                                break;
                                                            case 'w':
                                                                if (strcmp(&(chars[21]), "nRecovery") == 0)
                                                                    return Value_NFLFumblesYardsFromOwnRecovery;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'G':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "mes", 3) == 0)
                                          {
                                            switch ((unsigned char)(chars[8]))
                                              {
                                                case 'P':
                                                    if (strcmp(&(chars[9]), "layed") == 0)
                                                        return Value_NFLGamesPlayed;
                                                    break;
                                                case 'S':
                                                    if (strcmp(&(chars[9]), "tarted") == 0)
                                                        return Value_NFLGamesStarted;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strncmp(&(chars[5]), "alEfficiency", 12) == 0)
                                          {
                                            switch ((unsigned char)(chars[17]))
                                              {
                                                case 'A':
                                                    if (strcmp(&(chars[18]), "ttempts") == 0)
                                                        return Value_NFLGoalEfficiencyAttempts;
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(chars[18]), "erc") == 0)
                                                        return Value_NFLGoalEfficiencyPerc;
                                                    break;
                                                case 'T':
                                                    if (strcmp(&(chars[18]), "ouchdowns") == 0)
                                                        return Value_NFLGoalEfficiencyTouchdowns;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'I':
                                if (strncmp(&(chars[4]), "nterceptions", 12) == 0)
                                  {
                                    switch ((unsigned char)(chars[16]))
                                      {
                                        case 0:
                                            return Value_NFLInterceptions;
                                        case 'L':
                                            if (strcmp(&(chars[17]), "ongestInterception") == 0)
                                                return Value_NFLInterceptionsLongestInterception;
                                            break;
                                        case 'T':
                                            if (strcmp(&(chars[17]), "ouchdowns") == 0)
                                                return Value_NFLInterceptionsTouchdowns;
                                            break;
                                        case 'Y':
                                            if (strcmp(&(chars[17]), "ards") == 0)
                                                return Value_NFLInterceptionsYards;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'K':
                                if (strncmp(&(chars[4]), "ickoff", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 'R':
                                            if (strncmp(&(chars[11]), "eturns", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[17]))
                                                  {
                                                    case '1':
                                                        if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                            return Value_NFLKickoffReturns10PlusYards;
                                                        break;
                                                    case '2':
                                                        if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                            return Value_NFLKickoffReturns20PlusYards;
                                                        break;
                                                    case '3':
                                                        if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                            return Value_NFLKickoffReturns30PlusYards;
                                                        break;
                                                    case '4':
                                                        if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                            return Value_NFLKickoffReturns40PlusYards;
                                                        break;
                                                    case '5':
                                                        if (strcmp(&(chars[18]), "0PlusYards") == 0)
                                                            return Value_NFLKickoffReturns50PlusYards;
                                                        break;
                                                    case 'A':
                                                        if (strcmp(&(chars[18]), "verageRun") == 0)
                                                            return Value_NFLKickoffReturnsAverageRun;
                                                        break;
                                                    case 'F':
                                                        if (strcmp(&(chars[18]), "airCatches") == 0)
                                                            return Value_NFLKickoffReturnsFairCatches;
                                                        break;
                                                    case 'L':
                                                        if (strcmp(&(chars[18]), "ongestKickReturn") == 0)
                                                            return Value_NFLKickoffReturnsLongestKickReturn;
                                                        break;
                                                    case 'R':
                                                        if (strcmp(&(chars[18]), "eturns") == 0)
                                                            return Value_NFLKickoffReturnsReturns;
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(chars[18]), "ouchdowns") == 0)
                                                            return Value_NFLKickoffReturnsTouchdowns;
                                                        break;
                                                    case 'Y':
                                                        if (strcmp(&(chars[18]), "ards") == 0)
                                                            return Value_NFLKickoffReturnsYards;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[11]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(chars[12]), "verage", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[18]))
                                                          {
                                                            case 'G':
                                                                if (strcmp(&(chars[19]), "rossYards") == 0)
                                                                    return Value_NFLKickoffsAverageGrossYards;
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(chars[19]), "etYards") == 0)
                                                                    return Value_NFLKickoffsAverageNetYards;
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(chars[19]), "eturnYards") == 0)
                                                                    return Value_NFLKickoffsAverageReturnYards;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'E':
                                                    if (strcmp(&(chars[12]), "ndZoneKicks") == 0)
                                                        return Value_NFLKickoffsEndZoneKicks;
                                                    break;
                                                case 'G':
                                                    if (strcmp(&(chars[12]), "rossYards") == 0)
                                                        return Value_NFLKickoffsGrossYards;
                                                    break;
                                                case 'I':
                                                    if (strncmp(&(chars[12]), "nsideOpponents20YardLine", 24) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[36]))
                                                          {
                                                            case 0:
                                                                return Value_NFLKickoffsInsideOpponents20YardLine;
                                                            case 'P':
                                                                if (strcmp(&(chars[37]), "erc") == 0)
                                                                    return Value_NFLKickoffsInsideOpponents20YardLinePerc;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'K':
                                                    if (strcmp(&(chars[12]), "icks") == 0)
                                                        return Value_NFLKickoffsKicks;
                                                    break;
                                                case 'L':
                                                    if (strcmp(&(chars[12]), "ongestKick") == 0)
                                                        return Value_NFLKickoffsLongestKick;
                                                    break;
                                                case 'N':
                                                    if (strcmp(&(chars[12]), "etYards") == 0)
                                                        return Value_NFLKickoffsNetYards;
                                                    break;
                                                case 'R':
                                                    if (strcmp(&(chars[12]), "eturned") == 0)
                                                        return Value_NFLKickoffsReturned;
                                                    break;
                                                case 'T':
                                                    if (strncmp(&(chars[12]), "o", 1) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[13]))
                                                          {
                                                            case 't':
                                                                if (strcmp(&(chars[14]), "alReturnYards") == 0)
                                                                    return Value_NFLKickoffsTotalReturnYards;
                                                                break;
                                                            case 'u':
                                                                if (strncmp(&(chars[14]), "chbacks", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[21]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NFLKickoffsTouchbacks;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[22]), "erc") == 0)
                                                                                return Value_NFLKickoffsTouchbacksPerc;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(chars[4]), "isc", 3) == 0)
                                  {
                                    switch ((unsigned char)(chars[7]))
                                      {
                                        case 'A':
                                            if (strcmp(&(chars[8]), "ssistedTackles") == 0)
                                                return Value_NFLMiscAssistedTackles;
                                            break;
                                        case 'C':
                                            if (strcmp(&(chars[8]), "ombinedTackles") == 0)
                                                return Value_NFLMiscCombinedTackles;
                                            break;
                                        case 'F':
                                            switch ((unsigned char)(chars[8]))
                                              {
                                                case 'o':
                                                    if (strcmp(&(chars[9]), "rcedFumbles") == 0)
                                                        return Value_NFLMiscForcedFumbles;
                                                    break;
                                                case 'u':
                                                    if (strcmp(&(chars[9]), "mblesRecovered") == 0)
                                                        return Value_NFLMiscFumblesRecovered;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'T':
                                            if (strcmp(&(chars[8]), "ackles") == 0)
                                                return Value_NFLMiscTackles;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'P':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "ss", 2) == 0)
                                          {
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(chars[8]), "sDefended") == 0)
                                                        return Value_NFLPassesDefended;
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(chars[8]), "ng", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[10]))
                                                          {
                                                            case '1':
                                                                switch ((unsigned char)(chars[11]))
                                                                  {
                                                                    case '0':
                                                                        if (strcmp(&(chars[12]), "PlusYards") == 0)
                                                                            return Value_NFLPassing10PlusYards;
                                                                        break;
                                                                    case 's':
                                                                        if (strcmp(&(chars[12]), "tDowns") == 0)
                                                                            return Value_NFLPassing1stDowns;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                                    return Value_NFLPassing20PlusYards;
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                                    return Value_NFLPassing30PlusYards;
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                                    return Value_NFLPassing40PlusYards;
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                                    return Value_NFLPassing50PlusYards;
                                                                break;
                                                            case 'A':
                                                                switch ((unsigned char)(chars[11]))
                                                                  {
                                                                    case 't':
                                                                        if (strcmp(&(chars[12]), "tempts") == 0)
                                                                            return Value_NFLPassingAttempts;
                                                                        break;
                                                                    case 'v':
                                                                        if (strncmp(&(chars[12]), "erageYardsPer", 13) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[25]))
                                                                              {
                                                                                case 'A':
                                                                                    if (strcmp(&(chars[26]), "ttempt") == 0)
                                                                                        return Value_NFLPassingAverageYardsPerAttempt;
                                                                                    break;
                                                                                case 'C':
                                                                                    if (strcmp(&(chars[26]), "ompletion") == 0)
                                                                                        return Value_NFLPassingAverageYardsPerCompletion;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'C':
                                                                if (strncmp(&(chars[11]), "ompletion", 9) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[20]))
                                                                      {
                                                                        case 'P':
                                                                            if (strcmp(&(chars[21]), "erc") == 0)
                                                                                return Value_NFLPassingCompletionPerc;
                                                                            break;
                                                                        case 's':
                                                                            if (chars[21] == 0)
                                                                                return Value_NFLPassingCompletions;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'G':
                                                                if (strcmp(&(chars[11]), "rossYards") == 0)
                                                                    return Value_NFLPassingGrossYards;
                                                                break;
                                                            case 'I':
                                                                if (strncmp(&(chars[11]), "nterception", 11) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[22]))
                                                                      {
                                                                        case 'P':
                                                                            if (strcmp(&(chars[23]), "erc") == 0)
                                                                                return Value_NFLPassingInterceptionPerc;
                                                                            break;
                                                                        case 's':
                                                                            switch ((unsigned char)(chars[23]))
                                                                              {
                                                                                case 0:
                                                                                    return Value_NFLPassingInterceptions;
                                                                                case 'R':
                                                                                    if (strcmp(&(chars[24]), "eturnedForTouchdown") == 0)
                                                                                        return Value_NFLPassingInterceptionsReturnedForTouchdown;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[11]), "ongestPass") == 0)
                                                                    return Value_NFLPassingLongestPass;
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(chars[11]), "etYards") == 0)
                                                                    return Value_NFLPassingNetYards;
                                                                break;
                                                            case 'R':
                                                                switch ((unsigned char)(chars[11]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(chars[12]), "ting") == 0)
                                                                            return Value_NFLPassingRating;
                                                                        break;
                                                                    case 'e':
                                                                        if (strcmp(&(chars[12]), "dZoneAttempts") == 0)
                                                                            return Value_NFLPassingRedZoneAttempts;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'S':
                                                                if (strncmp(&(chars[11]), "acked", 5) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[16]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NFLPassingSacked;
                                                                        case 'Y':
                                                                            if (strcmp(&(chars[17]), "ardsLost") == 0)
                                                                                return Value_NFLPassingSackedYardsLost;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'T':
                                                                switch ((unsigned char)(chars[11]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(chars[12]), "ckledForSafety") == 0)
                                                                            return Value_NFLPassingTackledForSafety;
                                                                        break;
                                                                    case 'o':
                                                                        switch ((unsigned char)(chars[12]))
                                                                          {
                                                                            case 't':
                                                                                if (strcmp(&(chars[13]), "alYards") == 0)
                                                                                    return Value_NFLPassingTotalYards;
                                                                                break;
                                                                            case 'u':
                                                                                if (strncmp(&(chars[13]), "chdown", 6) == 0)
                                                                                  {
                                                                                    switch ((unsigned char)(chars[19]))
                                                                                      {
                                                                                        case 'P':
                                                                                            if (strcmp(&(chars[20]), "erc") == 0)
                                                                                                return Value_NFLPassingTouchdownPerc;
                                                                                            break;
                                                                                        case 's':
                                                                                            if (chars[20] == 0)
                                                                                                return Value_NFLPassingTouchdowns;
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'e':
                                        if (strncmp(&(chars[5]), "nalties", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 0:
                                                    return Value_NFLPenalties;
                                                case '1':
                                                    if (strcmp(&(chars[13]), "stDowns") == 0)
                                                        return Value_NFLPenalties1stDowns;
                                                    break;
                                                case 'Y':
                                                    if (strcmp(&(chars[13]), "ards") == 0)
                                                        return Value_NFLPenaltiesYards;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'u':
                                        if (strncmp(&(chars[5]), "nt", 2) == 0)
                                          {
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'R':
                                                    if (strncmp(&(chars[8]), "eturns", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[14]))
                                                          {
                                                            case 0:
                                                                return Value_NFLPuntReturns;
                                                            case '1':
                                                                if (strcmp(&(chars[15]), "0PlusYards") == 0)
                                                                    return Value_NFLPuntReturns10PlusYards;
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(chars[15]), "0PlusYards") == 0)
                                                                    return Value_NFLPuntReturns20PlusYards;
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(chars[15]), "0PlusYards") == 0)
                                                                    return Value_NFLPuntReturns30PlusYards;
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(chars[15]), "0PlusYards") == 0)
                                                                    return Value_NFLPuntReturns40PlusYards;
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(chars[15]), "0PlusYards") == 0)
                                                                    return Value_NFLPuntReturns50PlusYards;
                                                                break;
                                                            case 'A':
                                                                if (strcmp(&(chars[15]), "verageRun") == 0)
                                                                    return Value_NFLPuntReturnsAverageRun;
                                                                break;
                                                            case 'F':
                                                                if (strcmp(&(chars[15]), "airCatches") == 0)
                                                                    return Value_NFLPuntReturnsFairCatches;
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[15]), "ongestKickReturn") == 0)
                                                                    return Value_NFLPuntReturnsLongestKickReturn;
                                                                break;
                                                            case 'T':
                                                                if (strcmp(&(chars[15]), "ouchdowns") == 0)
                                                                    return Value_NFLPuntReturnsTouchdowns;
                                                                break;
                                                            case 'Y':
                                                                if (strcmp(&(chars[15]), "ards") == 0)
                                                                    return Value_NFLPuntReturnsYards;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(chars[8]), "ng", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[10]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(chars[11]), "verage", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[17]))
                                                                      {
                                                                        case 'G':
                                                                            if (strcmp(&(chars[18]), "rossYards") == 0)
                                                                                return Value_NFLPuntingAverageGrossYards;
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(chars[18]), "etYards") == 0)
                                                                                return Value_NFLPuntingAverageNetYards;
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(chars[18]), "eturnYards") == 0)
                                                                                return Value_NFLPuntingAverageReturnYards;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'B':
                                                                if (strcmp(&(chars[11]), "locked") == 0)
                                                                    return Value_NFLPuntingBlocked;
                                                                break;
                                                            case 'G':
                                                                if (strcmp(&(chars[11]), "rossYards") == 0)
                                                                    return Value_NFLPuntingGrossYards;
                                                                break;
                                                            case 'I':
                                                                if (strncmp(&(chars[11]), "nsideOpponents20YardLine", 24) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[35]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NFLPuntingInsideOpponents20YardLine;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[36]), "erc") == 0)
                                                                                return Value_NFLPuntingInsideOpponents20YardLinePerc;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[11]), "ongestPunt") == 0)
                                                                    return Value_NFLPuntingLongestPunt;
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(chars[11]), "etYards") == 0)
                                                                    return Value_NFLPuntingNetYards;
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(chars[11]), "unts") == 0)
                                                                    return Value_NFLPuntingPunts;
                                                                break;
                                                            case 'R':
                                                                if (strncmp(&(chars[11]), "eturn", 5) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[16]))
                                                                      {
                                                                        case 'Y':
                                                                            if (strcmp(&(chars[17]), "ards") == 0)
                                                                                return Value_NFLPuntingReturnYards;
                                                                            break;
                                                                        case 'e':
                                                                            if (strcmp(&(chars[17]), "d") == 0)
                                                                                return Value_NFLPuntingReturned;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(chars[11]), "ouchbacks", 9) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[20]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NFLPuntingTouchbacks;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[21]), "erc") == 0)
                                                                                return Value_NFLPuntingTouchbacksPerc;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'Q':
                                if (strcmp(&(chars[4]), "uarterbackHits") == 0)
                                    return Value_NFLQuarterbackHits;
                                break;
                            case 'R':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'c':
                                                if (strncmp(&(chars[6]), "eiving", 6) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[12]))
                                                      {
                                                        case '1':
                                                            switch ((unsigned char)(chars[13]))
                                                              {
                                                                case '0':
                                                                    if (strcmp(&(chars[14]), "PlusYards") == 0)
                                                                        return Value_NFLReceiving10PlusYards;
                                                                    break;
                                                                case 's':
                                                                    if (strcmp(&(chars[14]), "tDowns") == 0)
                                                                        return Value_NFLReceiving1stDowns;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '2':
                                                            if (strcmp(&(chars[13]), "0PlusYards") == 0)
                                                                return Value_NFLReceiving20PlusYards;
                                                            break;
                                                        case '3':
                                                            if (strcmp(&(chars[13]), "0PlusYards") == 0)
                                                                return Value_NFLReceiving30PlusYards;
                                                            break;
                                                        case '4':
                                                            if (strcmp(&(chars[13]), "0PlusYards") == 0)
                                                                return Value_NFLReceiving40PlusYards;
                                                            break;
                                                        case '5':
                                                            if (strcmp(&(chars[13]), "0PlusYards") == 0)
                                                                return Value_NFLReceiving50PlusYards;
                                                            break;
                                                        case 'A':
                                                            if (strcmp(&(chars[13]), "verageReception") == 0)
                                                                return Value_NFLReceivingAverageReception;
                                                            break;
                                                        case 'F':
                                                            if (strcmp(&(chars[13]), "umbledOnReception") == 0)
                                                                return Value_NFLReceivingFumbledOnReception;
                                                            break;
                                                        case 'L':
                                                            if (strcmp(&(chars[13]), "ongestReception") == 0)
                                                                return Value_NFLReceivingLongestReception;
                                                            break;
                                                        case 'R':
                                                            if (strncmp(&(chars[13]), "e", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[14]))
                                                                  {
                                                                    case 'c':
                                                                        if (strcmp(&(chars[15]), "eptions") == 0)
                                                                            return Value_NFLReceivingReceptions;
                                                                        break;
                                                                    case 'd':
                                                                        if (strcmp(&(chars[15]), "ZoneTargets") == 0)
                                                                            return Value_NFLReceivingRedZoneTargets;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'T':
                                                            switch ((unsigned char)(chars[13]))
                                                              {
                                                                case 'a':
                                                                    if (strcmp(&(chars[14]), "rgets") == 0)
                                                                        return Value_NFLReceivingTargets;
                                                                    break;
                                                                case 'o':
                                                                    switch ((unsigned char)(chars[14]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(chars[15]), "alYards") == 0)
                                                                                return Value_NFLReceivingTotalYards;
                                                                            break;
                                                                        case 'u':
                                                                            if (strcmp(&(chars[15]), "chdowns") == 0)
                                                                                return Value_NFLReceivingTouchdowns;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'Y':
                                                            if (strcmp(&(chars[13]), "ardsAfterCompletion") == 0)
                                                                return Value_NFLReceivingYardsAfterCompletion;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'd':
                                                if (strncmp(&(chars[6]), "ZoneEfficiency", 14) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[20]))
                                                      {
                                                        case 'A':
                                                            if (strcmp(&(chars[21]), "ttempts") == 0)
                                                                return Value_NFLRedZoneEfficiencyAttempts;
                                                            break;
                                                        case 'C':
                                                            if (strcmp(&(chars[21]), "onversions") == 0)
                                                                return Value_NFLRedZoneEfficiencyConversions;
                                                            break;
                                                        case 'P':
                                                            if (strcmp(&(chars[21]), "erc") == 0)
                                                                return Value_NFLRedZoneEfficiencyPerc;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'u':
                                        if (strncmp(&(chars[5]), "shing", 5) == 0)
                                          {
                                            switch ((unsigned char)(chars[10]))
                                              {
                                                case '1':
                                                    switch ((unsigned char)(chars[11]))
                                                      {
                                                        case '0':
                                                            if (strcmp(&(chars[12]), "PlusYards") == 0)
                                                                return Value_NFLRushing10PlusYards;
                                                            break;
                                                        case 's':
                                                            if (strncmp(&(chars[12]), "tDown", 5) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[17]))
                                                                  {
                                                                    case 'P':
                                                                        if (strcmp(&(chars[18]), "erc") == 0)
                                                                            return Value_NFLRushing1stDownPerc;
                                                                        break;
                                                                    case 's':
                                                                        if (chars[18] == 0)
                                                                            return Value_NFLRushing1stDowns;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case '2':
                                                    if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                        return Value_NFLRushing20PlusYards;
                                                    break;
                                                case '3':
                                                    if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                        return Value_NFLRushing30PlusYards;
                                                    break;
                                                case '4':
                                                    if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                        return Value_NFLRushing40PlusYards;
                                                    break;
                                                case '5':
                                                    if (strcmp(&(chars[11]), "0PlusYards") == 0)
                                                        return Value_NFLRushing50PlusYards;
                                                    break;
                                                case 'A':
                                                    switch ((unsigned char)(chars[11]))
                                                      {
                                                        case 't':
                                                            if (strcmp(&(chars[12]), "tempts") == 0)
                                                                return Value_NFLRushingAttempts;
                                                            break;
                                                        case 'v':
                                                            if (strcmp(&(chars[12]), "erageRush") == 0)
                                                                return Value_NFLRushingAverageRush;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'F':
                                                    if (strcmp(&(chars[11]), "umbledOnRush") == 0)
                                                        return Value_NFLRushingFumbledOnRush;
                                                    break;
                                                case 'L':
                                                    if (strcmp(&(chars[11]), "ongestRush") == 0)
                                                        return Value_NFLRushingLongestRush;
                                                    break;
                                                case 'R':
                                                    if (strcmp(&(chars[11]), "edZoneAttempts") == 0)
                                                        return Value_NFLRushingRedZoneAttempts;
                                                    break;
                                                case 'T':
                                                    switch ((unsigned char)(chars[11]))
                                                      {
                                                        case 'a':
                                                            if (strcmp(&(chars[12]), "ckledForSafety") == 0)
                                                                return Value_NFLRushingTackledForSafety;
                                                            break;
                                                        case 'o':
                                                            switch ((unsigned char)(chars[12]))
                                                              {
                                                                case 't':
                                                                    if (strcmp(&(chars[13]), "alYards") == 0)
                                                                        return Value_NFLRushingTotalYards;
                                                                    break;
                                                                case 'u':
                                                                    if (strcmp(&(chars[13]), "chdowns") == 0)
                                                                        return Value_NFLRushingTouchdowns;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'S':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'c':
                                                if (strncmp(&(chars[6]), "k", 1) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[7]))
                                                      {
                                                        case 'Y':
                                                            if (strcmp(&(chars[8]), "ards") == 0)
                                                                return Value_NFLSackYards;
                                                            break;
                                                        case 's':
                                                            if (chars[8] == 0)
                                                                return Value_NFLSacks;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'f':
                                                if (strcmp(&(chars[6]), "eties") == 0)
                                                    return Value_NFLSafeties;
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'p':
                                        if (strncmp(&(chars[5]), "ecialTeams", 10) == 0)
                                          {
                                            switch ((unsigned char)(chars[15]))
                                              {
                                                case 'A':
                                                    if (strcmp(&(chars[16]), "ssistedTackles") == 0)
                                                        return Value_NFLSpecialTeamsAssistedTackles;
                                                    break;
                                                case 'C':
                                                    if (strcmp(&(chars[16]), "ombinedTackles") == 0)
                                                        return Value_NFLSpecialTeamsCombinedTackles;
                                                    break;
                                                case 'F':
                                                    switch ((unsigned char)(chars[16]))
                                                      {
                                                        case 'o':
                                                            if (strcmp(&(chars[17]), "rcedFumbles") == 0)
                                                                return Value_NFLSpecialTeamsForcedFumbles;
                                                            break;
                                                        case 'u':
                                                            if (strcmp(&(chars[17]), "mblesRecovered") == 0)
                                                                return Value_NFLSpecialTeamsFumblesRecovered;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'T':
                                                    if (strcmp(&(chars[16]), "otalTackles") == 0)
                                                        return Value_NFLSpecialTeamsTotalTackles;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'T':
                                if (strncmp(&(chars[4]), "ackles", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 0:
                                            return Value_NFLTackles;
                                        case 'A':
                                            if (strcmp(&(chars[11]), "ssisted") == 0)
                                                return Value_NFLTacklesAssisted;
                                            break;
                                        case 'C':
                                            if (strcmp(&(chars[11]), "ombined") == 0)
                                                return Value_NFLTacklesCombined;
                                            break;
                                        case 'F':
                                            if (strcmp(&(chars[11]), "orLoss") == 0)
                                                return Value_NFLTacklesForLoss;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'H':
                    if (strncmp(&(chars[2]), "L", 1) == 0)
                      {
                        switch ((unsigned char)(chars[3]))
                          {
                            case 'A':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 's':
                                        if (strncmp(&(chars[5]), "sists", 5) == 0)
                                          {
                                            switch ((unsigned char)(chars[10]))
                                              {
                                                case 0:
                                                    return Value_NHLAssists;
                                                case 'P':
                                                    if (strcmp(&(chars[11]), "erGame") == 0)
                                                        return Value_NHLAssistsPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'v':
                                        if (strcmp(&(chars[5]), "erageTimeOnIce") == 0)
                                            return Value_NHLAverageTimeOnIce;
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'B':
                                if (strncmp(&(chars[4]), "locked", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 'A':
                                            if (strncmp(&(chars[11]), "ttempts", 7) == 0)
                                              {
                                                switch ((unsigned char)(chars[18]))
                                                  {
                                                    case 0:
                                                        return Value_NHLBlockedAttempts;
                                                    case 'P':
                                                        if (strcmp(&(chars[19]), "erGame") == 0)
                                                            return Value_NHLBlockedAttemptsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (strncmp(&(chars[11]), "hots", 4) == 0)
                                              {
                                                switch ((unsigned char)(chars[15]))
                                                  {
                                                    case 0:
                                                        return Value_NHLBlockedShots;
                                                    case 'P':
                                                        if (strcmp(&(chars[16]), "erGame") == 0)
                                                            return Value_NHLBlockedShotsPerGame;
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'E':
                                if (strncmp(&(chars[4]), "venStrength", 11) == 0)
                                  {
                                    switch ((unsigned char)(chars[15]))
                                      {
                                        case 'A':
                                            if (strcmp(&(chars[16]), "ssists") == 0)
                                                return Value_NHLEvenStrengthAssists;
                                            break;
                                        case 'F':
                                            if (strncmp(&(chars[16]), "aceoff", 6) == 0)
                                              {
                                                switch ((unsigned char)(chars[22]))
                                                  {
                                                    case 'W':
                                                        if (strcmp(&(chars[23]), "inPerc") == 0)
                                                            return Value_NHLEvenStrengthFaceoffWinPerc;
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(chars[23]))
                                                          {
                                                            case 0:
                                                                return Value_NHLEvenStrengthFaceoffs;
                                                            case 'L':
                                                                if (strcmp(&(chars[24]), "ost") == 0)
                                                                    return Value_NHLEvenStrengthFaceoffsLost;
                                                                break;
                                                            case 'W':
                                                                if (strcmp(&(chars[24]), "on") == 0)
                                                                    return Value_NHLEvenStrengthFaceoffsWon;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'G':
                                            if (strcmp(&(chars[16]), "oals") == 0)
                                                return Value_NHLEvenStrengthGoals;
                                            break;
                                        case 'M':
                                            if (strcmp(&(chars[16]), "issedShots") == 0)
                                                return Value_NHLEvenStrengthMissedShots;
                                            break;
                                        case 'S':
                                            if (strcmp(&(chars[16]), "hotsOnGoal") == 0)
                                                return Value_NHLEvenStrengthShotsOnGoal;
                                            break;
                                        case 'T':
                                            if (strcmp(&(chars[16]), "imeOnIce") == 0)
                                                return Value_NHLEvenStrengthTimeOnIce;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'F':
                                if (strncmp(&(chars[4]), "aceoff", 6) == 0)
                                  {
                                    switch ((unsigned char)(chars[10]))
                                      {
                                        case 'W':
                                            if (strcmp(&(chars[11]), "inPerc") == 0)
                                                return Value_NHLFaceoffWinPerc;
                                            break;
                                        case 's':
                                            switch ((unsigned char)(chars[11]))
                                              {
                                                case 0:
                                                    return Value_NHLFaceoffs;
                                                case 'L':
                                                    if (strcmp(&(chars[12]), "ost") == 0)
                                                        return Value_NHLFaceoffsLost;
                                                    break;
                                                case 'W':
                                                    if (strcmp(&(chars[12]), "on") == 0)
                                                        return Value_NHLFaceoffsWon;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'G':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "me", 2) == 0)
                                          {
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 'W':
                                                    if (strncmp(&(chars[8]), "inningGoal", 10) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[18]))
                                                          {
                                                            case 'F':
                                                                if (strcmp(&(chars[19]), "lag") == 0)
                                                                    return Value_NHLGameWinningGoalFlag;
                                                                break;
                                                            case 's':
                                                                if (chars[19] == 0)
                                                                    return Value_NHLGameWinningGoals;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 's':
                                                    if (strcmp(&(chars[8]), "Played") == 0)
                                                        return Value_NHLGamesPlayed;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'i':
                                        if (strncmp(&(chars[5]), "veaways", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 0:
                                                    return Value_NHLGiveaways;
                                                case 'P':
                                                    if (strcmp(&(chars[13]), "erGame") == 0)
                                                        return Value_NHLGiveawaysPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strncmp(&(chars[5]), "al", 2) == 0)
                                          {
                                            switch ((unsigned char)(chars[7]))
                                              {
                                                case 's':
                                                    switch ((unsigned char)(chars[8]))
                                                      {
                                                        case 0:
                                                            return Value_NHLGoals;
                                                        case 'P':
                                                            if (strcmp(&(chars[9]), "erGame") == 0)
                                                                return Value_NHLGoalsPerGame;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 't':
                                                    if (strncmp(&(chars[8]), "ending", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[14]))
                                                          {
                                                            case 'E':
                                                                switch ((unsigned char)(chars[15]))
                                                                  {
                                                                    case 'm':
                                                                        if (strncmp(&(chars[16]), "ptyNet", 6) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[22]))
                                                                              {
                                                                                case 'E':
                                                                                    if (strcmp(&(chars[23]), "venStrengthGoalsAgainst") == 0)
                                                                                        return Value_NHLGoaltendingEmptyNetEvenStrengthGoalsAgainst;
                                                                                    break;
                                                                                case 'G':
                                                                                    if (strcmp(&(chars[23]), "oalsAgainst") == 0)
                                                                                        return Value_NHLGoaltendingEmptyNetGoalsAgainst;
                                                                                    break;
                                                                                case 'P':
                                                                                    if (strcmp(&(chars[23]), "owerPlayGoalsAgainst") == 0)
                                                                                        return Value_NHLGoaltendingEmptyNetPowerPlayGoalsAgainst;
                                                                                    break;
                                                                                case 'S':
                                                                                    if (strncmp(&(chars[23]), "ho", 2) == 0)
                                                                                      {
                                                                                        switch ((unsigned char)(chars[25]))
                                                                                          {
                                                                                            case 'r':
                                                                                                if (strcmp(&(chars[26]), "tHandedGoalsAgainst") == 0)
                                                                                                    return Value_NHLGoaltendingEmptyNetShortHandedGoalsAgainst;
                                                                                                break;
                                                                                            case 't':
                                                                                                if (strcmp(&(chars[26]), "sAgainst") == 0)
                                                                                                    return Value_NHLGoaltendingEmptyNetShotsAgainst;
                                                                                                break;
                                                                                            default:
                                                                                                break;
                                                                                          }
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'v':
                                                                        if (strncmp(&(chars[16]), "enStrength", 10) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[26]))
                                                                              {
                                                                                case 'G':
                                                                                    if (strcmp(&(chars[27]), "oalsAgainst") == 0)
                                                                                        return Value_NHLGoaltendingEvenStrengthGoalsAgainst;
                                                                                    break;
                                                                                case 'S':
                                                                                    switch ((unsigned char)(chars[27]))
                                                                                      {
                                                                                        case 'a':
                                                                                            if (strncmp(&(chars[28]), "ve", 2) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(chars[30]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(chars[31]), "erc") == 0)
                                                                                                            return Value_NHLGoaltendingEvenStrengthSavePerc;
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (chars[31] == 0)
                                                                                                            return Value_NHLGoaltendingEvenStrengthSaves;
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        case 'h':
                                                                                            if (strcmp(&(chars[28]), "otsAgainst") == 0)
                                                                                                return Value_NHLGoaltendingEvenStrengthShotsAgainst;
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'G':
                                                                if (strncmp(&(chars[15]), "oalsAgainst", 11) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[26]))
                                                                      {
                                                                        case 0:
                                                                            return Value_NHLGoaltendingGoalsAgainst;
                                                                        case 'A':
                                                                            if (strcmp(&(chars[27]), "verage") == 0)
                                                                                return Value_NHLGoaltendingGoalsAgainstAverage;
                                                                            break;
                                                                        case 'P':
                                                                            if (strcmp(&(chars[27]), "erGame") == 0)
                                                                                return Value_NHLGoaltendingGoalsAgainstPerGame;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(chars[15]), "osses") == 0)
                                                                    return Value_NHLGoaltendingLosses;
                                                                break;
                                                            case 'O':
                                                                switch ((unsigned char)(chars[15]))
                                                                  {
                                                                    case 'u':
                                                                        if (strcmp(&(chars[16]), "tcome") == 0)
                                                                            return Value_NHLGoaltendingOutcome;
                                                                        break;
                                                                    case 'v':
                                                                        if (strcmp(&(chars[16]), "ertimeLosses") == 0)
                                                                            return Value_NHLGoaltendingOvertimeLosses;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'P':
                                                                switch ((unsigned char)(chars[15]))
                                                                  {
                                                                    case 'e':
                                                                        if (strncmp(&(chars[16]), "nalty", 5) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[21]))
                                                                              {
                                                                                case 'G':
                                                                                    if (strcmp(&(chars[22]), "oalsAgainst") == 0)
                                                                                        return Value_NHLGoaltendingPenaltyGoalsAgainst;
                                                                                    break;
                                                                                case 'S':
                                                                                    switch ((unsigned char)(chars[22]))
                                                                                      {
                                                                                        case 'a':
                                                                                            if (strncmp(&(chars[23]), "ve", 2) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(chars[25]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(chars[26]), "erc") == 0)
                                                                                                            return Value_NHLGoaltendingPenaltySavePerc;
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (chars[26] == 0)
                                                                                                            return Value_NHLGoaltendingPenaltySaves;
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        case 'h':
                                                                                            if (strcmp(&(chars[23]), "otsAgainst") == 0)
                                                                                                return Value_NHLGoaltendingPenaltyShotsAgainst;
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'o':
                                                                        if (strncmp(&(chars[16]), "werPlay", 7) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[23]))
                                                                              {
                                                                                case 'G':
                                                                                    if (strcmp(&(chars[24]), "oalsAgainst") == 0)
                                                                                        return Value_NHLGoaltendingPowerPlayGoalsAgainst;
                                                                                    break;
                                                                                case 'S':
                                                                                    switch ((unsigned char)(chars[24]))
                                                                                      {
                                                                                        case 'a':
                                                                                            if (strncmp(&(chars[25]), "ve", 2) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(chars[27]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(chars[28]), "erc") == 0)
                                                                                                            return Value_NHLGoaltendingPowerPlaySavePerc;
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (chars[28] == 0)
                                                                                                            return Value_NHLGoaltendingPowerPlaySaves;
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        case 'h':
                                                                                            if (strcmp(&(chars[25]), "otsAgainst") == 0)
                                                                                                return Value_NHLGoaltendingPowerPlayShotsAgainst;
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'S':
                                                                switch ((unsigned char)(chars[15]))
                                                                  {
                                                                    case 'a':
                                                                        if (strncmp(&(chars[16]), "ve", 2) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[18]))
                                                                              {
                                                                                case 'P':
                                                                                    if (strcmp(&(chars[19]), "erc") == 0)
                                                                                        return Value_NHLGoaltendingSavePerc;
                                                                                    break;
                                                                                case 's':
                                                                                    if (chars[19] == 0)
                                                                                        return Value_NHLGoaltendingSaves;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'h':
                                                                        switch ((unsigned char)(chars[16]))
                                                                          {
                                                                            case 'o':
                                                                                switch ((unsigned char)(chars[17]))
                                                                                  {
                                                                                    case 'o':
                                                                                        if (strncmp(&(chars[18]), "tout", 4) == 0)
                                                                                          {
                                                                                            switch ((unsigned char)(chars[22]))
                                                                                              {
                                                                                                case 'G':
                                                                                                    if (strcmp(&(chars[23]), "oalsAgainst") == 0)
                                                                                                        return Value_NHLGoaltendingShootoutGoalsAgainst;
                                                                                                    break;
                                                                                                case 'S':
                                                                                                    switch ((unsigned char)(chars[23]))
                                                                                                      {
                                                                                                        case 'a':
                                                                                                            if (strncmp(&(chars[24]), "ve", 2) == 0)
                                                                                                              {
                                                                                                                switch ((unsigned char)(chars[26]))
                                                                                                                  {
                                                                                                                    case 'P':
                                                                                                                        if (strcmp(&(chars[27]), "erc") == 0)
                                                                                                                            return Value_NHLGoaltendingShootoutSavePerc;
                                                                                                                        break;
                                                                                                                    case 's':
                                                                                                                        if (chars[27] == 0)
                                                                                                                            return Value_NHLGoaltendingShootoutSaves;
                                                                                                                        break;
                                                                                                                    default:
                                                                                                                        break;
                                                                                                                  }
                                                                                                              }
                                                                                                            break;
                                                                                                        case 'h':
                                                                                                            if (strcmp(&(chars[24]), "otsAgainst") == 0)
                                                                                                                return Value_NHLGoaltendingShootoutShotsAgainst;
                                                                                                            break;
                                                                                                        default:
                                                                                                            break;
                                                                                                      }
                                                                                                    break;
                                                                                                default:
                                                                                                    break;
                                                                                              }
                                                                                          }
                                                                                        break;
                                                                                    case 'r':
                                                                                        if (strncmp(&(chars[18]), "tHanded", 7) == 0)
                                                                                          {
                                                                                            switch ((unsigned char)(chars[25]))
                                                                                              {
                                                                                                case 'G':
                                                                                                    if (strcmp(&(chars[26]), "oalsAgainst") == 0)
                                                                                                        return Value_NHLGoaltendingShortHandedGoalsAgainst;
                                                                                                    break;
                                                                                                case 'S':
                                                                                                    switch ((unsigned char)(chars[26]))
                                                                                                      {
                                                                                                        case 'a':
                                                                                                            if (strncmp(&(chars[27]), "ve", 2) == 0)
                                                                                                              {
                                                                                                                switch ((unsigned char)(chars[29]))
                                                                                                                  {
                                                                                                                    case 'P':
                                                                                                                        if (strcmp(&(chars[30]), "erc") == 0)
                                                                                                                            return Value_NHLGoaltendingShortHandedSavePerc;
                                                                                                                        break;
                                                                                                                    case 's':
                                                                                                                        if (chars[30] == 0)
                                                                                                                            return Value_NHLGoaltendingShortHandedSaves;
                                                                                                                        break;
                                                                                                                    default:
                                                                                                                        break;
                                                                                                                  }
                                                                                                              }
                                                                                                            break;
                                                                                                        case 'h':
                                                                                                            if (strcmp(&(chars[27]), "otsAgainst") == 0)
                                                                                                                return Value_NHLGoaltendingShortHandedShotsAgainst;
                                                                                                            break;
                                                                                                        default:
                                                                                                            break;
                                                                                                      }
                                                                                                    break;
                                                                                                default:
                                                                                                    break;
                                                                                              }
                                                                                          }
                                                                                        break;
                                                                                    case 't':
                                                                                        if (strncmp(&(chars[18]), "sAgainst", 8) == 0)
                                                                                          {
                                                                                            switch ((unsigned char)(chars[26]))
                                                                                              {
                                                                                                case 0:
                                                                                                    return Value_NHLGoaltendingShotsAgainst;
                                                                                                case 'P':
                                                                                                    if (strcmp(&(chars[27]), "erGame") == 0)
                                                                                                        return Value_NHLGoaltendingShotsAgainstPerGame;
                                                                                                    break;
                                                                                                default:
                                                                                                    break;
                                                                                              }
                                                                                          }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                                break;
                                                                            case 'u':
                                                                                if (strncmp(&(chars[17]), "tout", 4) == 0)
                                                                                  {
                                                                                    switch ((unsigned char)(chars[21]))
                                                                                      {
                                                                                        case 'F':
                                                                                            if (strcmp(&(chars[22]), "lag") == 0)
                                                                                                return Value_NHLGoaltendingShutoutFlag;
                                                                                            break;
                                                                                        case 's':
                                                                                            if (chars[22] == 0)
                                                                                                return Value_NHLGoaltendingShutouts;
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(chars[15]), "otal", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(chars[19]))
                                                                      {
                                                                        case 'G':
                                                                            if (strcmp(&(chars[20]), "oalsAgainst") == 0)
                                                                                return Value_NHLGoaltendingTotalGoalsAgainst;
                                                                            break;
                                                                        case 'S':
                                                                            if (strcmp(&(chars[20]), "hotsAgainst") == 0)
                                                                                return Value_NHLGoaltendingTotalShotsAgainst;
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'W':
                                                                if (strcmp(&(chars[15]), "ins") == 0)
                                                                    return Value_NHLGoaltendingWins;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'H':
                                if (strncmp(&(chars[4]), "its", 3) == 0)
                                  {
                                    switch ((unsigned char)(chars[7]))
                                      {
                                        case 0:
                                            return Value_NHLHits;
                                        case 'P':
                                            if (strcmp(&(chars[8]), "erGame") == 0)
                                                return Value_NHLHitsPerGame;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(chars[4]), "issedShots", 10) == 0)
                                  {
                                    switch ((unsigned char)(chars[14]))
                                      {
                                        case 0:
                                            return Value_NHLMissedShots;
                                        case 'P':
                                            if (strcmp(&(chars[15]), "erGame") == 0)
                                                return Value_NHLMissedShotsPerGame;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'P':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'e':
                                        if (strncmp(&(chars[5]), "nalt", 4) == 0)
                                          {
                                            switch ((unsigned char)(chars[9]))
                                              {
                                                case 'i':
                                                    if (strncmp(&(chars[10]), "es", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[12]))
                                                          {
                                                            case 0:
                                                                return Value_NHLPenalties;
                                                            case 'P':
                                                                if (strcmp(&(chars[13]), "erGame") == 0)
                                                                    return Value_NHLPenaltiesPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'y':
                                                    switch ((unsigned char)(chars[10]))
                                                      {
                                                        case 'G':
                                                            if (strcmp(&(chars[11]), "oals") == 0)
                                                                return Value_NHLPenaltyGoals;
                                                            break;
                                                        case 'M':
                                                            if (strncmp(&(chars[11]), "i", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[12]))
                                                                  {
                                                                    case 'n':
                                                                        if (strncmp(&(chars[13]), "utes", 4) == 0)
                                                                          {
                                                                            switch ((unsigned char)(chars[17]))
                                                                              {
                                                                                case 0:
                                                                                    return Value_NHLPenaltyMinutes;
                                                                                case 'P':
                                                                                    if (strcmp(&(chars[18]), "erGame") == 0)
                                                                                        return Value_NHLPenaltyMinutesPerGame;
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 's':
                                                                        if (strcmp(&(chars[13]), "sedShots") == 0)
                                                                            return Value_NHLPenaltyMissedShots;
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(chars[11]), "hotsOnGoal") == 0)
                                                                return Value_NHLPenaltyShotsOnGoal;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'l':
                                        if (strcmp(&(chars[5]), "usMinus") == 0)
                                            return Value_NHLPlusMinus;
                                        break;
                                    case 'o':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'i':
                                                if (strncmp(&(chars[6]), "nts", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[9]))
                                                      {
                                                        case 0:
                                                            return Value_NHLPoints;
                                                        case 'P':
                                                            if (strcmp(&(chars[10]), "erGame") == 0)
                                                                return Value_NHLPointsPerGame;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'w':
                                                if (strncmp(&(chars[6]), "erPlay", 6) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[12]))
                                                      {
                                                        case 'A':
                                                            if (strcmp(&(chars[13]), "ssists") == 0)
                                                                return Value_NHLPowerPlayAssists;
                                                            break;
                                                        case 'F':
                                                            if (strncmp(&(chars[13]), "aceoff", 6) == 0)
                                                              {
                                                                switch ((unsigned char)(chars[19]))
                                                                  {
                                                                    case 'W':
                                                                        if (strcmp(&(chars[20]), "inPerc") == 0)
                                                                            return Value_NHLPowerPlayFaceoffWinPerc;
                                                                        break;
                                                                    case 's':
                                                                        switch ((unsigned char)(chars[20]))
                                                                          {
                                                                            case 0:
                                                                                return Value_NHLPowerPlayFaceoffs;
                                                                            case 'L':
                                                                                if (strcmp(&(chars[21]), "ost") == 0)
                                                                                    return Value_NHLPowerPlayFaceoffsLost;
                                                                                break;
                                                                            case 'W':
                                                                                if (strcmp(&(chars[21]), "on") == 0)
                                                                                    return Value_NHLPowerPlayFaceoffsWon;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'G':
                                                            if (strcmp(&(chars[13]), "oals") == 0)
                                                                return Value_NHLPowerPlayGoals;
                                                            break;
                                                        case 'M':
                                                            if (strcmp(&(chars[13]), "issedShots") == 0)
                                                                return Value_NHLPowerPlayMissedShots;
                                                            break;
                                                        case 'O':
                                                            if (strcmp(&(chars[13]), "pportunities") == 0)
                                                                return Value_NHLPowerPlayOpportunities;
                                                            break;
                                                        case 'P':
                                                            if (strcmp(&(chars[13]), "oints") == 0)
                                                                return Value_NHLPowerPlayPoints;
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(chars[13]), "hotsOnGoal") == 0)
                                                                return Value_NHLPowerPlayShotsOnGoal;
                                                            break;
                                                        case 'T':
                                                            if (strcmp(&(chars[13]), "imeOnIce") == 0)
                                                                return Value_NHLPowerPlayTimeOnIce;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'S':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(chars[5]), "ratches") == 0)
                                            return Value_NHLScratches;
                                        break;
                                    case 'h':
                                        switch ((unsigned char)(chars[5]))
                                          {
                                            case 'i':
                                                if (strncmp(&(chars[6]), "fts", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(chars[9]))
                                                      {
                                                        case 0:
                                                            return Value_NHLShifts;
                                                        case 'P':
                                                            if (strcmp(&(chars[10]), "erGame") == 0)
                                                                return Value_NHLShiftsPerGame;
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'o':
                                                switch ((unsigned char)(chars[6]))
                                                  {
                                                    case 'o':
                                                        if (strncmp(&(chars[7]), "t", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[8]))
                                                              {
                                                                case 'i':
                                                                    if (strcmp(&(chars[9]), "ngPerc") == 0)
                                                                        return Value_NHLShootingPerc;
                                                                    break;
                                                                case 'o':
                                                                    if (strncmp(&(chars[9]), "ut", 2) == 0)
                                                                      {
                                                                        switch ((unsigned char)(chars[11]))
                                                                          {
                                                                            case 'G':
                                                                                if (strcmp(&(chars[12]), "oals") == 0)
                                                                                    return Value_NHLShootoutGoals;
                                                                                break;
                                                                            case 'M':
                                                                                if (strcmp(&(chars[12]), "issedShots") == 0)
                                                                                    return Value_NHLShootoutMissedShots;
                                                                                break;
                                                                            case 'S':
                                                                                if (strcmp(&(chars[12]), "hotsOnGoal") == 0)
                                                                                    return Value_NHLShootoutShotsOnGoal;
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'r':
                                                        if (strncmp(&(chars[7]), "tHanded", 7) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[14]))
                                                              {
                                                                case 'A':
                                                                    if (strcmp(&(chars[15]), "ssists") == 0)
                                                                        return Value_NHLShortHandedAssists;
                                                                    break;
                                                                case 'F':
                                                                    if (strncmp(&(chars[15]), "aceoff", 6) == 0)
                                                                      {
                                                                        switch ((unsigned char)(chars[21]))
                                                                          {
                                                                            case 'W':
                                                                                if (strcmp(&(chars[22]), "inPerc") == 0)
                                                                                    return Value_NHLShortHandedFaceoffWinPerc;
                                                                                break;
                                                                            case 's':
                                                                                switch ((unsigned char)(chars[22]))
                                                                                  {
                                                                                    case 0:
                                                                                        return Value_NHLShortHandedFaceoffs;
                                                                                    case 'L':
                                                                                        if (strcmp(&(chars[23]), "ost") == 0)
                                                                                            return Value_NHLShortHandedFaceoffsLost;
                                                                                        break;
                                                                                    case 'W':
                                                                                        if (strcmp(&(chars[23]), "on") == 0)
                                                                                            return Value_NHLShortHandedFaceoffsWon;
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'G':
                                                                    if (strcmp(&(chars[15]), "oals") == 0)
                                                                        return Value_NHLShortHandedGoals;
                                                                    break;
                                                                case 'M':
                                                                    if (strcmp(&(chars[15]), "issedShots") == 0)
                                                                        return Value_NHLShortHandedMissedShots;
                                                                    break;
                                                                case 'P':
                                                                    if (strcmp(&(chars[15]), "oints") == 0)
                                                                        return Value_NHLShortHandedPoints;
                                                                    break;
                                                                case 'S':
                                                                    if (strcmp(&(chars[15]), "hotsOnGoal") == 0)
                                                                        return Value_NHLShortHandedShotsOnGoal;
                                                                    break;
                                                                case 'T':
                                                                    if (strcmp(&(chars[15]), "imeOnIce") == 0)
                                                                        return Value_NHLShortHandedTimeOnIce;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 't':
                                                        if (strncmp(&(chars[7]), "sOnGoal", 7) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[14]))
                                                              {
                                                                case 0:
                                                                    return Value_NHLShotsOnGoal;
                                                                case 'P':
                                                                    if (strcmp(&(chars[15]), "erGame") == 0)
                                                                        return Value_NHLShotsOnGoalPerGame;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'T':
                                switch ((unsigned char)(chars[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(chars[5]), "keaways", 7) == 0)
                                          {
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 0:
                                                    return Value_NHLTakeaways;
                                                case 'P':
                                                    if (strcmp(&(chars[13]), "erGame") == 0)
                                                        return Value_NHLTakeawaysPerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'e':
                                        if (strncmp(&(chars[5]), "amPenalt", 8) == 0)
                                          {
                                            switch ((unsigned char)(chars[13]))
                                              {
                                                case 'i':
                                                    if (strncmp(&(chars[14]), "es", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[16]))
                                                          {
                                                            case 0:
                                                                return Value_NHLTeamPenalties;
                                                            case 'P':
                                                                if (strcmp(&(chars[17]), "erGame") == 0)
                                                                    return Value_NHLTeamPenaltiesPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'y':
                                                    if (strncmp(&(chars[14]), "Minutes", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(chars[21]))
                                                          {
                                                            case 0:
                                                                return Value_NHLTeamPenaltyMinutes;
                                                            case 'P':
                                                                if (strcmp(&(chars[22]), "erGame") == 0)
                                                                    return Value_NHLTeamPenaltyMinutesPerGame;
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strncmp(&(chars[5]), "talTimeOnIce", 12) == 0)
                                          {
                                            switch ((unsigned char)(chars[17]))
                                              {
                                                case 0:
                                                    return Value_NHLTotalTimeOnIce;
                                                case 'P':
                                                    if (strcmp(&(chars[18]), "erGame") == 0)
                                                        return Value_NHLTotalTimeOnIcePerGame;
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'S':
            if (strncmp(&(chars[1]), "occer", 5) == 0)
              {
                switch ((unsigned char)(chars[6]))
                  {
                    case 'B':
                        if (strcmp(&(chars[7]), "allPossessions") == 0)
                            return Value_SoccerBallPossessions;
                        break;
                    case 'C':
                        switch ((unsigned char)(chars[7]))
                          {
                            case 'a':
                                if (strcmp(&(chars[8]), "rdsGiven") == 0)
                                    return Value_SoccerCardsGiven;
                                break;
                            case 'o':
                                if (strcmp(&(chars[8]), "rnerKicks") == 0)
                                    return Value_SoccerCornerKicks;
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'F':
                        if (strcmp(&(chars[7]), "reeKicks") == 0)
                            return Value_SoccerFreeKicks;
                        break;
                    case 'G':
                        if (strncmp(&(chars[7]), "oal", 3) == 0)
                          {
                            switch ((unsigned char)(chars[10]))
                              {
                                case 'A':
                                    if (strcmp(&(chars[11]), "ttempts") == 0)
                                        return Value_SoccerGoalAttempts;
                                    break;
                                case 's':
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'B':
                                            if (strncmp(&(chars[12]), "y", 1) == 0)
                                              {
                                                switch ((unsigned char)(chars[13]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(chars[14]), "oot") == 0)
                                                            return Value_SoccerGoalsByFoot;
                                                        break;
                                                    case 'H':
                                                        if (strcmp(&(chars[14]), "eaders") == 0)
                                                            return Value_SoccerGoalsByHeaders;
                                                        break;
                                                    case 'T':
                                                        if (strncmp(&(chars[14]), "ime", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[17]))
                                                              {
                                                                case '0':
                                                                    if (strcmp(&(chars[18]), "0To15") == 0)
                                                                        return Value_SoccerGoalsByTime00To15;
                                                                    break;
                                                                case '1':
                                                                    if (strcmp(&(chars[18]), "6To30") == 0)
                                                                        return Value_SoccerGoalsByTime16To30;
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(chars[18]), "1To45") == 0)
                                                                        return Value_SoccerGoalsByTime31To45;
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(chars[18]), "6To60") == 0)
                                                                        return Value_SoccerGoalsByTime46To60;
                                                                    break;
                                                                case '6':
                                                                    if (strcmp(&(chars[18]), "1To75") == 0)
                                                                        return Value_SoccerGoalsByTime61To75;
                                                                    break;
                                                                case '7':
                                                                    if (strcmp(&(chars[18]), "6To90") == 0)
                                                                        return Value_SoccerGoalsByTime76To90;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'C':
                                            if (strncmp(&(chars[12]), "onceded", 7) == 0)
                                              {
                                                switch ((unsigned char)(chars[19]))
                                                  {
                                                    case 0:
                                                        return Value_SoccerGoalsConceded;
                                                    case 'B':
                                                        if (strncmp(&(chars[20]), "yTime", 5) == 0)
                                                          {
                                                            switch ((unsigned char)(chars[25]))
                                                              {
                                                                case '0':
                                                                    if (strcmp(&(chars[26]), "0To15") == 0)
                                                                        return Value_SoccerGoalsConcededByTime00To15;
                                                                    break;
                                                                case '1':
                                                                    if (strcmp(&(chars[26]), "6To30") == 0)
                                                                        return Value_SoccerGoalsConcededByTime16To30;
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(chars[26]), "1To45") == 0)
                                                                        return Value_SoccerGoalsConcededByTime31To45;
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(chars[26]), "6To60") == 0)
                                                                        return Value_SoccerGoalsConcededByTime46To60;
                                                                    break;
                                                                case '6':
                                                                    if (strcmp(&(chars[26]), "1To75") == 0)
                                                                        return Value_SoccerGoalsConcededByTime61To75;
                                                                    break;
                                                                case '7':
                                                                    if (strcmp(&(chars[26]), "6To90") == 0)
                                                                        return Value_SoccerGoalsConcededByTime76To90;
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (strcmp(&(chars[12]), "cored") == 0)
                                                return Value_SoccerGoalsScored;
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'M':
                        if (strcmp(&(chars[7]), "atchesPlayed") == 0)
                            return Value_SoccerMatchesPlayed;
                        break;
                    case 'O':
                        switch ((unsigned char)(chars[7]))
                          {
                            case 'f':
                                if (strcmp(&(chars[8]), "fsides") == 0)
                                    return Value_SoccerOffsides;
                                break;
                            case 'w':
                                if (strcmp(&(chars[8]), "nGoals") == 0)
                                    return Value_SoccerOwnGoals;
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'S':
                        switch ((unsigned char)(chars[7]))
                          {
                            case 'h':
                                if (strncmp(&(chars[8]), "ots", 3) == 0)
                                  {
                                    switch ((unsigned char)(chars[11]))
                                      {
                                        case 'B':
                                            if (strcmp(&(chars[12]), "locked") == 0)
                                                return Value_SoccerShotsBlocked;
                                            break;
                                        case 'O':
                                            switch ((unsigned char)(chars[12]))
                                              {
                                                case 'f':
                                                    if (strcmp(&(chars[13]), "fGoal") == 0)
                                                        return Value_SoccerShotsOffGoal;
                                                    break;
                                                case 'n':
                                                    if (strcmp(&(chars[13]), "Goal") == 0)
                                                        return Value_SoccerShotsOnGoal;
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'u':
                                if (strncmp(&(chars[8]), "bstituted", 9) == 0)
                                  {
                                    switch ((unsigned char)(chars[17]))
                                      {
                                        case 'I':
                                            if (strcmp(&(chars[18]), "n") == 0)
                                                return Value_SoccerSubstitutedIn;
                                            break;
                                        case 'O':
                                            if (strcmp(&(chars[18]), "ut") == 0)
                                                return Value_SoccerSubstitutedOut;
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    default:
                        break;
                  }
              }
            break;
        default:
            break;
      }
    return Value__none;
  }

const char *SportsStatsTypeJSON::stringFromValue(TypeValueKnownValues the_enum)
  {
    switch (the_enum)
      {
        case Value_MLBBaserunningCaughtStealing:
            return "MLBBaserunningCaughtStealing";
        case Value_MLBBaserunningPickoffs:
            return "MLBBaserunningPickoffs";
        case Value_MLBBaserunningStolenBasePerc:
            return "MLBBaserunningStolenBasePerc";
        case Value_MLBBaserunningStolenBases:
            return "MLBBaserunningStolenBases";
        case Value_MLBFieldingAssists:
            return "MLBFieldingAssists";
        case Value_MLBFieldingCompleteGames:
            return "MLBFieldingCompleteGames";
        case Value_MLBFieldingDoublePlays:
            return "MLBFieldingDoublePlays";
        case Value_MLBFieldingErrors:
            return "MLBFieldingErrors";
        case Value_MLBFieldingFieldingPercentage:
            return "MLBFieldingFieldingPercentage";
        case Value_MLBFieldingGamesFinished:
            return "MLBFieldingGamesFinished";
        case Value_MLBFieldingGamesPlayed:
            return "MLBFieldingGamesPlayed";
        case Value_MLBFieldingGamesStarted:
            return "MLBFieldingGamesStarted";
        case Value_MLBFieldingPassedBalls:
            return "MLBFieldingPassedBalls";
        case Value_MLBFieldingPutouts:
            return "MLBFieldingPutouts";
        case Value_MLBFieldingRangeFactor:
            return "MLBFieldingRangeFactor";
        case Value_MLBFieldingTotalChances:
            return "MLBFieldingTotalChances";
        case Value_MLBFieldingTriplePlays:
            return "MLBFieldingTriplePlays";
        case Value_MLBHittingAtBats:
            return "MLBHittingAtBats";
        case Value_MLBHittingAtBatsPerHomeRun:
            return "MLBHittingAtBatsPerHomeRun";
        case Value_MLBHittingAtBatsPerStrikeout:
            return "MLBHittingAtBatsPerStrikeout";
        case Value_MLBHittingAtBatsWithRunnersInScoringPosition:
            return "MLBHittingAtBatsWithRunnersInScoringPosition";
        case Value_MLBHittingBalls:
            return "MLBHittingBalls";
        case Value_MLBHittingBallsInPlay:
            return "MLBHittingBallsInPlay";
        case Value_MLBHittingBattingAverage:
            return "MLBHittingBattingAverage";
        case Value_MLBHittingBattingAverageOnBallsInPlay:
            return "MLBHittingBattingAverageOnBallsInPlay";
        case Value_MLBHittingCompleteGames:
            return "MLBHittingCompleteGames";
        case Value_MLBHittingCycles:
            return "MLBHittingCycles";
        case Value_MLBHittingDirtBallsFaced:
            return "MLBHittingDirtBallsFaced";
        case Value_MLBHittingDoubles:
            return "MLBHittingDoubles";
        case Value_MLBHittingEarnedRunsScored:
            return "MLBHittingEarnedRunsScored";
        case Value_MLBHittingExtraBaseHits:
            return "MLBHittingExtraBaseHits";
        case Value_MLBHittingFieldersChoice:
            return "MLBHittingFieldersChoice";
        case Value_MLBHittingFlyBalls:
            return "MLBHittingFlyBalls";
        case Value_MLBHittingFlyOuts:
            return "MLBHittingFlyOuts";
        case Value_MLBHittingFlyOutsIntoDoublePlays:
            return "MLBHittingFlyOutsIntoDoublePlays";
        case Value_MLBHittingFoulBalls:
            return "MLBHittingFoulBalls";
        case Value_MLBHittingGamesFinished:
            return "MLBHittingGamesFinished";
        case Value_MLBHittingGamesPlayed:
            return "MLBHittingGamesPlayed";
        case Value_MLBHittingGamesStarted:
            return "MLBHittingGamesStarted";
        case Value_MLBHittingGroundBallToFlyBallRatio:
            return "MLBHittingGroundBallToFlyBallRatio";
        case Value_MLBHittingGroundBalls:
            return "MLBHittingGroundBalls";
        case Value_MLBHittingGroundOuts:
            return "MLBHittingGroundOuts";
        case Value_MLBHittingGroundedIntoDoublePlay:
            return "MLBHittingGroundedIntoDoublePlay";
        case Value_MLBHittingHitByPitch:
            return "MLBHittingHitByPitch";
        case Value_MLBHittingHits:
            return "MLBHittingHits";
        case Value_MLBHittingHitsWithRunnersInScoringPosition:
            return "MLBHittingHitsWithRunnersInScoringPosition";
        case Value_MLBHittingHomeRuns:
            return "MLBHittingHomeRuns";
        case Value_MLBHittingIntentionalBalls:
            return "MLBHittingIntentionalBalls";
        case Value_MLBHittingIntentionalWalks:
            return "MLBHittingIntentionalWalks";
        case Value_MLBHittingIsolatedPower:
            return "MLBHittingIsolatedPower";
        case Value_MLBHittingLineDrives:
            return "MLBHittingLineDrives";
        case Value_MLBHittingLineOuts:
            return "MLBHittingLineOuts";
        case Value_MLBHittingLineOutsIntoDoublePlay:
            return "MLBHittingLineOutsIntoDoublePlay";
        case Value_MLBHittingOnBasePlusSluggingPerc:
            return "MLBHittingOnBasePlusSluggingPerc";
        case Value_MLBHittingOnBasePerc:
            return "MLBHittingOnBasePerc";
        case Value_MLBHittingPitchesFaced:
            return "MLBHittingPitchesFaced";
        case Value_MLBHittingPlateAppearances:
            return "MLBHittingPlateAppearances";
        case Value_MLBHittingPopOuts:
            return "MLBHittingPopOuts";
        case Value_MLBHittingPopUps:
            return "MLBHittingPopUps";
        case Value_MLBHittingReachedOnError:
            return "MLBHittingReachedOnError";
        case Value_MLBHittingRunnersLeftOnBase:
            return "MLBHittingRunnersLeftOnBase";
        case Value_MLBHittingRunnersLeftOnBaseTwoOutsRunnersInScoringPosition:
            return "MLBHittingRunnersLeftOnBaseTwoOutsRunnersInScoringPosition";
        case Value_MLBHittingRunsBattedIn:
            return "MLBHittingRunsBattedIn";
        case Value_MLBHittingRunsBattedInWithTwoOuts:
            return "MLBHittingRunsBattedInWithTwoOuts";
        case Value_MLBHittingSacrificeFlys:
            return "MLBHittingSacrificeFlys";
        case Value_MLBHittingSacrificeHits:
            return "MLBHittingSacrificeHits";
        case Value_MLBHittingSecondaryAverage:
            return "MLBHittingSecondaryAverage";
        case Value_MLBHittingSingles:
            return "MLBHittingSingles";
        case Value_MLBHittingSluggingPerc:
            return "MLBHittingSluggingPerc";
        case Value_MLBHittingStrikeoutsLooking:
            return "MLBHittingStrikeoutsLooking";
        case Value_MLBHittingStrikeoutsSwinging:
            return "MLBHittingStrikeoutsSwinging";
        case Value_MLBHittingStrikesLooking:
            return "MLBHittingStrikesLooking";
        case Value_MLBHittingStrikesSwinging:
            return "MLBHittingStrikesSwinging";
        case Value_MLBHittingTotalBases:
            return "MLBHittingTotalBases";
        case Value_MLBHittingTotalRunsScored:
            return "MLBHittingTotalRunsScored";
        case Value_MLBHittingTotalStrikeouts:
            return "MLBHittingTotalStrikeouts";
        case Value_MLBHittingTotalStrikes:
            return "MLBHittingTotalStrikes";
        case Value_MLBHittingTriples:
            return "MLBHittingTriples";
        case Value_MLBHittingUnearnedRunsScored:
            return "MLBHittingUnearnedRunsScored";
        case Value_MLBHittingWalks:
            return "MLBHittingWalks";
        case Value_MLBHittingWalksPerPlaceAppearance:
            return "MLBHittingWalksPerPlaceAppearance";
        case Value_MLBHittingWalksPerStrikeout:
            return "MLBHittingWalksPerStrikeout";
        case Value_MLBPitchingBalks:
            return "MLBPitchingBalks";
        case Value_MLBPitchingBalls:
            return "MLBPitchingBalls";
        case Value_MLBPitchingBattersFaced:
            return "MLBPitchingBattersFaced";
        case Value_MLBPitchingBlownSaves:
            return "MLBPitchingBlownSaves";
        case Value_MLBPitchingCompleteGames:
            return "MLBPitchingCompleteGames";
        case Value_MLBPitchingDirtBallsThrown:
            return "MLBPitchingDirtBallsThrown";
        case Value_MLBPitchingDoublesAllowed:
            return "MLBPitchingDoublesAllowed";
        case Value_MLBPitchingEarnedRunAverage:
            return "MLBPitchingEarnedRunAverage";
        case Value_MLBPitchingEarnedRunsAllowed:
            return "MLBPitchingEarnedRunsAllowed";
        case Value_MLBPitchingErrors:
            return "MLBPitchingErrors";
        case Value_MLBPitchingFieldersChoice:
            return "MLBPitchingFieldersChoice";
        case Value_MLBPitchingFlyOuts:
            return "MLBPitchingFlyOuts";
        case Value_MLBPitchingFlyOutsIntoDoublePlays:
            return "MLBPitchingFlyOutsIntoDoublePlays";
        case Value_MLBPitchingFoulBalls:
            return "MLBPitchingFoulBalls";
        case Value_MLBPitchingGamesFinished:
            return "MLBPitchingGamesFinished";
        case Value_MLBPitchingGamesPlayed:
            return "MLBPitchingGamesPlayed";
        case Value_MLBPitchingGamesStarted:
            return "MLBPitchingGamesStarted";
        case Value_MLBPitchingGroundBallToFlyBallRatio:
            return "MLBPitchingGroundBallToFlyBallRatio";
        case Value_MLBPitchingGroundOuts:
            return "MLBPitchingGroundOuts";
        case Value_MLBPitchingGroundOutsIntoDoublePlays:
            return "MLBPitchingGroundOutsIntoDoublePlays";
        case Value_MLBPitchingHitBatters:
            return "MLBPitchingHitBatters";
        case Value_MLBPitchingHitsAllowed:
            return "MLBPitchingHitsAllowed";
        case Value_MLBPitchingHolds:
            return "MLBPitchingHolds";
        case Value_MLBPitchingHomeRunsAllowed:
            return "MLBPitchingHomeRunsAllowed";
        case Value_MLBPitchingInningsPitchedCompletePartial:
            return "MLBPitchingInningsPitchedCompletePartial";
        case Value_MLBPitchingInningsPitchedTotalOuts:
            return "MLBPitchingInningsPitchedTotalOuts";
        case Value_MLBPitchingIntentionalBalls:
            return "MLBPitchingIntentionalBalls";
        case Value_MLBPitchingIntentionalWalks:
            return "MLBPitchingIntentionalWalks";
        case Value_MLBPitchingLineOuts:
            return "MLBPitchingLineOuts";
        case Value_MLBPitchingLineOutsIntoDoublePlays:
            return "MLBPitchingLineOutsIntoDoublePlays";
        case Value_MLBPitchingLosses:
            return "MLBPitchingLosses";
        case Value_MLBPitchingOpponentsBattingAverage:
            return "MLBPitchingOpponentsBattingAverage";
        case Value_MLBPitchingOpponentRunnersLeftOnBase:
            return "MLBPitchingOpponentRunnersLeftOnBase";
        case Value_MLBPitchingPickoffs:
            return "MLBPitchingPickoffs";
        case Value_MLBPitchingPitchCount:
            return "MLBPitchingPitchCount";
        case Value_MLBPitchingPopOutsForced:
            return "MLBPitchingPopOutsForced";
        case Value_MLBPitchingQualityStarts:
            return "MLBPitchingQualityStarts";
        case Value_MLBPitchingReachedOnError:
            return "MLBPitchingReachedOnError";
        case Value_MLBPitchingRunnersCaughtStealing:
            return "MLBPitchingRunnersCaughtStealing";
        case Value_MLBPitchingSacrificeFlys:
            return "MLBPitchingSacrificeFlys";
        case Value_MLBPitchingSacrificeHits:
            return "MLBPitchingSacrificeHits";
        case Value_MLBPitchingSaveOpportunities:
            return "MLBPitchingSaveOpportunities";
        case Value_MLBPitchingSaves:
            return "MLBPitchingSaves";
        case Value_MLBPitchingShutouts:
            return "MLBPitchingShutouts";
        case Value_MLBPitchingSinglesAllowed:
            return "MLBPitchingSinglesAllowed";
        case Value_MLBPitchingStolenBasesAllowed:
            return "MLBPitchingStolenBasesAllowed";
        case Value_MLBPitchingStrikeoutsLooking:
            return "MLBPitchingStrikeoutsLooking";
        case Value_MLBPitchingStrikeoutsPer9Innings:
            return "MLBPitchingStrikeoutsPer9Innings";
        case Value_MLBPitchingStrikeoutsPerWalk:
            return "MLBPitchingStrikeoutsPerWalk";
        case Value_MLBPitchingStrikeoutsSwinging:
            return "MLBPitchingStrikeoutsSwinging";
        case Value_MLBPitchingStrikesLooking:
            return "MLBPitchingStrikesLooking";
        case Value_MLBPitchingStrikesSwinging:
            return "MLBPitchingStrikesSwinging";
        case Value_MLBPitchingTotalBasesAllowed:
            return "MLBPitchingTotalBasesAllowed";
        case Value_MLBPitchingTotalRunsAllowed:
            return "MLBPitchingTotalRunsAllowed";
        case Value_MLBPitchingTotalStrikeouts:
            return "MLBPitchingTotalStrikeouts";
        case Value_MLBPitchingTotalStrikes:
            return "MLBPitchingTotalStrikes";
        case Value_MLBPitchingTriplesAllowed:
            return "MLBPitchingTriplesAllowed";
        case Value_MLBPitchingUnearnedRunsAllowed:
            return "MLBPitchingUnearnedRunsAllowed";
        case Value_MLBPitchingWalks:
            return "MLBPitchingWalks";
        case Value_MLBPitchingWalksPlusHitsPerInningPitched:
            return "MLBPitchingWalksPlusHitsPerInningPitched";
        case Value_MLBPitchingWildPitches:
            return "MLBPitchingWildPitches";
        case Value_MLBPitchingWins:
            return "MLBPitchingWins";
        case Value_NHLAssists:
            return "NHLAssists";
        case Value_NHLAssistsPerGame:
            return "NHLAssistsPerGame";
        case Value_NHLAverageTimeOnIce:
            return "NHLAverageTimeOnIce";
        case Value_NHLBlockedAttempts:
            return "NHLBlockedAttempts";
        case Value_NHLBlockedAttemptsPerGame:
            return "NHLBlockedAttemptsPerGame";
        case Value_NHLBlockedShots:
            return "NHLBlockedShots";
        case Value_NHLBlockedShotsPerGame:
            return "NHLBlockedShotsPerGame";
        case Value_NHLEvenStrengthAssists:
            return "NHLEvenStrengthAssists";
        case Value_NHLEvenStrengthFaceoffWinPerc:
            return "NHLEvenStrengthFaceoffWinPerc";
        case Value_NHLEvenStrengthFaceoffs:
            return "NHLEvenStrengthFaceoffs";
        case Value_NHLEvenStrengthFaceoffsLost:
            return "NHLEvenStrengthFaceoffsLost";
        case Value_NHLEvenStrengthFaceoffsWon:
            return "NHLEvenStrengthFaceoffsWon";
        case Value_NHLEvenStrengthGoals:
            return "NHLEvenStrengthGoals";
        case Value_NHLEvenStrengthMissedShots:
            return "NHLEvenStrengthMissedShots";
        case Value_NHLEvenStrengthShotsOnGoal:
            return "NHLEvenStrengthShotsOnGoal";
        case Value_NHLEvenStrengthTimeOnIce:
            return "NHLEvenStrengthTimeOnIce";
        case Value_NHLFaceoffWinPerc:
            return "NHLFaceoffWinPerc";
        case Value_NHLFaceoffs:
            return "NHLFaceoffs";
        case Value_NHLFaceoffsWon:
            return "NHLFaceoffsWon";
        case Value_NHLFaceoffsLost:
            return "NHLFaceoffsLost";
        case Value_NHLGameWinningGoalFlag:
            return "NHLGameWinningGoalFlag";
        case Value_NHLGameWinningGoals:
            return "NHLGameWinningGoals";
        case Value_NHLGamesPlayed:
            return "NHLGamesPlayed";
        case Value_NHLGiveaways:
            return "NHLGiveaways";
        case Value_NHLGiveawaysPerGame:
            return "NHLGiveawaysPerGame";
        case Value_NHLGoals:
            return "NHLGoals";
        case Value_NHLGoalsPerGame:
            return "NHLGoalsPerGame";
        case Value_NHLHits:
            return "NHLHits";
        case Value_NHLHitsPerGame:
            return "NHLHitsPerGame";
        case Value_NHLMissedShots:
            return "NHLMissedShots";
        case Value_NHLMissedShotsPerGame:
            return "NHLMissedShotsPerGame";
        case Value_NHLPenalties:
            return "NHLPenalties";
        case Value_NHLPenaltiesPerGame:
            return "NHLPenaltiesPerGame";
        case Value_NHLPenaltyGoals:
            return "NHLPenaltyGoals";
        case Value_NHLPenaltyMinutes:
            return "NHLPenaltyMinutes";
        case Value_NHLPenaltyMinutesPerGame:
            return "NHLPenaltyMinutesPerGame";
        case Value_NHLPenaltyMissedShots:
            return "NHLPenaltyMissedShots";
        case Value_NHLPenaltyShotsOnGoal:
            return "NHLPenaltyShotsOnGoal";
        case Value_NHLPlusMinus:
            return "NHLPlusMinus";
        case Value_NHLPoints:
            return "NHLPoints";
        case Value_NHLPointsPerGame:
            return "NHLPointsPerGame";
        case Value_NHLPowerPlayAssists:
            return "NHLPowerPlayAssists";
        case Value_NHLPowerPlayFaceoffWinPerc:
            return "NHLPowerPlayFaceoffWinPerc";
        case Value_NHLPowerPlayFaceoffs:
            return "NHLPowerPlayFaceoffs";
        case Value_NHLPowerPlayFaceoffsLost:
            return "NHLPowerPlayFaceoffsLost";
        case Value_NHLPowerPlayFaceoffsWon:
            return "NHLPowerPlayFaceoffsWon";
        case Value_NHLPowerPlayGoals:
            return "NHLPowerPlayGoals";
        case Value_NHLPowerPlayMissedShots:
            return "NHLPowerPlayMissedShots";
        case Value_NHLPowerPlayOpportunities:
            return "NHLPowerPlayOpportunities";
        case Value_NHLPowerPlayPoints:
            return "NHLPowerPlayPoints";
        case Value_NHLPowerPlayShotsOnGoal:
            return "NHLPowerPlayShotsOnGoal";
        case Value_NHLPowerPlayTimeOnIce:
            return "NHLPowerPlayTimeOnIce";
        case Value_NHLScratches:
            return "NHLScratches";
        case Value_NHLShifts:
            return "NHLShifts";
        case Value_NHLShiftsPerGame:
            return "NHLShiftsPerGame";
        case Value_NHLShootingPerc:
            return "NHLShootingPerc";
        case Value_NHLShootoutGoals:
            return "NHLShootoutGoals";
        case Value_NHLShootoutMissedShots:
            return "NHLShootoutMissedShots";
        case Value_NHLShootoutShotsOnGoal:
            return "NHLShootoutShotsOnGoal";
        case Value_NHLShortHandedAssists:
            return "NHLShortHandedAssists";
        case Value_NHLShortHandedFaceoffWinPerc:
            return "NHLShortHandedFaceoffWinPerc";
        case Value_NHLShortHandedFaceoffs:
            return "NHLShortHandedFaceoffs";
        case Value_NHLShortHandedFaceoffsLost:
            return "NHLShortHandedFaceoffsLost";
        case Value_NHLShortHandedFaceoffsWon:
            return "NHLShortHandedFaceoffsWon";
        case Value_NHLShortHandedGoals:
            return "NHLShortHandedGoals";
        case Value_NHLShortHandedMissedShots:
            return "NHLShortHandedMissedShots";
        case Value_NHLShortHandedPoints:
            return "NHLShortHandedPoints";
        case Value_NHLShortHandedShotsOnGoal:
            return "NHLShortHandedShotsOnGoal";
        case Value_NHLShortHandedTimeOnIce:
            return "NHLShortHandedTimeOnIce";
        case Value_NHLShotsOnGoal:
            return "NHLShotsOnGoal";
        case Value_NHLShotsOnGoalPerGame:
            return "NHLShotsOnGoalPerGame";
        case Value_NHLTakeaways:
            return "NHLTakeaways";
        case Value_NHLTakeawaysPerGame:
            return "NHLTakeawaysPerGame";
        case Value_NHLTeamPenalties:
            return "NHLTeamPenalties";
        case Value_NHLTeamPenaltiesPerGame:
            return "NHLTeamPenaltiesPerGame";
        case Value_NHLTeamPenaltyMinutes:
            return "NHLTeamPenaltyMinutes";
        case Value_NHLTeamPenaltyMinutesPerGame:
            return "NHLTeamPenaltyMinutesPerGame";
        case Value_NHLTotalTimeOnIce:
            return "NHLTotalTimeOnIce";
        case Value_NHLTotalTimeOnIcePerGame:
            return "NHLTotalTimeOnIcePerGame";
        case Value_NHLGoaltendingEmptyNetEvenStrengthGoalsAgainst:
            return "NHLGoaltendingEmptyNetEvenStrengthGoalsAgainst";
        case Value_NHLGoaltendingEmptyNetGoalsAgainst:
            return "NHLGoaltendingEmptyNetGoalsAgainst";
        case Value_NHLGoaltendingEmptyNetPowerPlayGoalsAgainst:
            return "NHLGoaltendingEmptyNetPowerPlayGoalsAgainst";
        case Value_NHLGoaltendingEmptyNetShortHandedGoalsAgainst:
            return "NHLGoaltendingEmptyNetShortHandedGoalsAgainst";
        case Value_NHLGoaltendingEmptyNetShotsAgainst:
            return "NHLGoaltendingEmptyNetShotsAgainst";
        case Value_NHLGoaltendingEvenStrengthGoalsAgainst:
            return "NHLGoaltendingEvenStrengthGoalsAgainst";
        case Value_NHLGoaltendingEvenStrengthSavePerc:
            return "NHLGoaltendingEvenStrengthSavePerc";
        case Value_NHLGoaltendingEvenStrengthSaves:
            return "NHLGoaltendingEvenStrengthSaves";
        case Value_NHLGoaltendingEvenStrengthShotsAgainst:
            return "NHLGoaltendingEvenStrengthShotsAgainst";
        case Value_NHLGoaltendingGoalsAgainst:
            return "NHLGoaltendingGoalsAgainst";
        case Value_NHLGoaltendingGoalsAgainstAverage:
            return "NHLGoaltendingGoalsAgainstAverage";
        case Value_NHLGoaltendingGoalsAgainstPerGame:
            return "NHLGoaltendingGoalsAgainstPerGame";
        case Value_NHLGoaltendingLosses:
            return "NHLGoaltendingLosses";
        case Value_NHLGoaltendingOutcome:
            return "NHLGoaltendingOutcome";
        case Value_NHLGoaltendingOvertimeLosses:
            return "NHLGoaltendingOvertimeLosses";
        case Value_NHLGoaltendingPenaltyGoalsAgainst:
            return "NHLGoaltendingPenaltyGoalsAgainst";
        case Value_NHLGoaltendingPenaltySavePerc:
            return "NHLGoaltendingPenaltySavePerc";
        case Value_NHLGoaltendingPenaltySaves:
            return "NHLGoaltendingPenaltySaves";
        case Value_NHLGoaltendingPenaltyShotsAgainst:
            return "NHLGoaltendingPenaltyShotsAgainst";
        case Value_NHLGoaltendingPowerPlayGoalsAgainst:
            return "NHLGoaltendingPowerPlayGoalsAgainst";
        case Value_NHLGoaltendingPowerPlaySavePerc:
            return "NHLGoaltendingPowerPlaySavePerc";
        case Value_NHLGoaltendingPowerPlaySaves:
            return "NHLGoaltendingPowerPlaySaves";
        case Value_NHLGoaltendingPowerPlayShotsAgainst:
            return "NHLGoaltendingPowerPlayShotsAgainst";
        case Value_NHLGoaltendingSavePerc:
            return "NHLGoaltendingSavePerc";
        case Value_NHLGoaltendingSaves:
            return "NHLGoaltendingSaves";
        case Value_NHLGoaltendingShootoutGoalsAgainst:
            return "NHLGoaltendingShootoutGoalsAgainst";
        case Value_NHLGoaltendingShootoutSavePerc:
            return "NHLGoaltendingShootoutSavePerc";
        case Value_NHLGoaltendingShootoutSaves:
            return "NHLGoaltendingShootoutSaves";
        case Value_NHLGoaltendingShootoutShotsAgainst:
            return "NHLGoaltendingShootoutShotsAgainst";
        case Value_NHLGoaltendingShortHandedGoalsAgainst:
            return "NHLGoaltendingShortHandedGoalsAgainst";
        case Value_NHLGoaltendingShortHandedSavePerc:
            return "NHLGoaltendingShortHandedSavePerc";
        case Value_NHLGoaltendingShortHandedSaves:
            return "NHLGoaltendingShortHandedSaves";
        case Value_NHLGoaltendingShortHandedShotsAgainst:
            return "NHLGoaltendingShortHandedShotsAgainst";
        case Value_NHLGoaltendingShotsAgainst:
            return "NHLGoaltendingShotsAgainst";
        case Value_NHLGoaltendingShotsAgainstPerGame:
            return "NHLGoaltendingShotsAgainstPerGame";
        case Value_NHLGoaltendingShutoutFlag:
            return "NHLGoaltendingShutoutFlag";
        case Value_NHLGoaltendingShutouts:
            return "NHLGoaltendingShutouts";
        case Value_NHLGoaltendingTotalGoalsAgainst:
            return "NHLGoaltendingTotalGoalsAgainst";
        case Value_NHLGoaltendingTotalShotsAgainst:
            return "NHLGoaltendingTotalShotsAgainst";
        case Value_NHLGoaltendingWins:
            return "NHLGoaltendingWins";
        case Value_NFL3rdDownConversionAttempts:
            return "NFL3rdDownConversionAttempts";
        case Value_NFL3rdDownConversions:
            return "NFL3rdDownConversions";
        case Value_NFL3rdDownConversionPerc:
            return "NFL3rdDownConversionPerc";
        case Value_NFL3rdDownConversionsViaPass:
            return "NFL3rdDownConversionsViaPass";
        case Value_NFL3rdDownConversionsViaPenalty:
            return "NFL3rdDownConversionsViaPenalty";
        case Value_NFL3rdDownConversionsViaRush:
            return "NFL3rdDownConversionsViaRush";
        case Value_NFL4thDownConversionAttempts:
            return "NFL4thDownConversionAttempts";
        case Value_NFL4thDownConversions:
            return "NFL4thDownConversions";
        case Value_NFL4thDownConversionPerc:
            return "NFL4thDownConversionPerc";
        case Value_NFL4thDownConversionsViaPass:
            return "NFL4thDownConversionsViaPass";
        case Value_NFL4thDownConversionsViaPenalty:
            return "NFL4thDownConversionsViaPenalty";
        case Value_NFL4thDownConversionsViaRush:
            return "NFL4thDownConversionsViaRush";
        case Value_NFLGamesPlayed:
            return "NFLGamesPlayed";
        case Value_NFLGamesStarted:
            return "NFLGamesStarted";
        case Value_NFLGoalEfficiencyAttempts:
            return "NFLGoalEfficiencyAttempts";
        case Value_NFLGoalEfficiencyPerc:
            return "NFLGoalEfficiencyPerc";
        case Value_NFLGoalEfficiencyTouchdowns:
            return "NFLGoalEfficiencyTouchdowns";
        case Value_NFLPassing10PlusYards:
            return "NFLPassing10PlusYards";
        case Value_NFLPassing20PlusYards:
            return "NFLPassing20PlusYards";
        case Value_NFLPassing30PlusYards:
            return "NFLPassing30PlusYards";
        case Value_NFLPassing40PlusYards:
            return "NFLPassing40PlusYards";
        case Value_NFLPassing50PlusYards:
            return "NFLPassing50PlusYards";
        case Value_NFLPassingAttempts:
            return "NFLPassingAttempts";
        case Value_NFLPassingAverageYardsPerCompletion:
            return "NFLPassingAverageYardsPerCompletion";
        case Value_NFLPassingAverageYardsPerAttempt:
            return "NFLPassingAverageYardsPerAttempt";
        case Value_NFLPassingCompletionPerc:
            return "NFLPassingCompletionPerc";
        case Value_NFLPassingCompletions:
            return "NFLPassingCompletions";
        case Value_NFLPassing1stDowns:
            return "NFLPassing1stDowns";
        case Value_NFLPassingGrossYards:
            return "NFLPassingGrossYards";
        case Value_NFLPassingInterceptionPerc:
            return "NFLPassingInterceptionPerc";
        case Value_NFLPassingInterceptions:
            return "NFLPassingInterceptions";
        case Value_NFLPassingInterceptionsReturnedForTouchdown:
            return "NFLPassingInterceptionsReturnedForTouchdown";
        case Value_NFLPassingLongestPass:
            return "NFLPassingLongestPass";
        case Value_NFLPassingNetYards:
            return "NFLPassingNetYards";
        case Value_NFLPassingRating:
            return "NFLPassingRating";
        case Value_NFLPassingRedZoneAttempts:
            return "NFLPassingRedZoneAttempts";
        case Value_NFLPassingSacked:
            return "NFLPassingSacked";
        case Value_NFLPassingSackedYardsLost:
            return "NFLPassingSackedYardsLost";
        case Value_NFLPassingTackledForSafety:
            return "NFLPassingTackledForSafety";
        case Value_NFLPassingTotalYards:
            return "NFLPassingTotalYards";
        case Value_NFLPassingTouchdownPerc:
            return "NFLPassingTouchdownPerc";
        case Value_NFLPassingTouchdowns:
            return "NFLPassingTouchdowns";
        case Value_NFLReceiving10PlusYards:
            return "NFLReceiving10PlusYards";
        case Value_NFLReceiving20PlusYards:
            return "NFLReceiving20PlusYards";
        case Value_NFLReceiving30PlusYards:
            return "NFLReceiving30PlusYards";
        case Value_NFLReceiving40PlusYards:
            return "NFLReceiving40PlusYards";
        case Value_NFLReceiving50PlusYards:
            return "NFLReceiving50PlusYards";
        case Value_NFLReceivingAverageReception:
            return "NFLReceivingAverageReception";
        case Value_NFLReceiving1stDowns:
            return "NFLReceiving1stDowns";
        case Value_NFLReceivingFumbledOnReception:
            return "NFLReceivingFumbledOnReception";
        case Value_NFLReceivingLongestReception:
            return "NFLReceivingLongestReception";
        case Value_NFLReceivingReceptions:
            return "NFLReceivingReceptions";
        case Value_NFLReceivingRedZoneTargets:
            return "NFLReceivingRedZoneTargets";
        case Value_NFLReceivingTargets:
            return "NFLReceivingTargets";
        case Value_NFLReceivingTotalYards:
            return "NFLReceivingTotalYards";
        case Value_NFLReceivingTouchdowns:
            return "NFLReceivingTouchdowns";
        case Value_NFLReceivingYardsAfterCompletion:
            return "NFLReceivingYardsAfterCompletion";
        case Value_NFLRedZoneEfficiencyAttempts:
            return "NFLRedZoneEfficiencyAttempts";
        case Value_NFLRedZoneEfficiencyConversions:
            return "NFLRedZoneEfficiencyConversions";
        case Value_NFLRedZoneEfficiencyPerc:
            return "NFLRedZoneEfficiencyPerc";
        case Value_NFLRushing10PlusYards:
            return "NFLRushing10PlusYards";
        case Value_NFLRushing20PlusYards:
            return "NFLRushing20PlusYards";
        case Value_NFLRushing30PlusYards:
            return "NFLRushing30PlusYards";
        case Value_NFLRushing40PlusYards:
            return "NFLRushing40PlusYards";
        case Value_NFLRushing50PlusYards:
            return "NFLRushing50PlusYards";
        case Value_NFLRushingAttempts:
            return "NFLRushingAttempts";
        case Value_NFLRushingAverageRush:
            return "NFLRushingAverageRush";
        case Value_NFLRushing1stDownPerc:
            return "NFLRushing1stDownPerc";
        case Value_NFLRushing1stDowns:
            return "NFLRushing1stDowns";
        case Value_NFLRushingFumbledOnRush:
            return "NFLRushingFumbledOnRush";
        case Value_NFLRushingLongestRush:
            return "NFLRushingLongestRush";
        case Value_NFLRushingRedZoneAttempts:
            return "NFLRushingRedZoneAttempts";
        case Value_NFLRushingTackledForSafety:
            return "NFLRushingTackledForSafety";
        case Value_NFLRushingTotalYards:
            return "NFLRushingTotalYards";
        case Value_NFLRushingTouchdowns:
            return "NFLRushingTouchdowns";
        case Value_NFL1stDowns:
            return "NFL1stDowns";
        case Value_NFL2PointConversionsAttempted:
            return "NFL2PointConversionsAttempted";
        case Value_NFL2PointConversionsFailed:
            return "NFL2PointConversionsFailed";
        case Value_NFL2PointConversionsMade:
            return "NFL2PointConversionsMade";
        case Value_NFL2PointConversionsPassing:
            return "NFL2PointConversionsPassing";
        case Value_NFL2PointConversionsReceiving:
            return "NFL2PointConversionsReceiving";
        case Value_NFL2PointConversionsRushing:
            return "NFL2PointConversionsRushing";
        case Value_NFL1PointSafety:
            return "NFL1PointSafety";
        case Value_NFLBlockedKicks:
            return "NFLBlockedKicks";
        case Value_NFLConversionAttempts:
            return "NFLConversionAttempts";
        case Value_NFLConversionsCompleted:
            return "NFLConversionsCompleted";
        case Value_NFLConversionsFailed:
            return "NFLConversionsFailed";
        case Value_NFLForcedFumbles:
            return "NFLForcedFumbles";
        case Value_NFLFumblesRecovered:
            return "NFLFumblesRecovered";
        case Value_NFLFumblesRecoveredForTouchdowns:
            return "NFLFumblesRecoveredForTouchdowns";
        case Value_NFLInterceptions:
            return "NFLInterceptions";
        case Value_NFLInterceptionsLongestInterception:
            return "NFLInterceptionsLongestInterception";
        case Value_NFLInterceptionsTouchdowns:
            return "NFLInterceptionsTouchdowns";
        case Value_NFLInterceptionsYards:
            return "NFLInterceptionsYards";
        case Value_NFLMiscAssistedTackles:
            return "NFLMiscAssistedTackles";
        case Value_NFLMiscCombinedTackles:
            return "NFLMiscCombinedTackles";
        case Value_NFLMiscForcedFumbles:
            return "NFLMiscForcedFumbles";
        case Value_NFLMiscFumblesRecovered:
            return "NFLMiscFumblesRecovered";
        case Value_NFLMiscTackles:
            return "NFLMiscTackles";
        case Value_NFLPassesDefended:
            return "NFLPassesDefended";
        case Value_NFLQuarterbackHits:
            return "NFLQuarterbackHits";
        case Value_NFLSacks:
            return "NFLSacks";
        case Value_NFLSackYards:
            return "NFLSackYards";
        case Value_NFLSafeties:
            return "NFLSafeties";
        case Value_NFLSpecialTeamsAssistedTackles:
            return "NFLSpecialTeamsAssistedTackles";
        case Value_NFLSpecialTeamsCombinedTackles:
            return "NFLSpecialTeamsCombinedTackles";
        case Value_NFLSpecialTeamsForcedFumbles:
            return "NFLSpecialTeamsForcedFumbles";
        case Value_NFLSpecialTeamsFumblesRecovered:
            return "NFLSpecialTeamsFumblesRecovered";
        case Value_NFLSpecialTeamsTotalTackles:
            return "NFLSpecialTeamsTotalTackles";
        case Value_NFLTacklesAssisted:
            return "NFLTacklesAssisted";
        case Value_NFLTacklesCombined:
            return "NFLTacklesCombined";
        case Value_NFLTacklesForLoss:
            return "NFLTacklesForLoss";
        case Value_NFLTackles:
            return "NFLTackles";
        case Value_NFLBlockedFieldGoalReturns10PlusYards:
            return "NFLBlockedFieldGoalReturns10PlusYards";
        case Value_NFLBlockedFieldGoalReturns20PlusYards:
            return "NFLBlockedFieldGoalReturns20PlusYards";
        case Value_NFLBlockedFieldGoalReturns30PlusYards:
            return "NFLBlockedFieldGoalReturns30PlusYards";
        case Value_NFLBlockedFieldGoalReturns40PlusYards:
            return "NFLBlockedFieldGoalReturns40PlusYards";
        case Value_NFLBlockedFieldGoalReturns50PlusYards:
            return "NFLBlockedFieldGoalReturns50PlusYards";
        case Value_NFLBlockedFieldGoalReturnsAverageReturn:
            return "NFLBlockedFieldGoalReturnsAverageReturn";
        case Value_NFLBlockedFieldGoalReturnsLongestReturn:
            return "NFLBlockedFieldGoalReturnsLongestReturn";
        case Value_NFLBlockedFieldGoalReturns:
            return "NFLBlockedFieldGoalReturns";
        case Value_NFLBlockedFieldGoalReturnsTotalYards:
            return "NFLBlockedFieldGoalReturnsTotalYards";
        case Value_NFLBlockedFieldGoalReturnsTouchdowns:
            return "NFLBlockedFieldGoalReturnsTouchdowns";
        case Value_NFLBlockedPuntReturn10PlusYards:
            return "NFLBlockedPuntReturn10PlusYards";
        case Value_NFLBlockedPuntReturn20PlusYards:
            return "NFLBlockedPuntReturn20PlusYards";
        case Value_NFLBlockedPuntReturn30PlusYards:
            return "NFLBlockedPuntReturn30PlusYards";
        case Value_NFLBlockedPuntReturn40PlusYards:
            return "NFLBlockedPuntReturn40PlusYards";
        case Value_NFLBlockedPuntReturn50PlusYards:
            return "NFLBlockedPuntReturn50PlusYards";
        case Value_NFLBlockedPuntReturnsAverageReturn:
            return "NFLBlockedPuntReturnsAverageReturn";
        case Value_NFLBlockedPuntReturnsLongestReturn:
            return "NFLBlockedPuntReturnsLongestReturn";
        case Value_NFLBlockedPuntReturns:
            return "NFLBlockedPuntReturns";
        case Value_NFLBlockedPuntReturnsTotalYards:
            return "NFLBlockedPuntReturnsTotalYards";
        case Value_NFLBlockedPuntReturnsTouchdowns:
            return "NFLBlockedPuntReturnsTouchdowns";
        case Value_NFLExtraPointsAttempted:
            return "NFLExtraPointsAttempted";
        case Value_NFLExtraPointsAttemptedKicking:
            return "NFLExtraPointsAttemptedKicking";
        case Value_NFLExtraPointsAttempted2PointConversion:
            return "NFLExtraPointsAttempted2PointConversion";
        case Value_NFLExtraPointsBlocked:
            return "NFLExtraPointsBlocked";
        case Value_NFLExtraPointsMade:
            return "NFLExtraPointsMade";
        case Value_NFLExtraPointsMadeKicking:
            return "NFLExtraPointsMadeKicking";
        case Value_NFLExtraPointsMade2PointConversion:
            return "NFLExtraPointsMade2PointConversion";
        case Value_NFLExtraPointsPerc:
            return "NFLExtraPointsPerc";
        case Value_NFLFieldGoalReturns10PlusYards:
            return "NFLFieldGoalReturns10PlusYards";
        case Value_NFLFieldGoalReturns20PlusYards:
            return "NFLFieldGoalReturns20PlusYards";
        case Value_NFLFieldGoalReturns30PlusYards:
            return "NFLFieldGoalReturns30PlusYards";
        case Value_NFLFieldGoalReturns40PlusYards:
            return "NFLFieldGoalReturns40PlusYards";
        case Value_NFLFieldGoalReturns50PlusYards:
            return "NFLFieldGoalReturns50PlusYards";
        case Value_NFLFieldGoalReturnsAverageReturn:
            return "NFLFieldGoalReturnsAverageReturn";
        case Value_NFLFieldGoalReturnsLongestReturn:
            return "NFLFieldGoalReturnsLongestReturn";
        case Value_NFLFieldGoalReturns:
            return "NFLFieldGoalReturns";
        case Value_NFLFieldGoalReturnsTotalYards:
            return "NFLFieldGoalReturnsTotalYards";
        case Value_NFLFieldGoalReturnsTouchdowns:
            return "NFLFieldGoalReturnsTouchdowns";
        case Value_NFLFieldGoalsAttempted:
            return "NFLFieldGoalsAttempted";
        case Value_NFLFieldGoalsAttempted1to19Yards:
            return "NFLFieldGoalsAttempted1to19Yards";
        case Value_NFLFieldGoalsAttempted20to29Yards:
            return "NFLFieldGoalsAttempted20to29Yards";
        case Value_NFLFieldGoalsAttempted30to39Yards:
            return "NFLFieldGoalsAttempted30to39Yards";
        case Value_NFLFieldGoalsAttempted40to49Yards:
            return "NFLFieldGoalsAttempted40to49Yards";
        case Value_NFLFieldGoalsAttempted50PlusYards:
            return "NFLFieldGoalsAttempted50PlusYards";
        case Value_NFLFieldGoalsBlocked:
            return "NFLFieldGoalsBlocked";
        case Value_NFLFieldGoalsLongestMade:
            return "NFLFieldGoalsLongestMade";
        case Value_NFLFieldGoalsMade:
            return "NFLFieldGoalsMade";
        case Value_NFLFieldGoalsMade1to19Yards:
            return "NFLFieldGoalsMade1to19Yards";
        case Value_NFLFieldGoalsMade20to29Yards:
            return "NFLFieldGoalsMade20to29Yards";
        case Value_NFLFieldGoalsMade30to39Yards:
            return "NFLFieldGoalsMade30to39Yards";
        case Value_NFLFieldGoalsMade40to49Yards:
            return "NFLFieldGoalsMade40to49Yards";
        case Value_NFLFieldGoalsMade50PlusYards:
            return "NFLFieldGoalsMade50PlusYards";
        case Value_NFLFieldGoalsPerc:
            return "NFLFieldGoalsPerc";
        case Value_NFLKickoffReturns10PlusYards:
            return "NFLKickoffReturns10PlusYards";
        case Value_NFLKickoffReturns20PlusYards:
            return "NFLKickoffReturns20PlusYards";
        case Value_NFLKickoffReturns30PlusYards:
            return "NFLKickoffReturns30PlusYards";
        case Value_NFLKickoffReturns40PlusYards:
            return "NFLKickoffReturns40PlusYards";
        case Value_NFLKickoffReturns50PlusYards:
            return "NFLKickoffReturns50PlusYards";
        case Value_NFLKickoffReturnsAverageRun:
            return "NFLKickoffReturnsAverageRun";
        case Value_NFLKickoffReturnsFairCatches:
            return "NFLKickoffReturnsFairCatches";
        case Value_NFLKickoffReturnsLongestKickReturn:
            return "NFLKickoffReturnsLongestKickReturn";
        case Value_NFLKickoffReturnsReturns:
            return "NFLKickoffReturnsReturns";
        case Value_NFLKickoffReturnsTouchdowns:
            return "NFLKickoffReturnsTouchdowns";
        case Value_NFLKickoffReturnsYards:
            return "NFLKickoffReturnsYards";
        case Value_NFLKickoffsAverageGrossYards:
            return "NFLKickoffsAverageGrossYards";
        case Value_NFLKickoffsAverageNetYards:
            return "NFLKickoffsAverageNetYards";
        case Value_NFLKickoffsAverageReturnYards:
            return "NFLKickoffsAverageReturnYards";
        case Value_NFLKickoffsEndZoneKicks:
            return "NFLKickoffsEndZoneKicks";
        case Value_NFLKickoffsGrossYards:
            return "NFLKickoffsGrossYards";
        case Value_NFLKickoffsInsideOpponents20YardLine:
            return "NFLKickoffsInsideOpponents20YardLine";
        case Value_NFLKickoffsKicks:
            return "NFLKickoffsKicks";
        case Value_NFLKickoffsLongestKick:
            return "NFLKickoffsLongestKick";
        case Value_NFLKickoffsNetYards:
            return "NFLKickoffsNetYards";
        case Value_NFLKickoffsInsideOpponents20YardLinePerc:
            return "NFLKickoffsInsideOpponents20YardLinePerc";
        case Value_NFLKickoffsTouchbacksPerc:
            return "NFLKickoffsTouchbacksPerc";
        case Value_NFLKickoffsReturned:
            return "NFLKickoffsReturned";
        case Value_NFLKickoffsTotalReturnYards:
            return "NFLKickoffsTotalReturnYards";
        case Value_NFLKickoffsTouchbacks:
            return "NFLKickoffsTouchbacks";
        case Value_NFLPuntReturns10PlusYards:
            return "NFLPuntReturns10PlusYards";
        case Value_NFLPuntReturns20PlusYards:
            return "NFLPuntReturns20PlusYards";
        case Value_NFLPuntReturns30PlusYards:
            return "NFLPuntReturns30PlusYards";
        case Value_NFLPuntReturns40PlusYards:
            return "NFLPuntReturns40PlusYards";
        case Value_NFLPuntReturns50PlusYards:
            return "NFLPuntReturns50PlusYards";
        case Value_NFLPuntReturnsAverageRun:
            return "NFLPuntReturnsAverageRun";
        case Value_NFLPuntReturnsFairCatches:
            return "NFLPuntReturnsFairCatches";
        case Value_NFLPuntReturnsLongestKickReturn:
            return "NFLPuntReturnsLongestKickReturn";
        case Value_NFLPuntReturns:
            return "NFLPuntReturns";
        case Value_NFLPuntReturnsTouchdowns:
            return "NFLPuntReturnsTouchdowns";
        case Value_NFLPuntReturnsYards:
            return "NFLPuntReturnsYards";
        case Value_NFLPuntingAverageGrossYards:
            return "NFLPuntingAverageGrossYards";
        case Value_NFLPuntingAverageNetYards:
            return "NFLPuntingAverageNetYards";
        case Value_NFLPuntingAverageReturnYards:
            return "NFLPuntingAverageReturnYards";
        case Value_NFLPuntingBlocked:
            return "NFLPuntingBlocked";
        case Value_NFLPuntingGrossYards:
            return "NFLPuntingGrossYards";
        case Value_NFLPuntingInsideOpponents20YardLine:
            return "NFLPuntingInsideOpponents20YardLine";
        case Value_NFLPuntingLongestPunt:
            return "NFLPuntingLongestPunt";
        case Value_NFLPuntingNetYards:
            return "NFLPuntingNetYards";
        case Value_NFLPuntingInsideOpponents20YardLinePerc:
            return "NFLPuntingInsideOpponents20YardLinePerc";
        case Value_NFLPuntingTouchbacksPerc:
            return "NFLPuntingTouchbacksPerc";
        case Value_NFLPuntingPunts:
            return "NFLPuntingPunts";
        case Value_NFLPuntingReturnYards:
            return "NFLPuntingReturnYards";
        case Value_NFLPuntingReturned:
            return "NFLPuntingReturned";
        case Value_NFLPuntingTouchbacks:
            return "NFLPuntingTouchbacks";
        case Value_NFLFumblesForced:
            return "NFLFumblesForced";
        case Value_NFLFumbles:
            return "NFLFumbles";
        case Value_NFLFumblesLost:
            return "NFLFumblesLost";
        case Value_NFLFumblesOpponentRecovery:
            return "NFLFumblesOpponentRecovery";
        case Value_NFLFumblesOpponentTouchdownsFromRecovery:
            return "NFLFumblesOpponentTouchdownsFromRecovery";
        case Value_NFLFumblesOutOfBounds:
            return "NFLFumblesOutOfBounds";
        case Value_NFLFumblesOwnRecovery:
            return "NFLFumblesOwnRecovery";
        case Value_NFLFumblesOwnTouchdownsFromRecovery:
            return "NFLFumblesOwnTouchdownsFromRecovery";
        case Value_NFLFumblesYardsFromOpponentRecovery:
            return "NFLFumblesYardsFromOpponentRecovery";
        case Value_NFLFumblesYardsFromOwnRecovery:
            return "NFLFumblesYardsFromOwnRecovery";
        case Value_NFLPenalties1stDowns:
            return "NFLPenalties1stDowns";
        case Value_NFLPenalties:
            return "NFLPenalties";
        case Value_NFLPenaltiesYards:
            return "NFLPenaltiesYards";
        case Value_NCAAFB3rdDownConversionAttempts:
            return "NCAAFB3rdDownConversionAttempts";
        case Value_NCAAFB3rdDownConversions:
            return "NCAAFB3rdDownConversions";
        case Value_NCAAFB3rdDownConversionPerc:
            return "NCAAFB3rdDownConversionPerc";
        case Value_NCAAFB3rdDownConversionsViaPass:
            return "NCAAFB3rdDownConversionsViaPass";
        case Value_NCAAFB3rdDownConversionsViaPenalty:
            return "NCAAFB3rdDownConversionsViaPenalty";
        case Value_NCAAFB3rdDownConversionsViaRush:
            return "NCAAFB3rdDownConversionsViaRush";
        case Value_NCAAFB4thDownConversionAttempts:
            return "NCAAFB4thDownConversionAttempts";
        case Value_NCAAFB4thDownConversions:
            return "NCAAFB4thDownConversions";
        case Value_NCAAFB4thDownConversionPerc:
            return "NCAAFB4thDownConversionPerc";
        case Value_NCAAFB4thDownConversionsViaPass:
            return "NCAAFB4thDownConversionsViaPass";
        case Value_NCAAFB4thDownConversionsViaPenalty:
            return "NCAAFB4thDownConversionsViaPenalty";
        case Value_NCAAFB4thDownConversionsViaRush:
            return "NCAAFB4thDownConversionsViaRush";
        case Value_NCAAFBGamesPlayed:
            return "NCAAFBGamesPlayed";
        case Value_NCAAFBGamesStarted:
            return "NCAAFBGamesStarted";
        case Value_NCAAFBGoalEfficiencyAttempts:
            return "NCAAFBGoalEfficiencyAttempts";
        case Value_NCAAFBGoalEfficiencyPerc:
            return "NCAAFBGoalEfficiencyPerc";
        case Value_NCAAFBGoalEfficiencyTouchdowns:
            return "NCAAFBGoalEfficiencyTouchdowns";
        case Value_NCAAFBPassing10PlusYards:
            return "NCAAFBPassing10PlusYards";
        case Value_NCAAFBPassing20PlusYards:
            return "NCAAFBPassing20PlusYards";
        case Value_NCAAFBPassing30PlusYards:
            return "NCAAFBPassing30PlusYards";
        case Value_NCAAFBPassing40PlusYards:
            return "NCAAFBPassing40PlusYards";
        case Value_NCAAFBPassing50PlusYards:
            return "NCAAFBPassing50PlusYards";
        case Value_NCAAFBPassingAttempts:
            return "NCAAFBPassingAttempts";
        case Value_NCAAFBPassingAverageYardsPerCompletion:
            return "NCAAFBPassingAverageYardsPerCompletion";
        case Value_NCAAFBPassingAverageYardsPerAttempt:
            return "NCAAFBPassingAverageYardsPerAttempt";
        case Value_NCAAFBPassingCompletionPerc:
            return "NCAAFBPassingCompletionPerc";
        case Value_NCAAFBPassingCompletions:
            return "NCAAFBPassingCompletions";
        case Value_NCAAFBPassing1stDowns:
            return "NCAAFBPassing1stDowns";
        case Value_NCAAFBPassingGrossYards:
            return "NCAAFBPassingGrossYards";
        case Value_NCAAFBPassingInterceptionPerc:
            return "NCAAFBPassingInterceptionPerc";
        case Value_NCAAFBPassingInterceptions:
            return "NCAAFBPassingInterceptions";
        case Value_NCAAFBPassingInterceptionsReturnedForTouchdown:
            return "NCAAFBPassingInterceptionsReturnedForTouchdown";
        case Value_NCAAFBPassingLongestPass:
            return "NCAAFBPassingLongestPass";
        case Value_NCAAFBPassingNetYards:
            return "NCAAFBPassingNetYards";
        case Value_NCAAFBPassingRating:
            return "NCAAFBPassingRating";
        case Value_NCAAFBPassingRedZoneAttempts:
            return "NCAAFBPassingRedZoneAttempts";
        case Value_NCAAFBPassingSacked:
            return "NCAAFBPassingSacked";
        case Value_NCAAFBPassingSackedYardsLost:
            return "NCAAFBPassingSackedYardsLost";
        case Value_NCAAFBPassingTackledForSafety:
            return "NCAAFBPassingTackledForSafety";
        case Value_NCAAFBPassingTotalYards:
            return "NCAAFBPassingTotalYards";
        case Value_NCAAFBPassingTouchdownPerc:
            return "NCAAFBPassingTouchdownPerc";
        case Value_NCAAFBPassingTouchdowns:
            return "NCAAFBPassingTouchdowns";
        case Value_NCAAFBReceiving10PlusYards:
            return "NCAAFBReceiving10PlusYards";
        case Value_NCAAFBReceiving20PlusYards:
            return "NCAAFBReceiving20PlusYards";
        case Value_NCAAFBReceiving30PlusYards:
            return "NCAAFBReceiving30PlusYards";
        case Value_NCAAFBReceiving40PlusYards:
            return "NCAAFBReceiving40PlusYards";
        case Value_NCAAFBReceiving50PlusYards:
            return "NCAAFBReceiving50PlusYards";
        case Value_NCAAFBReceivingAverageReception:
            return "NCAAFBReceivingAverageReception";
        case Value_NCAAFBReceiving1stDowns:
            return "NCAAFBReceiving1stDowns";
        case Value_NCAAFBReceivingFumbledOnReception:
            return "NCAAFBReceivingFumbledOnReception";
        case Value_NCAAFBReceivingLongestReception:
            return "NCAAFBReceivingLongestReception";
        case Value_NCAAFBReceivingReceptions:
            return "NCAAFBReceivingReceptions";
        case Value_NCAAFBReceivingRedZoneTargets:
            return "NCAAFBReceivingRedZoneTargets";
        case Value_NCAAFBReceivingTargets:
            return "NCAAFBReceivingTargets";
        case Value_NCAAFBReceivingTotalYards:
            return "NCAAFBReceivingTotalYards";
        case Value_NCAAFBReceivingTouchdowns:
            return "NCAAFBReceivingTouchdowns";
        case Value_NCAAFBReceivingYardsAfterCompletion:
            return "NCAAFBReceivingYardsAfterCompletion";
        case Value_NCAAFBRedZoneEfficiencyAttempts:
            return "NCAAFBRedZoneEfficiencyAttempts";
        case Value_NCAAFBRedZoneEfficiencyConversions:
            return "NCAAFBRedZoneEfficiencyConversions";
        case Value_NCAAFBRedZoneEfficiencyPerc:
            return "NCAAFBRedZoneEfficiencyPerc";
        case Value_NCAAFBRushing10PlusYards:
            return "NCAAFBRushing10PlusYards";
        case Value_NCAAFBRushing20PlusYards:
            return "NCAAFBRushing20PlusYards";
        case Value_NCAAFBRushing30PlusYards:
            return "NCAAFBRushing30PlusYards";
        case Value_NCAAFBRushing40PlusYards:
            return "NCAAFBRushing40PlusYards";
        case Value_NCAAFBRushing50PlusYards:
            return "NCAAFBRushing50PlusYards";
        case Value_NCAAFBRushingAttempts:
            return "NCAAFBRushingAttempts";
        case Value_NCAAFBRushingAverageRush:
            return "NCAAFBRushingAverageRush";
        case Value_NCAAFBRushing1stDownPerc:
            return "NCAAFBRushing1stDownPerc";
        case Value_NCAAFBRushing1stDowns:
            return "NCAAFBRushing1stDowns";
        case Value_NCAAFBRushingFumbledOnRush:
            return "NCAAFBRushingFumbledOnRush";
        case Value_NCAAFBRushingLongestRush:
            return "NCAAFBRushingLongestRush";
        case Value_NCAAFBRushingRedZoneAttempts:
            return "NCAAFBRushingRedZoneAttempts";
        case Value_NCAAFBRushingTackledForSafety:
            return "NCAAFBRushingTackledForSafety";
        case Value_NCAAFBRushingTotalYards:
            return "NCAAFBRushingTotalYards";
        case Value_NCAAFBRushingTouchdowns:
            return "NCAAFBRushingTouchdowns";
        case Value_NCAAFB1stDowns:
            return "NCAAFB1stDowns";
        case Value_NCAAFB2PointConversionsAttempted:
            return "NCAAFB2PointConversionsAttempted";
        case Value_NCAAFB2PointConversionsFailed:
            return "NCAAFB2PointConversionsFailed";
        case Value_NCAAFB2PointConversionsMade:
            return "NCAAFB2PointConversionsMade";
        case Value_NCAAFB2PointConversionsPassing:
            return "NCAAFB2PointConversionsPassing";
        case Value_NCAAFB2PointConversionsReceiving:
            return "NCAAFB2PointConversionsReceiving";
        case Value_NCAAFB2PointConversionsRushing:
            return "NCAAFB2PointConversionsRushing";
        case Value_NCAAFBBlockedKicks:
            return "NCAAFBBlockedKicks";
        case Value_NCAAFBForcedFumbles:
            return "NCAAFBForcedFumbles";
        case Value_NCAAFBFumblesRecovered:
            return "NCAAFBFumblesRecovered";
        case Value_NCAAFBFumblesRecoveredForTouchdowns:
            return "NCAAFBFumblesRecoveredForTouchdowns";
        case Value_NCAAFBInterceptions:
            return "NCAAFBInterceptions";
        case Value_NCAAFBInterceptionsLongestInterception:
            return "NCAAFBInterceptionsLongestInterception";
        case Value_NCAAFBInterceptionsTouchdowns:
            return "NCAAFBInterceptionsTouchdowns";
        case Value_NCAAFBInterceptionsYards:
            return "NCAAFBInterceptionsYards";
        case Value_NCAAFBMiscAssistedTackles:
            return "NCAAFBMiscAssistedTackles";
        case Value_NCAAFBMiscCombinedTackles:
            return "NCAAFBMiscCombinedTackles";
        case Value_NCAAFBMiscForcedFumbles:
            return "NCAAFBMiscForcedFumbles";
        case Value_NCAAFBMiscFumblesRecovered:
            return "NCAAFBMiscFumblesRecovered";
        case Value_NCAAFBMiscTackles:
            return "NCAAFBMiscTackles";
        case Value_NCAAFBPassesDefended:
            return "NCAAFBPassesDefended";
        case Value_NCAAFBQuarterbackHits:
            return "NCAAFBQuarterbackHits";
        case Value_NCAAFBSacks:
            return "NCAAFBSacks";
        case Value_NCAAFBSackYards:
            return "NCAAFBSackYards";
        case Value_NCAAFBSafeties:
            return "NCAAFBSafeties";
        case Value_NCAAFBSpecialTeamsAssistedTackles:
            return "NCAAFBSpecialTeamsAssistedTackles";
        case Value_NCAAFBSpecialTeamsCombinedTackles:
            return "NCAAFBSpecialTeamsCombinedTackles";
        case Value_NCAAFBSpecialTeamsForcedFumbles:
            return "NCAAFBSpecialTeamsForcedFumbles";
        case Value_NCAAFBSpecialTeamsFumblesRecovered:
            return "NCAAFBSpecialTeamsFumblesRecovered";
        case Value_NCAAFBSpecialTeamsTotalTackles:
            return "NCAAFBSpecialTeamsTotalTackles";
        case Value_NCAAFBTacklesAssisted:
            return "NCAAFBTacklesAssisted";
        case Value_NCAAFBTacklesCombined:
            return "NCAAFBTacklesCombined";
        case Value_NCAAFBTacklesForLoss:
            return "NCAAFBTacklesForLoss";
        case Value_NCAAFBTackles:
            return "NCAAFBTackles";
        case Value_NCAAFBBlockedFieldGoalReturns10PlusYards:
            return "NCAAFBBlockedFieldGoalReturns10PlusYards";
        case Value_NCAAFBBlockedFieldGoalReturns20PlusYards:
            return "NCAAFBBlockedFieldGoalReturns20PlusYards";
        case Value_NCAAFBBlockedFieldGoalReturns30PlusYards:
            return "NCAAFBBlockedFieldGoalReturns30PlusYards";
        case Value_NCAAFBBlockedFieldGoalReturns40PlusYards:
            return "NCAAFBBlockedFieldGoalReturns40PlusYards";
        case Value_NCAAFBBlockedFieldGoalReturns50PlusYards:
            return "NCAAFBBlockedFieldGoalReturns50PlusYards";
        case Value_NCAAFBBlockedFieldGoalReturnsAverageReturn:
            return "NCAAFBBlockedFieldGoalReturnsAverageReturn";
        case Value_NCAAFBBlockedFieldGoalReturnsLongestReturn:
            return "NCAAFBBlockedFieldGoalReturnsLongestReturn";
        case Value_NCAAFBBlockedFieldGoalReturns:
            return "NCAAFBBlockedFieldGoalReturns";
        case Value_NCAAFBBlockedFieldGoalReturnsTotalYards:
            return "NCAAFBBlockedFieldGoalReturnsTotalYards";
        case Value_NCAAFBBlockedFieldGoalReturnsTouchdowns:
            return "NCAAFBBlockedFieldGoalReturnsTouchdowns";
        case Value_NCAAFBBlockedPuntReturn10PlusYards:
            return "NCAAFBBlockedPuntReturn10PlusYards";
        case Value_NCAAFBBlockedPuntReturn20PlusYards:
            return "NCAAFBBlockedPuntReturn20PlusYards";
        case Value_NCAAFBBlockedPuntReturn30PlusYards:
            return "NCAAFBBlockedPuntReturn30PlusYards";
        case Value_NCAAFBBlockedPuntReturn40PlusYards:
            return "NCAAFBBlockedPuntReturn40PlusYards";
        case Value_NCAAFBBlockedPuntReturn50PlusYards:
            return "NCAAFBBlockedPuntReturn50PlusYards";
        case Value_NCAAFBBlockedPuntReturnsAverageReturn:
            return "NCAAFBBlockedPuntReturnsAverageReturn";
        case Value_NCAAFBBlockedPuntReturnsLongestReturn:
            return "NCAAFBBlockedPuntReturnsLongestReturn";
        case Value_NCAAFBBlockedPuntReturns:
            return "NCAAFBBlockedPuntReturns";
        case Value_NCAAFBBlockedPuntReturnsTotalYards:
            return "NCAAFBBlockedPuntReturnsTotalYards";
        case Value_NCAAFBBlockedPuntReturnsTouchdowns:
            return "NCAAFBBlockedPuntReturnsTouchdowns";
        case Value_NCAAFBExtraPointsAttempted:
            return "NCAAFBExtraPointsAttempted";
        case Value_NCAAFBExtraPointsAttemptedKicking:
            return "NCAAFBExtraPointsAttemptedKicking";
        case Value_NCAAFBExtraPointsAttempted2PointConversion:
            return "NCAAFBExtraPointsAttempted2PointConversion";
        case Value_NCAAFBExtraPointsBlocked:
            return "NCAAFBExtraPointsBlocked";
        case Value_NCAAFBExtraPointsMade:
            return "NCAAFBExtraPointsMade";
        case Value_NCAAFBExtraPointsMadeKicking:
            return "NCAAFBExtraPointsMadeKicking";
        case Value_NCAAFBExtraPointsMade2PointConversion:
            return "NCAAFBExtraPointsMade2PointConversion";
        case Value_NCAAFBExtraPointsPerc:
            return "NCAAFBExtraPointsPerc";
        case Value_NCAAFBFieldGoalReturns10PlusYards:
            return "NCAAFBFieldGoalReturns10PlusYards";
        case Value_NCAAFBFieldGoalReturns20PlusYards:
            return "NCAAFBFieldGoalReturns20PlusYards";
        case Value_NCAAFBFieldGoalReturns30PlusYards:
            return "NCAAFBFieldGoalReturns30PlusYards";
        case Value_NCAAFBFieldGoalReturns40PlusYards:
            return "NCAAFBFieldGoalReturns40PlusYards";
        case Value_NCAAFBFieldGoalReturns50PlusYards:
            return "NCAAFBFieldGoalReturns50PlusYards";
        case Value_NCAAFBFieldGoalReturnsAverageReturn:
            return "NCAAFBFieldGoalReturnsAverageReturn";
        case Value_NCAAFBFieldGoalReturnsLongestReturn:
            return "NCAAFBFieldGoalReturnsLongestReturn";
        case Value_NCAAFBFieldGoalReturns:
            return "NCAAFBFieldGoalReturns";
        case Value_NCAAFBFieldGoalReturnsTotalYards:
            return "NCAAFBFieldGoalReturnsTotalYards";
        case Value_NCAAFBFieldGoalReturnsTouchdowns:
            return "NCAAFBFieldGoalReturnsTouchdowns";
        case Value_NCAAFBFieldGoalsAttempted:
            return "NCAAFBFieldGoalsAttempted";
        case Value_NCAAFBFieldGoalsAttempted1to19Yards:
            return "NCAAFBFieldGoalsAttempted1to19Yards";
        case Value_NCAAFBFieldGoalsAttempted20to29Yards:
            return "NCAAFBFieldGoalsAttempted20to29Yards";
        case Value_NCAAFBFieldGoalsAttempted30to39Yards:
            return "NCAAFBFieldGoalsAttempted30to39Yards";
        case Value_NCAAFBFieldGoalsAttempted40to49Yards:
            return "NCAAFBFieldGoalsAttempted40to49Yards";
        case Value_NCAAFBFieldGoalsAttempted50PlusYards:
            return "NCAAFBFieldGoalsAttempted50PlusYards";
        case Value_NCAAFBFieldGoalsBlocked:
            return "NCAAFBFieldGoalsBlocked";
        case Value_NCAAFBFieldGoalsLongestMade:
            return "NCAAFBFieldGoalsLongestMade";
        case Value_NCAAFBFieldGoalsMade:
            return "NCAAFBFieldGoalsMade";
        case Value_NCAAFBFieldGoalsMade1to19Yards:
            return "NCAAFBFieldGoalsMade1to19Yards";
        case Value_NCAAFBFieldGoalsMade20to29Yards:
            return "NCAAFBFieldGoalsMade20to29Yards";
        case Value_NCAAFBFieldGoalsMade30to39Yards:
            return "NCAAFBFieldGoalsMade30to39Yards";
        case Value_NCAAFBFieldGoalsMade40to49Yards:
            return "NCAAFBFieldGoalsMade40to49Yards";
        case Value_NCAAFBFieldGoalsMade50PlusYards:
            return "NCAAFBFieldGoalsMade50PlusYards";
        case Value_NCAAFBFieldGoalsPerc:
            return "NCAAFBFieldGoalsPerc";
        case Value_NCAAFBKickoffReturns10PlusYards:
            return "NCAAFBKickoffReturns10PlusYards";
        case Value_NCAAFBKickoffReturns20PlusYards:
            return "NCAAFBKickoffReturns20PlusYards";
        case Value_NCAAFBKickoffReturns30PlusYards:
            return "NCAAFBKickoffReturns30PlusYards";
        case Value_NCAAFBKickoffReturns40PlusYards:
            return "NCAAFBKickoffReturns40PlusYards";
        case Value_NCAAFBKickoffReturns50PlusYards:
            return "NCAAFBKickoffReturns50PlusYards";
        case Value_NCAAFBKickoffReturnsAverageRun:
            return "NCAAFBKickoffReturnsAverageRun";
        case Value_NCAAFBKickoffReturnsFairCatches:
            return "NCAAFBKickoffReturnsFairCatches";
        case Value_NCAAFBKickoffReturnsLongestKickReturn:
            return "NCAAFBKickoffReturnsLongestKickReturn";
        case Value_NCAAFBKickoffReturnsReturns:
            return "NCAAFBKickoffReturnsReturns";
        case Value_NCAAFBKickoffReturnsTouchdowns:
            return "NCAAFBKickoffReturnsTouchdowns";
        case Value_NCAAFBKickoffReturnsYards:
            return "NCAAFBKickoffReturnsYards";
        case Value_NCAAFBKickoffsAverageGrossYards:
            return "NCAAFBKickoffsAverageGrossYards";
        case Value_NCAAFBKickoffsAverageNetYards:
            return "NCAAFBKickoffsAverageNetYards";
        case Value_NCAAFBKickoffsAverageReturnYards:
            return "NCAAFBKickoffsAverageReturnYards";
        case Value_NCAAFBKickoffsEndZoneKicks:
            return "NCAAFBKickoffsEndZoneKicks";
        case Value_NCAAFBKickoffsGrossYards:
            return "NCAAFBKickoffsGrossYards";
        case Value_NCAAFBKickoffsInsideOpponents20YardLine:
            return "NCAAFBKickoffsInsideOpponents20YardLine";
        case Value_NCAAFBKickoffsKicks:
            return "NCAAFBKickoffsKicks";
        case Value_NCAAFBKickoffsLongestKick:
            return "NCAAFBKickoffsLongestKick";
        case Value_NCAAFBKickoffsNetYards:
            return "NCAAFBKickoffsNetYards";
        case Value_NCAAFBKickoffsInsideOpponents20YardLinePerc:
            return "NCAAFBKickoffsInsideOpponents20YardLinePerc";
        case Value_NCAAFBKickoffsTouchbacksPerc:
            return "NCAAFBKickoffsTouchbacksPerc";
        case Value_NCAAFBKickoffsReturned:
            return "NCAAFBKickoffsReturned";
        case Value_NCAAFBKickoffsTotalReturnYards:
            return "NCAAFBKickoffsTotalReturnYards";
        case Value_NCAAFBKickoffsTouchbacks:
            return "NCAAFBKickoffsTouchbacks";
        case Value_NCAAFBPuntReturns10PlusYards:
            return "NCAAFBPuntReturns10PlusYards";
        case Value_NCAAFBPuntReturns20PlusYards:
            return "NCAAFBPuntReturns20PlusYards";
        case Value_NCAAFBPuntReturns30PlusYards:
            return "NCAAFBPuntReturns30PlusYards";
        case Value_NCAAFBPuntReturns40PlusYards:
            return "NCAAFBPuntReturns40PlusYards";
        case Value_NCAAFBPuntReturns50PlusYards:
            return "NCAAFBPuntReturns50PlusYards";
        case Value_NCAAFBPuntReturnsAverageRun:
            return "NCAAFBPuntReturnsAverageRun";
        case Value_NCAAFBPuntReturnsFairCatches:
            return "NCAAFBPuntReturnsFairCatches";
        case Value_NCAAFBPuntReturnsLongestKickReturn:
            return "NCAAFBPuntReturnsLongestKickReturn";
        case Value_NCAAFBPuntReturns:
            return "NCAAFBPuntReturns";
        case Value_NCAAFBPuntReturnsTouchdowns:
            return "NCAAFBPuntReturnsTouchdowns";
        case Value_NCAAFBPuntReturnsYards:
            return "NCAAFBPuntReturnsYards";
        case Value_NCAAFBPuntingAverageGrossYards:
            return "NCAAFBPuntingAverageGrossYards";
        case Value_NCAAFBPuntingAverageNetYards:
            return "NCAAFBPuntingAverageNetYards";
        case Value_NCAAFBPuntingAverageReturnYards:
            return "NCAAFBPuntingAverageReturnYards";
        case Value_NCAAFBPuntingBlocked:
            return "NCAAFBPuntingBlocked";
        case Value_NCAAFBPuntingGrossYards:
            return "NCAAFBPuntingGrossYards";
        case Value_NCAAFBPuntingInsideOpponents20YardLine:
            return "NCAAFBPuntingInsideOpponents20YardLine";
        case Value_NCAAFBPuntingLongestPunt:
            return "NCAAFBPuntingLongestPunt";
        case Value_NCAAFBPuntingNetYards:
            return "NCAAFBPuntingNetYards";
        case Value_NCAAFBPuntingInsideOpponents20YardLinePerc:
            return "NCAAFBPuntingInsideOpponents20YardLinePerc";
        case Value_NCAAFBPuntingTouchbacksPerc:
            return "NCAAFBPuntingTouchbacksPerc";
        case Value_NCAAFBPuntingPunts:
            return "NCAAFBPuntingPunts";
        case Value_NCAAFBPuntingReturnYards:
            return "NCAAFBPuntingReturnYards";
        case Value_NCAAFBPuntingReturned:
            return "NCAAFBPuntingReturned";
        case Value_NCAAFBPuntingTouchbacks:
            return "NCAAFBPuntingTouchbacks";
        case Value_NCAAFBFumblesForced:
            return "NCAAFBFumblesForced";
        case Value_NCAAFBFumbles:
            return "NCAAFBFumbles";
        case Value_NCAAFBFumblesLost:
            return "NCAAFBFumblesLost";
        case Value_NCAAFBFumblesOpponentRecovery:
            return "NCAAFBFumblesOpponentRecovery";
        case Value_NCAAFBFumblesOpponentTouchdownsFromRecovery:
            return "NCAAFBFumblesOpponentTouchdownsFromRecovery";
        case Value_NCAAFBFumblesOutOfBounds:
            return "NCAAFBFumblesOutOfBounds";
        case Value_NCAAFBFumblesOwnRecovery:
            return "NCAAFBFumblesOwnRecovery";
        case Value_NCAAFBFumblesOwnTouchdownsFromRecovery:
            return "NCAAFBFumblesOwnTouchdownsFromRecovery";
        case Value_NCAAFBFumblesYardsFromOpponentRecovery:
            return "NCAAFBFumblesYardsFromOpponentRecovery";
        case Value_NCAAFBFumblesYardsFromOwnRecovery:
            return "NCAAFBFumblesYardsFromOwnRecovery";
        case Value_NCAAFBPenalties1stDowns:
            return "NCAAFBPenalties1stDowns";
        case Value_NCAAFBPenalties:
            return "NCAAFBPenalties";
        case Value_NCAAFBPenaltiesYards:
            return "NCAAFBPenaltiesYards";
        case Value_NBAAssists:
            return "NBAAssists";
        case Value_NBAAssistsPerGame:
            return "NBAAssistsPerGame";
        case Value_NBAAssistsToTurnoverRatio:
            return "NBAAssistsToTurnoverRatio";
        case Value_NBABlockedAttempts:
            return "NBABlockedAttempts";
        case Value_NBABlockedAttemptsPerGame:
            return "NBABlockedAttemptsPerGame";
        case Value_NBABlockedShots:
            return "NBABlockedShots";
        case Value_NBABlockedShotsPerGame:
            return "NBABlockedShotsPerGame";
        case Value_NBACoachTechnicalFouls:
            return "NBACoachTechnicalFouls";
        case Value_NBADefensiveRebounds:
            return "NBADefensiveRebounds";
        case Value_NBADefensiveReboundsPerGame:
            return "NBADefensiveReboundsPerGame";
        case Value_NBAEjections:
            return "NBAEjections";
        case Value_NBAFastBreakPoints:
            return "NBAFastBreakPoints";
        case Value_NBAFastBreakPointsPerGame:
            return "NBAFastBreakPointsPerGame";
        case Value_NBAFieldGoalAttempts:
            return "NBAFieldGoalAttempts";
        case Value_NBAFieldGoalAttemptsPerGame:
            return "NBAFieldGoalAttemptsPerGame";
        case Value_NBAFieldGoalPercentage:
            return "NBAFieldGoalPercentage";
        case Value_NBAFieldGoalsMade:
            return "NBAFieldGoalsMade";
        case Value_NBAFieldGoalsMadePerGame:
            return "NBAFieldGoalsMadePerGame";
        case Value_NBAFlagrantFouls:
            return "NBAFlagrantFouls";
        case Value_NBAFlagrantFoulsPerGame:
            return "NBAFlagrantFoulsPerGame";
        case Value_NBAFreeThrowAttempts:
            return "NBAFreeThrowAttempts";
        case Value_NBAFreeThrowAttemptsPerGame:
            return "NBAFreeThrowAttemptsPerGame";
        case Value_NBAFreeThrowPercentage:
            return "NBAFreeThrowPercentage";
        case Value_NBAFreeThrowsMade:
            return "NBAFreeThrowsMade";
        case Value_NBAFreeThrowsMadePerGame:
            return "NBAFreeThrowsMadePerGame";
        case Value_NBAGamesPlayed:
            return "NBAGamesPlayed";
        case Value_NBAGamesStarted:
            return "NBAGamesStarted";
        case Value_NBAMinutesPlayed:
            return "NBAMinutesPlayed";
        case Value_NBAMinutesPlayedPerGame:
            return "NBAMinutesPlayedPerGame";
        case Value_NBAOffensiveRebounds:
            return "NBAOffensiveRebounds";
        case Value_NBAOffensiveReboundsPerGame:
            return "NBAOffensiveReboundsPerGame";
        case Value_NBAPersonalFouls:
            return "NBAPersonalFouls";
        case Value_NBAPersonalFoulsPerGame:
            return "NBAPersonalFoulsPerGame";
        case Value_NBAPoints:
            return "NBAPoints";
        case Value_NBAPointsPerGame:
            return "NBAPointsPerGame";
        case Value_NBAPointsInPaint:
            return "NBAPointsInPaint";
        case Value_NBAPointsInPaintPerGame:
            return "NBAPointsInPaintPerGame";
        case Value_NBAPointsOffTurnovers:
            return "NBAPointsOffTurnovers";
        case Value_NBAPointsOffTurnoversPerGame:
            return "NBAPointsOffTurnoversPerGame";
        case Value_NBARebounds:
            return "NBARebounds";
        case Value_NBAReboundsPerGame:
            return "NBAReboundsPerGame";
        case Value_NBASecondChancePoints:
            return "NBASecondChancePoints";
        case Value_NBASecondChancePointsPerGame:
            return "NBASecondChancePointsPerGame";
        case Value_NBASteals:
            return "NBASteals";
        case Value_NBAStealsPerGame:
            return "NBAStealsPerGame";
        case Value_NBATeamTechnicalFouls:
            return "NBATeamTechnicalFouls";
        case Value_NBAPlayerTechnicalFouls:
            return "NBAPlayerTechnicalFouls";
        case Value_NBAThreePointAttempts:
            return "NBAThreePointAttempts";
        case Value_NBAThreePointAttemptsPerGame:
            return "NBAThreePointAttemptsPerGame";
        case Value_NBAThreePointPercentage:
            return "NBAThreePointPercentage";
        case Value_NBAThreePointsMade:
            return "NBAThreePointsMade";
        case Value_NBAThreePointsMadePerGame:
            return "NBAThreePointsMadePerGame";
        case Value_NBATurnovers:
            return "NBATurnovers";
        case Value_NBATurnoversPerGame:
            return "NBATurnoversPerGame";
        case Value_NBATwoPointAttempts:
            return "NBATwoPointAttempts";
        case Value_NBATwoPointAttemptsPerGame:
            return "NBATwoPointAttemptsPerGame";
        case Value_NBATwoPointPercentage:
            return "NBATwoPointPercentage";
        case Value_NBATwoPointsMade:
            return "NBATwoPointsMade";
        case Value_NBATwoPointsMadePerGame:
            return "NBATwoPointsMadePerGame";
        case Value_NCAAMBAssists:
            return "NCAAMBAssists";
        case Value_NCAAMBAssistsPerGame:
            return "NCAAMBAssistsPerGame";
        case Value_NCAAMBAssistsToTurnoverRatio:
            return "NCAAMBAssistsToTurnoverRatio";
        case Value_NCAAMBBlockedAttempts:
            return "NCAAMBBlockedAttempts";
        case Value_NCAAMBBlockedAttemptsPerGame:
            return "NCAAMBBlockedAttemptsPerGame";
        case Value_NCAAMBBlockedShots:
            return "NCAAMBBlockedShots";
        case Value_NCAAMBBlockedShotsPerGame:
            return "NCAAMBBlockedShotsPerGame";
        case Value_NCAAMBCoachTechnicalFouls:
            return "NCAAMBCoachTechnicalFouls";
        case Value_NCAAMBDefensiveRebounds:
            return "NCAAMBDefensiveRebounds";
        case Value_NCAAMBDefensiveReboundsPerGame:
            return "NCAAMBDefensiveReboundsPerGame";
        case Value_NCAAMBEjections:
            return "NCAAMBEjections";
        case Value_NCAAMBFastBreakPoints:
            return "NCAAMBFastBreakPoints";
        case Value_NCAAMBFastBreakPointsPerGame:
            return "NCAAMBFastBreakPointsPerGame";
        case Value_NCAAMBFieldGoalAttempts:
            return "NCAAMBFieldGoalAttempts";
        case Value_NCAAMBFieldGoalAttemptsPerGame:
            return "NCAAMBFieldGoalAttemptsPerGame";
        case Value_NCAAMBFieldGoalPercentage:
            return "NCAAMBFieldGoalPercentage";
        case Value_NCAAMBFieldGoalsMade:
            return "NCAAMBFieldGoalsMade";
        case Value_NCAAMBFieldGoalsMadePerGame:
            return "NCAAMBFieldGoalsMadePerGame";
        case Value_NCAAMBFlagrantFouls:
            return "NCAAMBFlagrantFouls";
        case Value_NCAAMBFlagrantFoulsPerGame:
            return "NCAAMBFlagrantFoulsPerGame";
        case Value_NCAAMBFreeThrowAttempts:
            return "NCAAMBFreeThrowAttempts";
        case Value_NCAAMBFreeThrowAttemptsPerGame:
            return "NCAAMBFreeThrowAttemptsPerGame";
        case Value_NCAAMBFreeThrowPercentage:
            return "NCAAMBFreeThrowPercentage";
        case Value_NCAAMBFreeThrowsMade:
            return "NCAAMBFreeThrowsMade";
        case Value_NCAAMBFreeThrowsMadePerGame:
            return "NCAAMBFreeThrowsMadePerGame";
        case Value_NCAAMBGamesPlayed:
            return "NCAAMBGamesPlayed";
        case Value_NCAAMBGamesStarted:
            return "NCAAMBGamesStarted";
        case Value_NCAAMBMinutesPlayed:
            return "NCAAMBMinutesPlayed";
        case Value_NCAAMBMinutesPlayedPerGame:
            return "NCAAMBMinutesPlayedPerGame";
        case Value_NCAAMBOffensiveRebounds:
            return "NCAAMBOffensiveRebounds";
        case Value_NCAAMBOffensiveReboundsPerGame:
            return "NCAAMBOffensiveReboundsPerGame";
        case Value_NCAAMBPersonalFouls:
            return "NCAAMBPersonalFouls";
        case Value_NCAAMBPersonalFoulsPerGame:
            return "NCAAMBPersonalFoulsPerGame";
        case Value_NCAAMBPoints:
            return "NCAAMBPoints";
        case Value_NCAAMBPointsPerGame:
            return "NCAAMBPointsPerGame";
        case Value_NCAAMBPointsInPaint:
            return "NCAAMBPointsInPaint";
        case Value_NCAAMBPointsInPaintPerGame:
            return "NCAAMBPointsInPaintPerGame";
        case Value_NCAAMBPointsOffTurnovers:
            return "NCAAMBPointsOffTurnovers";
        case Value_NCAAMBPointsOffTurnoversPerGame:
            return "NCAAMBPointsOffTurnoversPerGame";
        case Value_NCAAMBRebounds:
            return "NCAAMBRebounds";
        case Value_NCAAMBReboundsPerGame:
            return "NCAAMBReboundsPerGame";
        case Value_NCAAMBSecondChancePoints:
            return "NCAAMBSecondChancePoints";
        case Value_NCAAMBSecondChancePointsPerGame:
            return "NCAAMBSecondChancePointsPerGame";
        case Value_NCAAMBSteals:
            return "NCAAMBSteals";
        case Value_NCAAMBStealsPerGame:
            return "NCAAMBStealsPerGame";
        case Value_NCAAMBTeamTechnicalFouls:
            return "NCAAMBTeamTechnicalFouls";
        case Value_NCAAMBPlayerTechnicalFouls:
            return "NCAAMBPlayerTechnicalFouls";
        case Value_NCAAMBThreePointAttempts:
            return "NCAAMBThreePointAttempts";
        case Value_NCAAMBThreePointAttemptsPerGame:
            return "NCAAMBThreePointAttemptsPerGame";
        case Value_NCAAMBThreePointPercentage:
            return "NCAAMBThreePointPercentage";
        case Value_NCAAMBThreePointsMade:
            return "NCAAMBThreePointsMade";
        case Value_NCAAMBThreePointsMadePerGame:
            return "NCAAMBThreePointsMadePerGame";
        case Value_NCAAMBTurnovers:
            return "NCAAMBTurnovers";
        case Value_NCAAMBTurnoversPerGame:
            return "NCAAMBTurnoversPerGame";
        case Value_NCAAMBTwoPointAttempts:
            return "NCAAMBTwoPointAttempts";
        case Value_NCAAMBTwoPointAttemptsPerGame:
            return "NCAAMBTwoPointAttemptsPerGame";
        case Value_NCAAMBTwoPointPercentage:
            return "NCAAMBTwoPointPercentage";
        case Value_NCAAMBTwoPointsMade:
            return "NCAAMBTwoPointsMade";
        case Value_NCAAMBTwoPointsMadePerGame:
            return "NCAAMBTwoPointsMadePerGame";
        case Value_SoccerBallPossessions:
            return "SoccerBallPossessions";
        case Value_SoccerCardsGiven:
            return "SoccerCardsGiven";
        case Value_SoccerCornerKicks:
            return "SoccerCornerKicks";
        case Value_SoccerFreeKicks:
            return "SoccerFreeKicks";
        case Value_SoccerGoalAttempts:
            return "SoccerGoalAttempts";
        case Value_SoccerGoalsByFoot:
            return "SoccerGoalsByFoot";
        case Value_SoccerGoalsByHeaders:
            return "SoccerGoalsByHeaders";
        case Value_SoccerGoalsByTime00To15:
            return "SoccerGoalsByTime00To15";
        case Value_SoccerGoalsByTime16To30:
            return "SoccerGoalsByTime16To30";
        case Value_SoccerGoalsByTime31To45:
            return "SoccerGoalsByTime31To45";
        case Value_SoccerGoalsByTime46To60:
            return "SoccerGoalsByTime46To60";
        case Value_SoccerGoalsByTime61To75:
            return "SoccerGoalsByTime61To75";
        case Value_SoccerGoalsByTime76To90:
            return "SoccerGoalsByTime76To90";
        case Value_SoccerGoalsConceded:
            return "SoccerGoalsConceded";
        case Value_SoccerGoalsConcededByTime00To15:
            return "SoccerGoalsConcededByTime00To15";
        case Value_SoccerGoalsConcededByTime16To30:
            return "SoccerGoalsConcededByTime16To30";
        case Value_SoccerGoalsConcededByTime31To45:
            return "SoccerGoalsConcededByTime31To45";
        case Value_SoccerGoalsConcededByTime46To60:
            return "SoccerGoalsConcededByTime46To60";
        case Value_SoccerGoalsConcededByTime61To75:
            return "SoccerGoalsConcededByTime61To75";
        case Value_SoccerGoalsConcededByTime76To90:
            return "SoccerGoalsConcededByTime76To90";
        case Value_SoccerGoalsScored:
            return "SoccerGoalsScored";
        case Value_SoccerMatchesPlayed:
            return "SoccerMatchesPlayed";
        case Value_SoccerOffsides:
            return "SoccerOffsides";
        case Value_SoccerOwnGoals:
            return "SoccerOwnGoals";
        case Value_SoccerShotsBlocked:
            return "SoccerShotsBlocked";
        case Value_SoccerShotsOffGoal:
            return "SoccerShotsOffGoal";
        case Value_SoccerShotsOnGoal:
            return "SoccerShotsOnGoal";
        case Value_SoccerSubstitutedIn:
            return "SoccerSubstitutedIn";
        case Value_SoccerSubstitutedOut:
            return "SoccerSubstitutedOut";
        default:
            assert(false);
            return NULL;
      }
  }

SportsStatsTypeJSON::SportsStatsTypeJSON(const SportsStatsTypeJSON &)
  {
    assert(false);
  }

SportsStatsTypeJSON &SportsStatsTypeJSON::operator=(const SportsStatsTypeJSON &other)
  {
    assert(false);
    throw "Illegal operator=() call.";
  }

void SportsStatsTypeJSON::fromJSONValue(JSONValue *json_value, bool ignore_extras)
  {
    assert(json_value != NULL);
    const JSONStringValue *json_string = json_value->string_value();
    if (json_string == NULL)
        throw("The value for field Value of SportsStatsTypeJSON is not a string.");
    TypeValue the_open_enum;
    switch ((unsigned char)(json_string->getData()[0]))
      {
        case 'M':
            if (strncmp(&(json_string->getData()[1]), "LB", 2) == 0)
              {
                switch ((unsigned char)(json_string->getData()[3]))
                  {
                    case 'B':
                        if (strncmp(&(json_string->getData()[4]), "aserunning", 10) == 0)
                          {
                            switch ((unsigned char)(json_string->getData()[14]))
                              {
                                case 'C':
                                    if (strcmp(&(json_string->getData()[15]), "aughtStealing") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBBaserunningCaughtStealing;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'P':
                                    if (strcmp(&(json_string->getData()[15]), "ickoffs") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBBaserunningPickoffs;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'S':
                                    if (strncmp(&(json_string->getData()[15]), "tolenBase", 9) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[24]))
                                          {
                                            case 'P':
                                                if (strcmp(&(json_string->getData()[25]), "erc") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBBaserunningStolenBasePerc;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (json_string->getData()[25] == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBBaserunningStolenBases;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'F':
                        if (strncmp(&(json_string->getData()[4]), "ielding", 7) == 0)
                          {
                            switch ((unsigned char)(json_string->getData()[11]))
                              {
                                case 'A':
                                    if (strcmp(&(json_string->getData()[12]), "ssists") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBFieldingAssists;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'C':
                                    if (strcmp(&(json_string->getData()[12]), "ompleteGames") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBFieldingCompleteGames;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'D':
                                    if (strcmp(&(json_string->getData()[12]), "oublePlays") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBFieldingDoublePlays;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'E':
                                    if (strcmp(&(json_string->getData()[12]), "rrors") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBFieldingErrors;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'F':
                                    if (strcmp(&(json_string->getData()[12]), "ieldingPercentage") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBFieldingFieldingPercentage;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'G':
                                    if (strncmp(&(json_string->getData()[12]), "ames", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[16]))
                                          {
                                            case 'F':
                                                if (strcmp(&(json_string->getData()[17]), "inished") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBFieldingGamesFinished;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'P':
                                                if (strcmp(&(json_string->getData()[17]), "layed") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBFieldingGamesPlayed;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'S':
                                                if (strcmp(&(json_string->getData()[17]), "tarted") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBFieldingGamesStarted;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'P':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[13]), "ssedBalls") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBFieldingPassedBalls;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'u':
                                            if (strcmp(&(json_string->getData()[13]), "touts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBFieldingPutouts;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'R':
                                    if (strcmp(&(json_string->getData()[12]), "angeFactor") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBFieldingRangeFactor;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'T':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[13]), "talChances") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBFieldingTotalChances;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[13]), "iplePlays") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBFieldingTriplePlays;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'H':
                        if (strncmp(&(json_string->getData()[4]), "itting", 6) == 0)
                          {
                            switch ((unsigned char)(json_string->getData()[10]))
                              {
                                case 'A':
                                    if (strncmp(&(json_string->getData()[11]), "tBats", 5) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[16]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingAtBats;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'P':
                                                if (strncmp(&(json_string->getData()[17]), "er", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[19]))
                                                      {
                                                        case 'H':
                                                            if (strcmp(&(json_string->getData()[20]), "omeRun") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingAtBatsPerHomeRun;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(json_string->getData()[20]), "trikeout") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingAtBatsPerStrikeout;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'W':
                                                if (strcmp(&(json_string->getData()[17]), "ithRunnersInScoringPosition") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBHittingAtBatsWithRunnersInScoringPosition;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'B':
                                    if (strncmp(&(json_string->getData()[11]), "a", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[12]))
                                          {
                                            case 'l':
                                                if (strncmp(&(json_string->getData()[13]), "ls", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[15]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingBalls;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'I':
                                                            if (strcmp(&(json_string->getData()[16]), "nPlay") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingBallsInPlay;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 't':
                                                if (strncmp(&(json_string->getData()[13]), "tingAverage", 11) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[24]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingBattingAverage;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'O':
                                                            if (strcmp(&(json_string->getData()[25]), "nBallsInPlay") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingBattingAverageOnBallsInPlay;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'C':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[12]), "mpleteGames") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingCompleteGames;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'y':
                                            if (strcmp(&(json_string->getData()[12]), "cles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingCycles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'D':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[12]), "rtBallsFaced") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingDirtBallsFaced;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[12]), "ubles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingDoubles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'E':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'a':
                                            if (strcmp(&(json_string->getData()[12]), "rnedRunsScored") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingEarnedRunsScored;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'x':
                                            if (strcmp(&(json_string->getData()[12]), "traBaseHits") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingExtraBaseHits;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'F':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[12]), "eldersChoice") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingFieldersChoice;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strncmp(&(json_string->getData()[12]), "y", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[14]), "alls") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingFlyBalls;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'O':
                                                        if (strncmp(&(json_string->getData()[14]), "uts", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[17]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBHittingFlyOuts;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'I':
                                                                    if (strcmp(&(json_string->getData()[18]), "ntoDoublePlays") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingFlyOutsIntoDoublePlays;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[12]), "ulBalls") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingFoulBalls;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'G':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'a':
                                            if (strncmp(&(json_string->getData()[12]), "mes", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[15]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[16]), "inished") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingGamesFinished;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[16]), "layed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingGamesPlayed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if (strcmp(&(json_string->getData()[16]), "tarted") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingGamesStarted;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strncmp(&(json_string->getData()[12]), "ound", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[16]))
                                                  {
                                                    case 'B':
                                                        if (strncmp(&(json_string->getData()[17]), "all", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[20]))
                                                              {
                                                                case 'T':
                                                                    if (strcmp(&(json_string->getData()[21]), "oFlyBallRatio") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingGroundBallToFlyBallRatio;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    if (json_string->getData()[21] == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingGroundBalls;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'O':
                                                        if (strcmp(&(json_string->getData()[17]), "uts") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingGroundOuts;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'e':
                                                        if (strcmp(&(json_string->getData()[17]), "dIntoDoublePlay") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingGroundedIntoDoublePlay;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'H':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'i':
                                            if (strncmp(&(json_string->getData()[12]), "t", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[14]), "yPitch") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingHitByPitch;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[14]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingHits;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'W':
                                                                if (strcmp(&(json_string->getData()[15]), "ithRunnersInScoringPosition") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBHittingHitsWithRunnersInScoringPosition;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[12]), "meRuns") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingHomeRuns;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'I':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'n':
                                            if (strncmp(&(json_string->getData()[12]), "tentional", 9) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[21]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[22]), "alls") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingIntentionalBalls;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'W':
                                                        if (strcmp(&(json_string->getData()[22]), "alks") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingIntentionalWalks;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 's':
                                            if (strcmp(&(json_string->getData()[12]), "olatedPower") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingIsolatedPower;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'L':
                                    if (strncmp(&(json_string->getData()[11]), "ine", 3) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[14]))
                                          {
                                            case 'D':
                                                if (strcmp(&(json_string->getData()[15]), "rives") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBHittingLineDrives;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'O':
                                                if (strncmp(&(json_string->getData()[15]), "uts", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[18]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingLineOuts;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'I':
                                                            if (strcmp(&(json_string->getData()[19]), "ntoDoublePlay") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingLineOutsIntoDoublePlay;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'O':
                                    if (strncmp(&(json_string->getData()[11]), "nBaseP", 6) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[17]))
                                          {
                                            case 'e':
                                                if (strcmp(&(json_string->getData()[18]), "rc") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBHittingOnBasePerc;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 'l':
                                                if (strcmp(&(json_string->getData()[18]), "usSluggingPerc") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBHittingOnBasePlusSluggingPerc;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'P':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[12]), "tchesFaced") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingPitchesFaced;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[12]), "ateAppearances") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingPlateAppearances;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strncmp(&(json_string->getData()[12]), "p", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'O':
                                                        if (strcmp(&(json_string->getData()[14]), "uts") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingPopOuts;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'U':
                                                        if (strcmp(&(json_string->getData()[14]), "ps") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingPopUps;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'R':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[12]), "achedOnError") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingReachedOnError;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'u':
                                            if (strncmp(&(json_string->getData()[12]), "n", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'n':
                                                        if (strncmp(&(json_string->getData()[14]), "ersLeftOnBase", 13) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[27]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBHittingRunnersLeftOnBase;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'T':
                                                                    if (strcmp(&(json_string->getData()[28]), "woOutsRunnersInScoringPosition") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingRunnersLeftOnBaseTwoOutsRunnersInScoringPosition;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 's':
                                                        if (strncmp(&(json_string->getData()[14]), "BattedIn", 8) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[22]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBHittingRunsBattedIn;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'W':
                                                                    if (strcmp(&(json_string->getData()[23]), "ithTwoOuts") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingRunsBattedInWithTwoOuts;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'S':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'a':
                                            if (strncmp(&(json_string->getData()[12]), "crifice", 7) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[19]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[20]), "lys") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingSacrificeFlys;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'H':
                                                        if (strcmp(&(json_string->getData()[20]), "its") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingSacrificeHits;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[12]), "condaryAverage") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingSecondaryAverage;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[12]), "ngles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingSingles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[12]), "uggingPerc") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingSluggingPerc;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            if (strncmp(&(json_string->getData()[12]), "rike", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[16]))
                                                  {
                                                    case 'o':
                                                        if (strncmp(&(json_string->getData()[17]), "uts", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[20]))
                                                              {
                                                                case 'L':
                                                                    if (strcmp(&(json_string->getData()[21]), "ooking") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingStrikeoutsLooking;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'S':
                                                                    if (strcmp(&(json_string->getData()[21]), "winging") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingStrikeoutsSwinging;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[17]))
                                                          {
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[18]), "ooking") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBHittingStrikesLooking;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'S':
                                                                if (strcmp(&(json_string->getData()[18]), "winging") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBHittingStrikesSwinging;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'T':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'o':
                                            if (strncmp(&(json_string->getData()[12]), "tal", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[15]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[16]), "ases") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingTotalBases;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'R':
                                                        if (strcmp(&(json_string->getData()[16]), "unsScored") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBHittingTotalRunsScored;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if (strncmp(&(json_string->getData()[16]), "trike", 5) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[21]))
                                                              {
                                                                case 'o':
                                                                    if (strcmp(&(json_string->getData()[22]), "uts") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingTotalStrikeouts;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    if (json_string->getData()[22] == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBHittingTotalStrikes;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[12]), "iples") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingTriples;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'U':
                                    if (strcmp(&(json_string->getData()[11]), "nearnedRunsScored") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBHittingUnearnedRunsScored;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'W':
                                    if (strncmp(&(json_string->getData()[11]), "alks", 4) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[15]))
                                          {
                                            case 0:
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBHittingWalks;
                                                    goto open_enum_is_done;
                                                  }
                                            case 'P':
                                                if (strncmp(&(json_string->getData()[16]), "er", 2) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[18]))
                                                      {
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[19]), "laceAppearance") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingWalksPerPlaceAppearance;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(json_string->getData()[19]), "trikeout") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBHittingWalksPerStrikeout;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'P':
                        if (strncmp(&(json_string->getData()[4]), "itching", 7) == 0)
                          {
                            switch ((unsigned char)(json_string->getData()[11]))
                              {
                                case 'B':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'a':
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'l':
                                                    switch ((unsigned char)(json_string->getData()[14]))
                                                      {
                                                        case 'k':
                                                            if (strcmp(&(json_string->getData()[15]), "s") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBPitchingBalks;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'l':
                                                            if (strcmp(&(json_string->getData()[15]), "s") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBPitchingBalls;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[14]), "tersFaced") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingBattersFaced;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'l':
                                            if (strcmp(&(json_string->getData()[13]), "ownSaves") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingBlownSaves;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'C':
                                    if (strcmp(&(json_string->getData()[12]), "ompleteGames") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBPitchingCompleteGames;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'D':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[13]), "rtBallsThrown") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingDirtBallsThrown;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[13]), "ublesAllowed") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingDoublesAllowed;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'E':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'a':
                                            if (strncmp(&(json_string->getData()[13]), "rnedRun", 7) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[20]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[21]), "verage") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingEarnedRunAverage;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        if (strcmp(&(json_string->getData()[21]), "Allowed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingEarnedRunsAllowed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[13]), "rors") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingErrors;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'F':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[13]), "eldersChoice") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingFieldersChoice;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'l':
                                            if (strncmp(&(json_string->getData()[13]), "yOuts", 5) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[18]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingFlyOuts;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'I':
                                                        if (strcmp(&(json_string->getData()[19]), "ntoDoublePlays") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingFlyOutsIntoDoublePlays;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[13]), "ulBalls") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingFoulBalls;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'G':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'a':
                                            if (strncmp(&(json_string->getData()[13]), "mes", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[16]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[17]), "inished") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingGamesFinished;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[17]), "layed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingGamesPlayed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if (strcmp(&(json_string->getData()[17]), "tarted") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingGamesStarted;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strncmp(&(json_string->getData()[13]), "ound", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[17]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[18]), "allToFlyBallRatio") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingGroundBallToFlyBallRatio;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'O':
                                                        if (strncmp(&(json_string->getData()[18]), "uts", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[21]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBPitchingGroundOuts;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'I':
                                                                    if (strcmp(&(json_string->getData()[22]), "ntoDoublePlays") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBPitchingGroundOutsIntoDoublePlays;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'H':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'i':
                                            if (strncmp(&(json_string->getData()[13]), "t", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[14]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[15]), "atters") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingHitBatters;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        if (strcmp(&(json_string->getData()[15]), "Allowed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingHitsAllowed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'l':
                                                    if (strcmp(&(json_string->getData()[14]), "ds") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingHolds;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'm':
                                                    if (strcmp(&(json_string->getData()[14]), "eRunsAllowed") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingHomeRunsAllowed;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'I':
                                    if (strncmp(&(json_string->getData()[12]), "n", 1) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[13]))
                                          {
                                            case 'n':
                                                if (strncmp(&(json_string->getData()[14]), "ingsPitched", 11) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[25]))
                                                      {
                                                        case 'C':
                                                            if (strcmp(&(json_string->getData()[26]), "ompletePartial") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBPitchingInningsPitchedCompletePartial;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            if (strcmp(&(json_string->getData()[26]), "otalOuts") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBPitchingInningsPitchedTotalOuts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 't':
                                                if (strncmp(&(json_string->getData()[14]), "entional", 8) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[22]))
                                                      {
                                                        case 'B':
                                                            if (strcmp(&(json_string->getData()[23]), "alls") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBPitchingIntentionalBalls;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'W':
                                                            if (strcmp(&(json_string->getData()[23]), "alks") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_MLBPitchingIntentionalWalks;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'L':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'i':
                                            if (strncmp(&(json_string->getData()[13]), "neOuts", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[19]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingLineOuts;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'I':
                                                        if (strcmp(&(json_string->getData()[20]), "ntoDoublePlays") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingLineOutsIntoDoublePlays;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[13]), "sses") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingLosses;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'O':
                                    if (strncmp(&(json_string->getData()[12]), "pponent", 7) == 0)
                                      {
                                        switch ((unsigned char)(json_string->getData()[19]))
                                          {
                                            case 'R':
                                                if (strcmp(&(json_string->getData()[20]), "unnersLeftOnBase") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBPitchingOpponentRunnersLeftOnBase;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            case 's':
                                                if (strcmp(&(json_string->getData()[20]), "BattingAverage") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_MLBPitchingOpponentsBattingAverage;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                      }
                                    break;
                                case 'P':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'i':
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'c':
                                                    if (strcmp(&(json_string->getData()[14]), "koffs") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingPickoffs;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 't':
                                                    if (strcmp(&(json_string->getData()[14]), "chCount") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingPitchCount;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'o':
                                            if (strcmp(&(json_string->getData()[13]), "pOutsForced") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingPopOutsForced;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'Q':
                                    if (strcmp(&(json_string->getData()[12]), "ualityStarts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBPitchingQualityStarts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'R':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'e':
                                            if (strcmp(&(json_string->getData()[13]), "achedOnError") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingReachedOnError;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'u':
                                            if (strcmp(&(json_string->getData()[13]), "nnersCaughtStealing") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingRunnersCaughtStealing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'S':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'a':
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'c':
                                                    if (strncmp(&(json_string->getData()[14]), "rifice", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[20]))
                                                          {
                                                            case 'F':
                                                                if (strcmp(&(json_string->getData()[21]), "lys") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBPitchingSacrificeFlys;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'H':
                                                                if (strcmp(&(json_string->getData()[21]), "its") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBPitchingSacrificeHits;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'v':
                                                    if (strncmp(&(json_string->getData()[14]), "e", 1) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                          {
                                                            case 'O':
                                                                if (strcmp(&(json_string->getData()[16]), "pportunities") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBPitchingSaveOpportunities;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (json_string->getData()[16] == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_MLBPitchingSaves;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'h':
                                            if (strcmp(&(json_string->getData()[13]), "utouts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingShutouts;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'i':
                                            if (strcmp(&(json_string->getData()[13]), "nglesAllowed") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingSinglesAllowed;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 't':
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'o':
                                                    if (strcmp(&(json_string->getData()[14]), "lenBasesAllowed") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingStolenBasesAllowed;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'r':
                                                    if (strncmp(&(json_string->getData()[14]), "ike", 3) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[17]))
                                                          {
                                                            case 'o':
                                                                if (strncmp(&(json_string->getData()[18]), "uts", 3) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[21]))
                                                                      {
                                                                        case 'L':
                                                                            if (strcmp(&(json_string->getData()[22]), "ooking") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_MLBPitchingStrikeoutsLooking;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'P':
                                                                            if (strncmp(&(json_string->getData()[22]), "er", 2) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[24]))
                                                                                  {
                                                                                    case '9':
                                                                                        if (strcmp(&(json_string->getData()[25]), "Innings") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_MLBPitchingStrikeoutsPer9Innings;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'W':
                                                                                        if (strcmp(&(json_string->getData()[25]), "alk") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_MLBPitchingStrikeoutsPerWalk;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'S':
                                                                            if (strcmp(&(json_string->getData()[22]), "winging") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_MLBPitchingStrikeoutsSwinging;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 's':
                                                                switch ((unsigned char)(json_string->getData()[18]))
                                                                  {
                                                                    case 'L':
                                                                        if (strcmp(&(json_string->getData()[19]), "ooking") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_MLBPitchingStrikesLooking;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'S':
                                                                        if (strcmp(&(json_string->getData()[19]), "winging") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_MLBPitchingStrikesSwinging;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'T':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'o':
                                            if (strncmp(&(json_string->getData()[13]), "tal", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[16]))
                                                  {
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[17]), "asesAllowed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingTotalBasesAllowed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'R':
                                                        if (strcmp(&(json_string->getData()[17]), "unsAllowed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingTotalRunsAllowed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if (strncmp(&(json_string->getData()[17]), "trike", 5) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[22]))
                                                              {
                                                                case 'o':
                                                                    if (strcmp(&(json_string->getData()[23]), "uts") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBPitchingTotalStrikeouts;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    if (json_string->getData()[23] == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_MLBPitchingTotalStrikes;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'r':
                                            if (strcmp(&(json_string->getData()[13]), "iplesAllowed") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_MLBPitchingTriplesAllowed;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                case 'U':
                                    if (strcmp(&(json_string->getData()[12]), "nearnedRunsAllowed") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_MLBPitchingUnearnedRunsAllowed;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 'W':
                                    switch ((unsigned char)(json_string->getData()[12]))
                                      {
                                        case 'a':
                                            if (strncmp(&(json_string->getData()[13]), "lks", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[16]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingWalks;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[17]), "lusHitsPerInningPitched") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_MLBPitchingWalksPlusHitsPerInningPitched;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'i':
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'l':
                                                    if (strcmp(&(json_string->getData()[14]), "dPitches") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingWildPitches;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'n':
                                                    if (strcmp(&(json_string->getData()[14]), "s") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_MLBPitchingWins;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    default:
                        break;
                  }
              }
            break;
        case 'N':
            switch ((unsigned char)(json_string->getData()[1]))
              {
                case 'B':
                    if (strncmp(&(json_string->getData()[2]), "A", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'A':
                                if (strncmp(&(json_string->getData()[4]), "ssists", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBAAssists;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[11]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAAssistsPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'T':
                                            if (strcmp(&(json_string->getData()[11]), "oTurnoverRatio") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAAssistsToTurnoverRatio;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'B':
                                if (strncmp(&(json_string->getData()[4]), "locked", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 'A':
                                            if (strncmp(&(json_string->getData()[11]), "ttempts", 7) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[18]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBABlockedAttempts;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[19]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NBABlockedAttemptsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (strncmp(&(json_string->getData()[11]), "hots", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[15]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBABlockedShots;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[16]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NBABlockedShotsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'C':
                                if (strcmp(&(json_string->getData()[4]), "oachTechnicalFouls") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_NBACoachTechnicalFouls;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'D':
                                if (strncmp(&(json_string->getData()[4]), "efensiveRebounds", 16) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[20]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBADefensiveRebounds;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[21]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBADefensiveReboundsPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'E':
                                if (strcmp(&(json_string->getData()[4]), "jections") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_NBAEjections;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'F':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "stBreakPoints", 13) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[18]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBAFastBreakPoints;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[19]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAFastBreakPointsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'i':
                                        if (strncmp(&(json_string->getData()[5]), "eldGoal", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(json_string->getData()[13]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[20]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAFieldGoalAttempts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[21]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAFieldGoalAttemptsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[13]), "ercentage") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAFieldGoalPercentage;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 's':
                                                    if (strncmp(&(json_string->getData()[13]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[17]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAFieldGoalsMade;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[18]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAFieldGoalsMadePerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'l':
                                        if (strncmp(&(json_string->getData()[5]), "agrantFouls", 11) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[16]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBAFlagrantFouls;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[17]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAFlagrantFoulsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'r':
                                        if (strncmp(&(json_string->getData()[5]), "eeThrow", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(json_string->getData()[13]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[20]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAFreeThrowAttempts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[21]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAFreeThrowAttemptsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[13]), "ercentage") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAFreeThrowPercentage;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 's':
                                                    if (strncmp(&(json_string->getData()[13]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[17]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAFreeThrowsMade;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[18]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAFreeThrowsMadePerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'G':
                                if (strncmp(&(json_string->getData()[4]), "ames", 4) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[8]))
                                      {
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[9]), "layed") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAGamesPlayed;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'S':
                                            if (strcmp(&(json_string->getData()[9]), "tarted") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAGamesStarted;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(json_string->getData()[4]), "inutesPlayed", 12) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[16]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBAMinutesPlayed;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[17]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAMinutesPlayedPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'O':
                                if (strncmp(&(json_string->getData()[4]), "ffensiveRebounds", 16) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[20]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBAOffensiveRebounds;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[21]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAOffensiveReboundsPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'P':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strncmp(&(json_string->getData()[5]), "rsonalFouls", 11) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[16]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBAPersonalFouls;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[17]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAPersonalFoulsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[5]), "ayerTechnicalFouls") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBAPlayerTechnicalFouls;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'o':
                                        if (strncmp(&(json_string->getData()[5]), "ints", 4) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[9]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBAPoints;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'I':
                                                    if (strncmp(&(json_string->getData()[10]), "nPaint", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAPointsInPaint;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[17]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAPointsInPaintPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'O':
                                                    if (strncmp(&(json_string->getData()[10]), "ffTurnovers", 11) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[21]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAPointsOffTurnovers;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAPointsOffTurnoversPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[10]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAPointsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'R':
                                if (strncmp(&(json_string->getData()[4]), "ebounds", 7) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBARebounds;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[12]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NBAReboundsPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'S':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strncmp(&(json_string->getData()[5]), "condChancePoints", 16) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[21]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBASecondChancePoints;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBASecondChancePointsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 't':
                                        if (strncmp(&(json_string->getData()[5]), "eals", 4) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[9]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBASteals;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[10]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAStealsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'T':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strcmp(&(json_string->getData()[5]), "amTechnicalFouls") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NBATeamTechnicalFouls;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        if (strncmp(&(json_string->getData()[5]), "reePoint", 8) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(json_string->getData()[14]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[21]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAThreePointAttempts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAThreePointAttemptsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[14]), "ercentage") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBAThreePointPercentage;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 's':
                                                    if (strncmp(&(json_string->getData()[14]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[18]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBAThreePointsMade;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[19]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBAThreePointsMadePerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'u':
                                        if (strncmp(&(json_string->getData()[5]), "rnovers", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NBATurnovers;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[13]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBATurnoversPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'w':
                                        if (strncmp(&(json_string->getData()[5]), "oPoint", 6) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[11]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(json_string->getData()[12]), "ttempts", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[19]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBATwoPointAttempts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[20]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBATwoPointAttemptsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[12]), "ercentage") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NBATwoPointPercentage;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 's':
                                                    if (strncmp(&(json_string->getData()[12]), "Made", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NBATwoPointsMade;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[17]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NBATwoPointsMadePerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'C':
                    if (strncmp(&(json_string->getData()[2]), "AA", 2) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[4]))
                          {
                            case 'F':
                                if (strncmp(&(json_string->getData()[5]), "B", 1) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[6]))
                                      {
                                        case '1':
                                            if (strcmp(&(json_string->getData()[7]), "stDowns") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NCAAFB1stDowns;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case '2':
                                            if (strncmp(&(json_string->getData()[7]), "PointConversions", 16) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[23]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[24]), "ttempted") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB2PointConversionsAttempted;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[24]), "ailed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB2PointConversionsFailed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        if (strcmp(&(json_string->getData()[24]), "ade") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB2PointConversionsMade;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[24]), "assing") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB2PointConversionsPassing;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'R':
                                                        switch ((unsigned char)(json_string->getData()[24]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(json_string->getData()[25]), "ceiving") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFB2PointConversionsReceiving;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'u':
                                                                if (strcmp(&(json_string->getData()[25]), "shing") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFB2PointConversionsRushing;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case '3':
                                            if (strncmp(&(json_string->getData()[7]), "rdDownConversion", 16) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[23]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[24]), "ttempts") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB3rdDownConversionAttempts;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[24]), "erc") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB3rdDownConversionPerc;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[24]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAFB3rdDownConversions;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'V':
                                                                if (strncmp(&(json_string->getData()[25]), "ia", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[27]))
                                                                      {
                                                                        case 'P':
                                                                            switch ((unsigned char)(json_string->getData()[28]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(json_string->getData()[29]), "ss") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFB3rdDownConversionsViaPass;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'e':
                                                                                    if (strcmp(&(json_string->getData()[29]), "nalty") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFB3rdDownConversionsViaPenalty;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(json_string->getData()[28]), "ush") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFB3rdDownConversionsViaRush;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case '4':
                                            if (strncmp(&(json_string->getData()[7]), "thDownConversion", 16) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[23]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[24]), "ttempts") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB4thDownConversionAttempts;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[24]), "erc") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFB4thDownConversionPerc;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[24]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAFB4thDownConversions;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'V':
                                                                if (strncmp(&(json_string->getData()[25]), "ia", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[27]))
                                                                      {
                                                                        case 'P':
                                                                            switch ((unsigned char)(json_string->getData()[28]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(json_string->getData()[29]), "ss") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFB4thDownConversionsViaPass;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'e':
                                                                                    if (strcmp(&(json_string->getData()[29]), "nalty") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFB4thDownConversionsViaPenalty;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(json_string->getData()[28]), "ush") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFB4thDownConversionsViaRush;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'B':
                                            if (strncmp(&(json_string->getData()[7]), "locked", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'F':
                                                        if (strncmp(&(json_string->getData()[14]), "ieldGoalReturns", 15) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[29]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturns;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case '1':
                                                                    if (strcmp(&(json_string->getData()[30]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturns10PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if (strcmp(&(json_string->getData()[30]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturns20PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(json_string->getData()[30]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturns30PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(json_string->getData()[30]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturns40PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if (strcmp(&(json_string->getData()[30]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturns50PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'A':
                                                                    if (strcmp(&(json_string->getData()[30]), "verageReturn") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturnsAverageReturn;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'L':
                                                                    if (strcmp(&(json_string->getData()[30]), "ongestReturn") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturnsLongestReturn;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'T':
                                                                    if (strncmp(&(json_string->getData()[30]), "o", 1) == 0)
                                                                      {
                                                                        switch ((unsigned char)(json_string->getData()[31]))
                                                                          {
                                                                            case 't':
                                                                                if (strcmp(&(json_string->getData()[32]), "alYards") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturnsTotalYards;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'u':
                                                                                if (strcmp(&(json_string->getData()[32]), "chdowns") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBBlockedFieldGoalReturnsTouchdowns;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'K':
                                                        if (strcmp(&(json_string->getData()[14]), "icks") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBBlockedKicks;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'P':
                                                        if (strncmp(&(json_string->getData()[14]), "untReturn", 9) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[23]))
                                                              {
                                                                case '1':
                                                                    if (strcmp(&(json_string->getData()[24]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedPuntReturn10PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if (strcmp(&(json_string->getData()[24]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedPuntReturn20PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(json_string->getData()[24]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedPuntReturn30PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(json_string->getData()[24]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedPuntReturn40PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if (strcmp(&(json_string->getData()[24]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBBlockedPuntReturn50PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    switch ((unsigned char)(json_string->getData()[24]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBBlockedPuntReturns;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'A':
                                                                            if (strcmp(&(json_string->getData()[25]), "verageReturn") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBBlockedPuntReturnsAverageReturn;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(json_string->getData()[25]), "ongestReturn") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBBlockedPuntReturnsLongestReturn;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'T':
                                                                            if (strncmp(&(json_string->getData()[25]), "o", 1) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[26]))
                                                                                  {
                                                                                    case 't':
                                                                                        if (strcmp(&(json_string->getData()[27]), "alYards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBBlockedPuntReturnsTotalYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'u':
                                                                                        if (strcmp(&(json_string->getData()[27]), "chdowns") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBBlockedPuntReturnsTouchdowns;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'E':
                                            if (strncmp(&(json_string->getData()[7]), "xtraPoints", 10) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[17]))
                                                  {
                                                    case 'A':
                                                        if (strncmp(&(json_string->getData()[18]), "ttempted", 8) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[26]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBExtraPointsAttempted;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case '2':
                                                                    if (strcmp(&(json_string->getData()[27]), "PointConversion") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBExtraPointsAttempted2PointConversion;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'K':
                                                                    if (strcmp(&(json_string->getData()[27]), "icking") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBExtraPointsAttemptedKicking;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'B':
                                                        if (strcmp(&(json_string->getData()[18]), "locked") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBExtraPointsBlocked;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'M':
                                                        if (strncmp(&(json_string->getData()[18]), "ade", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[21]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBExtraPointsMade;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case '2':
                                                                    if (strcmp(&(json_string->getData()[22]), "PointConversion") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBExtraPointsMade2PointConversion;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'K':
                                                                    if (strcmp(&(json_string->getData()[22]), "icking") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBExtraPointsMadeKicking;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[18]), "erc") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBExtraPointsPerc;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'F':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[8]), "eldGoal", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                          {
                                                            case 'R':
                                                                if (strncmp(&(json_string->getData()[16]), "eturns", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[22]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBFieldGoalReturns;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case '1':
                                                                            if (strcmp(&(json_string->getData()[23]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturns10PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if (strcmp(&(json_string->getData()[23]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturns20PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '3':
                                                                            if (strcmp(&(json_string->getData()[23]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturns30PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '4':
                                                                            if (strcmp(&(json_string->getData()[23]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturns40PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if (strcmp(&(json_string->getData()[23]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturns50PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'A':
                                                                            if (strcmp(&(json_string->getData()[23]), "verageReturn") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturnsAverageReturn;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(json_string->getData()[23]), "ongestReturn") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFieldGoalReturnsLongestReturn;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'T':
                                                                            if (strncmp(&(json_string->getData()[23]), "o", 1) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[24]))
                                                                                  {
                                                                                    case 't':
                                                                                        if (strcmp(&(json_string->getData()[25]), "alYards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBFieldGoalReturnsTotalYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'u':
                                                                                        if (strcmp(&(json_string->getData()[25]), "chdowns") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBFieldGoalReturnsTouchdowns;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 's':
                                                                switch ((unsigned char)(json_string->getData()[16]))
                                                                  {
                                                                    case 'A':
                                                                        if (strncmp(&(json_string->getData()[17]), "ttempted", 8) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[25]))
                                                                              {
                                                                                case 0:
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBFieldGoalsAttempted;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                case '1':
                                                                                    if (strcmp(&(json_string->getData()[26]), "to19Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsAttempted1to19Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '2':
                                                                                    if (strcmp(&(json_string->getData()[26]), "0to29Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsAttempted20to29Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '3':
                                                                                    if (strcmp(&(json_string->getData()[26]), "0to39Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsAttempted30to39Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '4':
                                                                                    if (strcmp(&(json_string->getData()[26]), "0to49Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsAttempted40to49Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '5':
                                                                                    if (strcmp(&(json_string->getData()[26]), "0PlusYards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsAttempted50PlusYards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'B':
                                                                        if (strcmp(&(json_string->getData()[17]), "locked") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBFieldGoalsBlocked;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'L':
                                                                        if (strcmp(&(json_string->getData()[17]), "ongestMade") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBFieldGoalsLongestMade;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'M':
                                                                        if (strncmp(&(json_string->getData()[17]), "ade", 3) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[20]))
                                                                              {
                                                                                case 0:
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBFieldGoalsMade;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                case '1':
                                                                                    if (strcmp(&(json_string->getData()[21]), "to19Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsMade1to19Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '2':
                                                                                    if (strcmp(&(json_string->getData()[21]), "0to29Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsMade20to29Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '3':
                                                                                    if (strcmp(&(json_string->getData()[21]), "0to39Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsMade30to39Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '4':
                                                                                    if (strcmp(&(json_string->getData()[21]), "0to49Yards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsMade40to49Yards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case '5':
                                                                                    if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFieldGoalsMade50PlusYards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'P':
                                                                        if (strcmp(&(json_string->getData()[17]), "erc") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBFieldGoalsPerc;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'o':
                                                    if (strcmp(&(json_string->getData()[8]), "rcedFumbles") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAFBForcedFumbles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(json_string->getData()[8]), "mbles", 5) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[13]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAFBFumbles;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'F':
                                                                if (strcmp(&(json_string->getData()[14]), "orced") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBFumblesForced;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[14]), "ost") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBFumblesLost;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'O':
                                                                switch ((unsigned char)(json_string->getData()[14]))
                                                                  {
                                                                    case 'p':
                                                                        if (strncmp(&(json_string->getData()[15]), "ponent", 6) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[21]))
                                                                              {
                                                                                case 'R':
                                                                                    if (strcmp(&(json_string->getData()[22]), "ecovery") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFumblesOpponentRecovery;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'T':
                                                                                    if (strcmp(&(json_string->getData()[22]), "ouchdownsFromRecovery") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFumblesOpponentTouchdownsFromRecovery;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'u':
                                                                        if (strcmp(&(json_string->getData()[15]), "tOfBounds") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBFumblesOutOfBounds;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'w':
                                                                        if (strncmp(&(json_string->getData()[15]), "n", 1) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[16]))
                                                                              {
                                                                                case 'R':
                                                                                    if (strcmp(&(json_string->getData()[17]), "ecovery") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFumblesOwnRecovery;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'T':
                                                                                    if (strcmp(&(json_string->getData()[17]), "ouchdownsFromRecovery") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBFumblesOwnTouchdownsFromRecovery;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'R':
                                                                if (strncmp(&(json_string->getData()[14]), "ecovered", 8) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[22]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBFumblesRecovered;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'F':
                                                                            if (strcmp(&(json_string->getData()[23]), "orTouchdowns") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFumblesRecoveredForTouchdowns;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'Y':
                                                                if (strncmp(&(json_string->getData()[14]), "ardsFromO", 9) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[23]))
                                                                      {
                                                                        case 'p':
                                                                            if (strcmp(&(json_string->getData()[24]), "ponentRecovery") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFumblesYardsFromOpponentRecovery;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'w':
                                                                            if (strcmp(&(json_string->getData()[24]), "nRecovery") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBFumblesYardsFromOwnRecovery;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'G':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(json_string->getData()[8]), "mes", 3) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[11]))
                                                          {
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[12]), "layed") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBGamesPlayed;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'S':
                                                                if (strcmp(&(json_string->getData()[12]), "tarted") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBGamesStarted;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'o':
                                                    if (strncmp(&(json_string->getData()[8]), "alEfficiency", 12) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[20]))
                                                          {
                                                            case 'A':
                                                                if (strcmp(&(json_string->getData()[21]), "ttempts") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBGoalEfficiencyAttempts;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBGoalEfficiencyPerc;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if (strcmp(&(json_string->getData()[21]), "ouchdowns") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBGoalEfficiencyTouchdowns;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'I':
                                            if (strncmp(&(json_string->getData()[7]), "nterceptions", 12) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[19]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAFBInterceptions;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'L':
                                                        if (strcmp(&(json_string->getData()[20]), "ongestInterception") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBInterceptionsLongestInterception;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(json_string->getData()[20]), "ouchdowns") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBInterceptionsTouchdowns;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'Y':
                                                        if (strcmp(&(json_string->getData()[20]), "ards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBInterceptionsYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'K':
                                            if (strncmp(&(json_string->getData()[7]), "ickoff", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'R':
                                                        if (strncmp(&(json_string->getData()[14]), "eturns", 6) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[20]))
                                                              {
                                                                case '1':
                                                                    if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturns10PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '2':
                                                                    if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturns20PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturns30PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturns40PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '5':
                                                                    if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturns50PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'A':
                                                                    if (strcmp(&(json_string->getData()[21]), "verageRun") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturnsAverageRun;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'F':
                                                                    if (strcmp(&(json_string->getData()[21]), "airCatches") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturnsFairCatches;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'L':
                                                                    if (strcmp(&(json_string->getData()[21]), "ongestKickReturn") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturnsLongestKickReturn;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'R':
                                                                    if (strcmp(&(json_string->getData()[21]), "eturns") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturnsReturns;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'T':
                                                                    if (strcmp(&(json_string->getData()[21]), "ouchdowns") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturnsTouchdowns;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'Y':
                                                                    if (strcmp(&(json_string->getData()[21]), "ards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAFBKickoffReturnsYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[14]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(json_string->getData()[15]), "verage", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[21]))
                                                                      {
                                                                        case 'G':
                                                                            if (strcmp(&(json_string->getData()[22]), "rossYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBKickoffsAverageGrossYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(json_string->getData()[22]), "etYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBKickoffsAverageNetYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(json_string->getData()[22]), "eturnYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBKickoffsAverageReturnYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'E':
                                                                if (strcmp(&(json_string->getData()[15]), "ndZoneKicks") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBKickoffsEndZoneKicks;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'G':
                                                                if (strcmp(&(json_string->getData()[15]), "rossYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBKickoffsGrossYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'I':
                                                                if (strncmp(&(json_string->getData()[15]), "nsideOpponents20YardLine", 24) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[39]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBKickoffsInsideOpponents20YardLine;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[40]), "erc") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBKickoffsInsideOpponents20YardLinePerc;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'K':
                                                                if (strcmp(&(json_string->getData()[15]), "icks") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBKickoffsKicks;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[15]), "ongestKick") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBKickoffsLongestKick;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(json_string->getData()[15]), "etYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBKickoffsNetYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(json_string->getData()[15]), "eturned") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBKickoffsReturned;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(json_string->getData()[15]), "o", 1) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[16]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(json_string->getData()[17]), "alReturnYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBKickoffsTotalReturnYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'u':
                                                                            if (strncmp(&(json_string->getData()[17]), "chbacks", 7) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[24]))
                                                                                  {
                                                                                    case 0:
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBKickoffsTouchbacks;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    case 'P':
                                                                                        if (strcmp(&(json_string->getData()[25]), "erc") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBKickoffsTouchbacksPerc;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'M':
                                            if (strncmp(&(json_string->getData()[7]), "isc", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[10]))
                                                  {
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[11]), "ssistedTackles") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBMiscAssistedTackles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'C':
                                                        if (strcmp(&(json_string->getData()[11]), "ombinedTackles") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBMiscCombinedTackles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'F':
                                                        switch ((unsigned char)(json_string->getData()[11]))
                                                          {
                                                            case 'o':
                                                                if (strcmp(&(json_string->getData()[12]), "rcedFumbles") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBMiscForcedFumbles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'u':
                                                                if (strcmp(&(json_string->getData()[12]), "mblesRecovered") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBMiscFumblesRecovered;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(json_string->getData()[11]), "ackles") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBMiscTackles;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'P':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(json_string->getData()[8]), "ss", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[10]))
                                                          {
                                                            case 'e':
                                                                if (strcmp(&(json_string->getData()[11]), "sDefended") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBPassesDefended;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'i':
                                                                if (strncmp(&(json_string->getData()[11]), "ng", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[13]))
                                                                      {
                                                                        case '1':
                                                                            switch ((unsigned char)(json_string->getData()[14]))
                                                                              {
                                                                                case '0':
                                                                                    if (strcmp(&(json_string->getData()[15]), "PlusYards") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassing10PlusYards;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 's':
                                                                                    if (strcmp(&(json_string->getData()[15]), "tDowns") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassing1stDowns;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case '2':
                                                                            if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassing20PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '3':
                                                                            if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassing30PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '4':
                                                                            if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassing40PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassing50PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'A':
                                                                            switch ((unsigned char)(json_string->getData()[14]))
                                                                              {
                                                                                case 't':
                                                                                    if (strcmp(&(json_string->getData()[15]), "tempts") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassingAttempts;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'v':
                                                                                    if (strncmp(&(json_string->getData()[15]), "erageYardsPer", 13) == 0)
                                                                                      {
                                                                                        switch ((unsigned char)(json_string->getData()[28]))
                                                                                          {
                                                                                            case 'A':
                                                                                                if (strcmp(&(json_string->getData()[29]), "ttempt") == 0)
                                                                                                      {
                                                                                                        the_open_enum.in_known_list = true;
                                                                                                        the_open_enum.list_value = Value_NCAAFBPassingAverageYardsPerAttempt;
                                                                                                        goto open_enum_is_done;
                                                                                                      }
                                                                                                break;
                                                                                            case 'C':
                                                                                                if (strcmp(&(json_string->getData()[29]), "ompletion") == 0)
                                                                                                      {
                                                                                                        the_open_enum.in_known_list = true;
                                                                                                        the_open_enum.list_value = Value_NCAAFBPassingAverageYardsPerCompletion;
                                                                                                        goto open_enum_is_done;
                                                                                                      }
                                                                                                break;
                                                                                            default:
                                                                                                break;
                                                                                          }
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'C':
                                                                            if (strncmp(&(json_string->getData()[14]), "ompletion", 9) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[23]))
                                                                                  {
                                                                                    case 'P':
                                                                                        if (strcmp(&(json_string->getData()[24]), "erc") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPassingCompletionPerc;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 's':
                                                                                        if (json_string->getData()[24] == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPassingCompletions;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'G':
                                                                            if (strcmp(&(json_string->getData()[14]), "rossYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassingGrossYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'I':
                                                                            if (strncmp(&(json_string->getData()[14]), "nterception", 11) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[25]))
                                                                                  {
                                                                                    case 'P':
                                                                                        if (strcmp(&(json_string->getData()[26]), "erc") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPassingInterceptionPerc;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 's':
                                                                                        switch ((unsigned char)(json_string->getData()[26]))
                                                                                          {
                                                                                            case 0:
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NCAAFBPassingInterceptions;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            case 'R':
                                                                                                if (strcmp(&(json_string->getData()[27]), "eturnedForTouchdown") == 0)
                                                                                                      {
                                                                                                        the_open_enum.in_known_list = true;
                                                                                                        the_open_enum.list_value = Value_NCAAFBPassingInterceptionsReturnedForTouchdown;
                                                                                                        goto open_enum_is_done;
                                                                                                      }
                                                                                                break;
                                                                                            default:
                                                                                                break;
                                                                                          }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(json_string->getData()[14]), "ongestPass") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassingLongestPass;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(json_string->getData()[14]), "etYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPassingNetYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'R':
                                                                            switch ((unsigned char)(json_string->getData()[14]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(json_string->getData()[15]), "ting") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassingRating;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'e':
                                                                                    if (strcmp(&(json_string->getData()[15]), "dZoneAttempts") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassingRedZoneAttempts;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        case 'S':
                                                                            if (strncmp(&(json_string->getData()[14]), "acked", 5) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[19]))
                                                                                  {
                                                                                    case 0:
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassingSacked;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    case 'Y':
                                                                                        if (strcmp(&(json_string->getData()[20]), "ardsLost") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPassingSackedYardsLost;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'T':
                                                                            switch ((unsigned char)(json_string->getData()[14]))
                                                                              {
                                                                                case 'a':
                                                                                    if (strcmp(&(json_string->getData()[15]), "ckledForSafety") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPassingTackledForSafety;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'o':
                                                                                    switch ((unsigned char)(json_string->getData()[15]))
                                                                                      {
                                                                                        case 't':
                                                                                            if (strcmp(&(json_string->getData()[16]), "alYards") == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NCAAFBPassingTotalYards;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        case 'u':
                                                                                            if (strncmp(&(json_string->getData()[16]), "chdown", 6) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(json_string->getData()[22]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(json_string->getData()[23]), "erc") == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NCAAFBPassingTouchdownPerc;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (json_string->getData()[23] == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NCAAFBPassingTouchdowns;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'e':
                                                    if (strncmp(&(json_string->getData()[8]), "nalties", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAFBPenalties;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case '1':
                                                                if (strcmp(&(json_string->getData()[16]), "stDowns") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBPenalties1stDowns;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'Y':
                                                                if (strcmp(&(json_string->getData()[16]), "ards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBPenaltiesYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(json_string->getData()[8]), "nt", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[10]))
                                                          {
                                                            case 'R':
                                                                if (strncmp(&(json_string->getData()[11]), "eturns", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[17]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBPuntReturns;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case '1':
                                                                            if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturns10PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '2':
                                                                            if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturns20PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '3':
                                                                            if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturns30PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '4':
                                                                            if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturns40PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case '5':
                                                                            if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturns50PlusYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'A':
                                                                            if (strcmp(&(json_string->getData()[18]), "verageRun") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturnsAverageRun;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'F':
                                                                            if (strcmp(&(json_string->getData()[18]), "airCatches") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturnsFairCatches;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(json_string->getData()[18]), "ongestKickReturn") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturnsLongestKickReturn;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'T':
                                                                            if (strcmp(&(json_string->getData()[18]), "ouchdowns") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturnsTouchdowns;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'Y':
                                                                            if (strcmp(&(json_string->getData()[18]), "ards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntReturnsYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'i':
                                                                if (strncmp(&(json_string->getData()[11]), "ng", 2) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[13]))
                                                                      {
                                                                        case 'A':
                                                                            if (strncmp(&(json_string->getData()[14]), "verage", 6) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[20]))
                                                                                  {
                                                                                    case 'G':
                                                                                        if (strcmp(&(json_string->getData()[21]), "rossYards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingAverageGrossYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'N':
                                                                                        if (strcmp(&(json_string->getData()[21]), "etYards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingAverageNetYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'R':
                                                                                        if (strcmp(&(json_string->getData()[21]), "eturnYards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingAverageReturnYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'B':
                                                                            if (strcmp(&(json_string->getData()[14]), "locked") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntingBlocked;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'G':
                                                                            if (strcmp(&(json_string->getData()[14]), "rossYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntingGrossYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'I':
                                                                            if (strncmp(&(json_string->getData()[14]), "nsideOpponents20YardLine", 24) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[38]))
                                                                                  {
                                                                                    case 0:
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPuntingInsideOpponents20YardLine;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    case 'P':
                                                                                        if (strcmp(&(json_string->getData()[39]), "erc") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingInsideOpponents20YardLinePerc;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'L':
                                                                            if (strcmp(&(json_string->getData()[14]), "ongestPunt") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntingLongestPunt;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(json_string->getData()[14]), "etYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntingNetYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[14]), "unts") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAFBPuntingPunts;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'R':
                                                                            if (strncmp(&(json_string->getData()[14]), "eturn", 5) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[19]))
                                                                                  {
                                                                                    case 'Y':
                                                                                        if (strcmp(&(json_string->getData()[20]), "ards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingReturnYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'e':
                                                                                        if (strcmp(&(json_string->getData()[20]), "d") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingReturned;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        case 'T':
                                                                            if (strncmp(&(json_string->getData()[14]), "ouchbacks", 9) == 0)
                                                                              {
                                                                                switch ((unsigned char)(json_string->getData()[23]))
                                                                                  {
                                                                                    case 0:
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBPuntingTouchbacks;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    case 'P':
                                                                                        if (strcmp(&(json_string->getData()[24]), "erc") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBPuntingTouchbacksPerc;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'Q':
                                            if (strcmp(&(json_string->getData()[7]), "uarterbackHits") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NCAAFBQuarterbackHits;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'R':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'e':
                                                    switch ((unsigned char)(json_string->getData()[8]))
                                                      {
                                                        case 'c':
                                                            if (strncmp(&(json_string->getData()[9]), "eiving", 6) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[15]))
                                                                  {
                                                                    case '1':
                                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                                          {
                                                                            case '0':
                                                                                if (strcmp(&(json_string->getData()[17]), "PlusYards") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBReceiving10PlusYards;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 's':
                                                                                if (strcmp(&(json_string->getData()[17]), "tDowns") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBReceiving1stDowns;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    case '2':
                                                                        if (strcmp(&(json_string->getData()[16]), "0PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceiving20PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '3':
                                                                        if (strcmp(&(json_string->getData()[16]), "0PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceiving30PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '4':
                                                                        if (strcmp(&(json_string->getData()[16]), "0PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceiving40PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '5':
                                                                        if (strcmp(&(json_string->getData()[16]), "0PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceiving50PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'A':
                                                                        if (strcmp(&(json_string->getData()[16]), "verageReception") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceivingAverageReception;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'F':
                                                                        if (strcmp(&(json_string->getData()[16]), "umbledOnReception") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceivingFumbledOnReception;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'L':
                                                                        if (strcmp(&(json_string->getData()[16]), "ongestReception") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceivingLongestReception;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'R':
                                                                        if (strncmp(&(json_string->getData()[16]), "e", 1) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[17]))
                                                                              {
                                                                                case 'c':
                                                                                    if (strcmp(&(json_string->getData()[18]), "eptions") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBReceivingReceptions;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'd':
                                                                                    if (strcmp(&(json_string->getData()[18]), "ZoneTargets") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBReceivingRedZoneTargets;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'T':
                                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                                          {
                                                                            case 'a':
                                                                                if (strcmp(&(json_string->getData()[17]), "rgets") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBReceivingTargets;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'o':
                                                                                switch ((unsigned char)(json_string->getData()[17]))
                                                                                  {
                                                                                    case 't':
                                                                                        if (strcmp(&(json_string->getData()[18]), "alYards") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBReceivingTotalYards;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'u':
                                                                                        if (strcmp(&(json_string->getData()[18]), "chdowns") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NCAAFBReceivingTouchdowns;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    case 'Y':
                                                                        if (strcmp(&(json_string->getData()[16]), "ardsAfterCompletion") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBReceivingYardsAfterCompletion;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'd':
                                                            if (strncmp(&(json_string->getData()[9]), "ZoneEfficiency", 14) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[23]))
                                                                  {
                                                                    case 'A':
                                                                        if (strcmp(&(json_string->getData()[24]), "ttempts") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRedZoneEfficiencyAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'C':
                                                                        if (strcmp(&(json_string->getData()[24]), "onversions") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRedZoneEfficiencyConversions;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'P':
                                                                        if (strcmp(&(json_string->getData()[24]), "erc") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRedZoneEfficiencyPerc;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(json_string->getData()[8]), "shing", 5) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[13]))
                                                          {
                                                            case '1':
                                                                switch ((unsigned char)(json_string->getData()[14]))
                                                                  {
                                                                    case '0':
                                                                        if (strcmp(&(json_string->getData()[15]), "PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRushing10PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 's':
                                                                        if (strncmp(&(json_string->getData()[15]), "tDown", 5) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[20]))
                                                                              {
                                                                                case 'P':
                                                                                    if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBRushing1stDownPerc;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 's':
                                                                                    if (json_string->getData()[21] == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NCAAFBRushing1stDowns;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushing20PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushing30PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushing40PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(json_string->getData()[14]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushing50PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'A':
                                                                switch ((unsigned char)(json_string->getData()[14]))
                                                                  {
                                                                    case 't':
                                                                        if (strcmp(&(json_string->getData()[15]), "tempts") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRushingAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'v':
                                                                        if (strcmp(&(json_string->getData()[15]), "erageRush") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRushingAverageRush;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'F':
                                                                if (strcmp(&(json_string->getData()[14]), "umbledOnRush") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushingFumbledOnRush;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[14]), "ongestRush") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushingLongestRush;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(json_string->getData()[14]), "edZoneAttempts") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBRushingRedZoneAttempts;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                switch ((unsigned char)(json_string->getData()[14]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(json_string->getData()[15]), "ckledForSafety") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBRushingTackledForSafety;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'o':
                                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                                          {
                                                                            case 't':
                                                                                if (strcmp(&(json_string->getData()[16]), "alYards") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBRushingTotalYards;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'u':
                                                                                if (strcmp(&(json_string->getData()[16]), "chdowns") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NCAAFBRushingTouchdowns;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'S':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'a':
                                                    switch ((unsigned char)(json_string->getData()[8]))
                                                      {
                                                        case 'c':
                                                            if (strncmp(&(json_string->getData()[9]), "k", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[10]))
                                                                  {
                                                                    case 'Y':
                                                                        if (strcmp(&(json_string->getData()[11]), "ards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBSackYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 's':
                                                                        if (json_string->getData()[11] == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBSacks;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'f':
                                                            if (strcmp(&(json_string->getData()[9]), "eties") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAFBSafeties;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'p':
                                                    if (strncmp(&(json_string->getData()[8]), "ecialTeams", 10) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[18]))
                                                          {
                                                            case 'A':
                                                                if (strcmp(&(json_string->getData()[19]), "ssistedTackles") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBSpecialTeamsAssistedTackles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'C':
                                                                if (strcmp(&(json_string->getData()[19]), "ombinedTackles") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBSpecialTeamsCombinedTackles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'F':
                                                                switch ((unsigned char)(json_string->getData()[19]))
                                                                  {
                                                                    case 'o':
                                                                        if (strcmp(&(json_string->getData()[20]), "rcedFumbles") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBSpecialTeamsForcedFumbles;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'u':
                                                                        if (strcmp(&(json_string->getData()[20]), "mblesRecovered") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAFBSpecialTeamsFumblesRecovered;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if (strcmp(&(json_string->getData()[19]), "otalTackles") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAFBSpecialTeamsTotalTackles;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'T':
                                            if (strncmp(&(json_string->getData()[7]), "ackles", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAFBTackles;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[14]), "ssisted") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBTacklesAssisted;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'C':
                                                        if (strcmp(&(json_string->getData()[14]), "ombined") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBTacklesCombined;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[14]), "orLoss") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAFBTacklesForLoss;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(json_string->getData()[5]), "B", 1) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[6]))
                                      {
                                        case 'A':
                                            if (strncmp(&(json_string->getData()[7]), "ssists", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBAssists;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[14]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBAssistsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(json_string->getData()[14]), "oTurnoverRatio") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBAssistsToTurnoverRatio;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'B':
                                            if (strncmp(&(json_string->getData()[7]), "locked", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'A':
                                                        if (strncmp(&(json_string->getData()[14]), "ttempts", 7) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[21]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBBlockedAttempts;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'P':
                                                                    if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAMBBlockedAttemptsPerGame;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'S':
                                                        if (strncmp(&(json_string->getData()[14]), "hots", 4) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[18]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBBlockedShots;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'P':
                                                                    if (strcmp(&(json_string->getData()[19]), "erGame") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NCAAMBBlockedShotsPerGame;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'C':
                                            if (strcmp(&(json_string->getData()[7]), "oachTechnicalFouls") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NCAAMBCoachTechnicalFouls;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'D':
                                            if (strncmp(&(json_string->getData()[7]), "efensiveRebounds", 16) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[23]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBDefensiveRebounds;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[24]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBDefensiveReboundsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'E':
                                            if (strcmp(&(json_string->getData()[7]), "jections") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NCAAMBEjections;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'F':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'a':
                                                    if (strncmp(&(json_string->getData()[8]), "stBreakPoints", 13) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[21]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBFastBreakPoints;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBFastBreakPointsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[8]), "eldGoal", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(json_string->getData()[16]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[23]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBFieldGoalAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[24]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBFieldGoalAttemptsPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[16]), "ercentage") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBFieldGoalPercentage;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(json_string->getData()[16]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[20]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBFieldGoalsMade;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[21]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBFieldGoalsMadePerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'l':
                                                    if (strncmp(&(json_string->getData()[8]), "agrantFouls", 11) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[19]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBFlagrantFouls;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[20]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBFlagrantFoulsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'r':
                                                    if (strncmp(&(json_string->getData()[8]), "eeThrow", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(json_string->getData()[16]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[23]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBFreeThrowAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[24]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBFreeThrowAttemptsPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[16]), "ercentage") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBFreeThrowPercentage;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(json_string->getData()[16]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[20]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBFreeThrowsMade;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[21]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBFreeThrowsMadePerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'G':
                                            if (strncmp(&(json_string->getData()[7]), "ames", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[11]))
                                                  {
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[12]), "layed") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBGamesPlayed;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'S':
                                                        if (strcmp(&(json_string->getData()[12]), "tarted") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBGamesStarted;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'M':
                                            if (strncmp(&(json_string->getData()[7]), "inutesPlayed", 12) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[19]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBMinutesPlayed;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[20]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBMinutesPlayedPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'O':
                                            if (strncmp(&(json_string->getData()[7]), "ffensiveRebounds", 16) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[23]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBOffensiveRebounds;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[24]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBOffensiveReboundsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'P':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'e':
                                                    if (strncmp(&(json_string->getData()[8]), "rsonalFouls", 11) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[19]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBPersonalFouls;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[20]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBPersonalFoulsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'l':
                                                    if (strcmp(&(json_string->getData()[8]), "ayerTechnicalFouls") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBPlayerTechnicalFouls;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'o':
                                                    if (strncmp(&(json_string->getData()[8]), "ints", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[12]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBPoints;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'I':
                                                                if (strncmp(&(json_string->getData()[13]), "nPaint", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[19]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBPointsInPaint;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[20]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBPointsInPaintPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'O':
                                                                if (strncmp(&(json_string->getData()[13]), "ffTurnovers", 11) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[24]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBPointsOffTurnovers;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[25]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBPointsOffTurnoversPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[13]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBPointsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'R':
                                            if (strncmp(&(json_string->getData()[7]), "ebounds", 7) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[14]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBRebounds;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[15]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NCAAMBReboundsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'e':
                                                    if (strncmp(&(json_string->getData()[8]), "condChancePoints", 16) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[24]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBSecondChancePoints;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[25]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBSecondChancePointsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 't':
                                                    if (strncmp(&(json_string->getData()[8]), "eals", 4) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[12]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBSteals;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[13]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBStealsPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'T':
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[8]), "amTechnicalFouls") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NCAAMBTeamTechnicalFouls;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'h':
                                                    if (strncmp(&(json_string->getData()[8]), "reePoint", 8) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(json_string->getData()[17]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[24]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBThreePointAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[25]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBThreePointAttemptsPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[17]), "ercentage") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBThreePointPercentage;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(json_string->getData()[17]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[21]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBThreePointsMade;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBThreePointsMadePerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'u':
                                                    if (strncmp(&(json_string->getData()[8]), "rnovers", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[15]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NCAAMBTurnovers;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[16]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBTurnoversPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'w':
                                                    if (strncmp(&(json_string->getData()[8]), "oPoint", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[14]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(json_string->getData()[15]), "ttempts", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[22]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBTwoPointAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[23]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBTwoPointAttemptsPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[15]), "ercentage") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NCAAMBTwoPointPercentage;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (strncmp(&(json_string->getData()[15]), "Made", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[19]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NCAAMBTwoPointsMade;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[20]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NCAAMBTwoPointsMadePerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'F':
                    if (strncmp(&(json_string->getData()[2]), "L", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case '1':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'P':
                                        if (strcmp(&(json_string->getData()[5]), "ointSafety") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NFL1PointSafety;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 's':
                                        if (strcmp(&(json_string->getData()[5]), "tDowns") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NFL1stDowns;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case '2':
                                if (strncmp(&(json_string->getData()[4]), "PointConversions", 16) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[20]))
                                      {
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[21]), "ttempted") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL2PointConversionsAttempted;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'F':
                                            if (strcmp(&(json_string->getData()[21]), "ailed") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL2PointConversionsFailed;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'M':
                                            if (strcmp(&(json_string->getData()[21]), "ade") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL2PointConversionsMade;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[21]), "assing") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL2PointConversionsPassing;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'R':
                                            switch ((unsigned char)(json_string->getData()[21]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[22]), "ceiving") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFL2PointConversionsReceiving;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'u':
                                                    if (strcmp(&(json_string->getData()[22]), "shing") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFL2PointConversionsRushing;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case '3':
                                if (strncmp(&(json_string->getData()[4]), "rdDownConversion", 16) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[20]))
                                      {
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[21]), "ttempts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL3rdDownConversionAttempts;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL3rdDownConversionPerc;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[21]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NFL3rdDownConversions;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'V':
                                                    if (strncmp(&(json_string->getData()[22]), "ia", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[24]))
                                                          {
                                                            case 'P':
                                                                switch ((unsigned char)(json_string->getData()[25]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(json_string->getData()[26]), "ss") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFL3rdDownConversionsViaPass;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'e':
                                                                        if (strcmp(&(json_string->getData()[26]), "nalty") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFL3rdDownConversionsViaPenalty;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(json_string->getData()[25]), "ush") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFL3rdDownConversionsViaRush;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case '4':
                                if (strncmp(&(json_string->getData()[4]), "thDownConversion", 16) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[20]))
                                      {
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[21]), "ttempts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL4thDownConversionAttempts;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFL4thDownConversionPerc;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[21]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NFL4thDownConversions;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'V':
                                                    if (strncmp(&(json_string->getData()[22]), "ia", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[24]))
                                                          {
                                                            case 'P':
                                                                switch ((unsigned char)(json_string->getData()[25]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(json_string->getData()[26]), "ss") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFL4thDownConversionsViaPass;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'e':
                                                                        if (strcmp(&(json_string->getData()[26]), "nalty") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFL4thDownConversionsViaPenalty;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(json_string->getData()[25]), "ush") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFL4thDownConversionsViaRush;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'B':
                                if (strncmp(&(json_string->getData()[4]), "locked", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 'F':
                                            if (strncmp(&(json_string->getData()[11]), "ieldGoalReturns", 15) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[26]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLBlockedFieldGoalReturns;
                                                            goto open_enum_is_done;
                                                          }
                                                    case '1':
                                                        if (strcmp(&(json_string->getData()[27]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturns10PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '2':
                                                        if (strcmp(&(json_string->getData()[27]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturns20PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '3':
                                                        if (strcmp(&(json_string->getData()[27]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturns30PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '4':
                                                        if (strcmp(&(json_string->getData()[27]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturns40PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '5':
                                                        if (strcmp(&(json_string->getData()[27]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturns50PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[27]), "verageReturn") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturnsAverageReturn;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'L':
                                                        if (strcmp(&(json_string->getData()[27]), "ongestReturn") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedFieldGoalReturnsLongestReturn;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if (strncmp(&(json_string->getData()[27]), "o", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[28]))
                                                              {
                                                                case 't':
                                                                    if (strcmp(&(json_string->getData()[29]), "alYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLBlockedFieldGoalReturnsTotalYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'u':
                                                                    if (strcmp(&(json_string->getData()[29]), "chdowns") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLBlockedFieldGoalReturnsTouchdowns;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'K':
                                            if (strcmp(&(json_string->getData()[11]), "icks") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLBlockedKicks;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'P':
                                            if (strncmp(&(json_string->getData()[11]), "untReturn", 9) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[20]))
                                                  {
                                                    case '1':
                                                        if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedPuntReturn10PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '2':
                                                        if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedPuntReturn20PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '3':
                                                        if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedPuntReturn30PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '4':
                                                        if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedPuntReturn40PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '5':
                                                        if (strcmp(&(json_string->getData()[21]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLBlockedPuntReturn50PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[21]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLBlockedPuntReturns;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'A':
                                                                if (strcmp(&(json_string->getData()[22]), "verageReturn") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLBlockedPuntReturnsAverageReturn;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[22]), "ongestReturn") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLBlockedPuntReturnsLongestReturn;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(json_string->getData()[22]), "o", 1) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[23]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(json_string->getData()[24]), "alYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLBlockedPuntReturnsTotalYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'u':
                                                                            if (strcmp(&(json_string->getData()[24]), "chdowns") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLBlockedPuntReturnsTouchdowns;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'C':
                                if (strncmp(&(json_string->getData()[4]), "onversion", 9) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[13]))
                                      {
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[14]), "ttempts") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLConversionAttempts;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[14]))
                                              {
                                                case 'C':
                                                    if (strcmp(&(json_string->getData()[15]), "ompleted") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLConversionsCompleted;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'F':
                                                    if (strcmp(&(json_string->getData()[15]), "ailed") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLConversionsFailed;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'E':
                                if (strncmp(&(json_string->getData()[4]), "xtraPoints", 10) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[14]))
                                      {
                                        case 'A':
                                            if (strncmp(&(json_string->getData()[15]), "ttempted", 8) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[23]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLExtraPointsAttempted;
                                                            goto open_enum_is_done;
                                                          }
                                                    case '2':
                                                        if (strcmp(&(json_string->getData()[24]), "PointConversion") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLExtraPointsAttempted2PointConversion;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'K':
                                                        if (strcmp(&(json_string->getData()[24]), "icking") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLExtraPointsAttemptedKicking;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'B':
                                            if (strcmp(&(json_string->getData()[15]), "locked") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLExtraPointsBlocked;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'M':
                                            if (strncmp(&(json_string->getData()[15]), "ade", 3) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[18]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLExtraPointsMade;
                                                            goto open_enum_is_done;
                                                          }
                                                    case '2':
                                                        if (strcmp(&(json_string->getData()[19]), "PointConversion") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLExtraPointsMade2PointConversion;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'K':
                                                        if (strcmp(&(json_string->getData()[19]), "icking") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLExtraPointsMadeKicking;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[15]), "erc") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLExtraPointsPerc;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'F':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'i':
                                        if (strncmp(&(json_string->getData()[5]), "eldGoal", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 'R':
                                                    if (strncmp(&(json_string->getData()[13]), "eturns", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[19]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLFieldGoalReturns;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case '1':
                                                                if (strcmp(&(json_string->getData()[20]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturns10PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(json_string->getData()[20]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturns20PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(json_string->getData()[20]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturns30PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(json_string->getData()[20]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturns40PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(json_string->getData()[20]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturns50PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'A':
                                                                if (strcmp(&(json_string->getData()[20]), "verageReturn") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturnsAverageReturn;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[20]), "ongestReturn") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFieldGoalReturnsLongestReturn;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(json_string->getData()[20]), "o", 1) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[21]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(json_string->getData()[22]), "alYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLFieldGoalReturnsTotalYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'u':
                                                                            if (strcmp(&(json_string->getData()[22]), "chdowns") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLFieldGoalReturnsTouchdowns;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 's':
                                                    switch ((unsigned char)(json_string->getData()[13]))
                                                      {
                                                        case 'A':
                                                            if (strncmp(&(json_string->getData()[14]), "ttempted", 8) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[22]))
                                                                  {
                                                                    case 0:
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLFieldGoalsAttempted;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    case '1':
                                                                        if (strcmp(&(json_string->getData()[23]), "to19Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsAttempted1to19Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '2':
                                                                        if (strcmp(&(json_string->getData()[23]), "0to29Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsAttempted20to29Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '3':
                                                                        if (strcmp(&(json_string->getData()[23]), "0to39Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsAttempted30to39Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '4':
                                                                        if (strcmp(&(json_string->getData()[23]), "0to49Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsAttempted40to49Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '5':
                                                                        if (strcmp(&(json_string->getData()[23]), "0PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsAttempted50PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'B':
                                                            if (strcmp(&(json_string->getData()[14]), "locked") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLFieldGoalsBlocked;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'L':
                                                            if (strcmp(&(json_string->getData()[14]), "ongestMade") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLFieldGoalsLongestMade;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'M':
                                                            if (strncmp(&(json_string->getData()[14]), "ade", 3) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[17]))
                                                                  {
                                                                    case 0:
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLFieldGoalsMade;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    case '1':
                                                                        if (strcmp(&(json_string->getData()[18]), "to19Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsMade1to19Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '2':
                                                                        if (strcmp(&(json_string->getData()[18]), "0to29Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsMade20to29Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '3':
                                                                        if (strcmp(&(json_string->getData()[18]), "0to39Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsMade30to39Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '4':
                                                                        if (strcmp(&(json_string->getData()[18]), "0to49Yards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsMade40to49Yards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case '5':
                                                                        if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFieldGoalsMade50PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[14]), "erc") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLFieldGoalsPerc;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strcmp(&(json_string->getData()[5]), "rcedFumbles") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NFLForcedFumbles;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'u':
                                        if (strncmp(&(json_string->getData()[5]), "mbles", 5) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[10]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NFLFumbles;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'F':
                                                    if (strcmp(&(json_string->getData()[11]), "orced") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLFumblesForced;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'L':
                                                    if (strcmp(&(json_string->getData()[11]), "ost") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLFumblesLost;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'O':
                                                    switch ((unsigned char)(json_string->getData()[11]))
                                                      {
                                                        case 'p':
                                                            if (strncmp(&(json_string->getData()[12]), "ponent", 6) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[18]))
                                                                  {
                                                                    case 'R':
                                                                        if (strcmp(&(json_string->getData()[19]), "ecovery") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFumblesOpponentRecovery;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'T':
                                                                        if (strcmp(&(json_string->getData()[19]), "ouchdownsFromRecovery") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFumblesOpponentTouchdownsFromRecovery;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'u':
                                                            if (strcmp(&(json_string->getData()[12]), "tOfBounds") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLFumblesOutOfBounds;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'w':
                                                            if (strncmp(&(json_string->getData()[12]), "n", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[13]))
                                                                  {
                                                                    case 'R':
                                                                        if (strcmp(&(json_string->getData()[14]), "ecovery") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFumblesOwnRecovery;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'T':
                                                                        if (strcmp(&(json_string->getData()[14]), "ouchdownsFromRecovery") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLFumblesOwnTouchdownsFromRecovery;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'R':
                                                    if (strncmp(&(json_string->getData()[11]), "ecovered", 8) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[19]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLFumblesRecovered;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'F':
                                                                if (strcmp(&(json_string->getData()[20]), "orTouchdowns") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFumblesRecoveredForTouchdowns;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'Y':
                                                    if (strncmp(&(json_string->getData()[11]), "ardsFromO", 9) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[20]))
                                                          {
                                                            case 'p':
                                                                if (strcmp(&(json_string->getData()[21]), "ponentRecovery") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFumblesYardsFromOpponentRecovery;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'w':
                                                                if (strcmp(&(json_string->getData()[21]), "nRecovery") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLFumblesYardsFromOwnRecovery;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'G':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "mes", 3) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[8]))
                                              {
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[9]), "layed") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLGamesPlayed;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'S':
                                                    if (strcmp(&(json_string->getData()[9]), "tarted") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLGamesStarted;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strncmp(&(json_string->getData()[5]), "alEfficiency", 12) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[17]))
                                              {
                                                case 'A':
                                                    if (strcmp(&(json_string->getData()[18]), "ttempts") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLGoalEfficiencyAttempts;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[18]), "erc") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLGoalEfficiencyPerc;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'T':
                                                    if (strcmp(&(json_string->getData()[18]), "ouchdowns") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLGoalEfficiencyTouchdowns;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'I':
                                if (strncmp(&(json_string->getData()[4]), "nterceptions", 12) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[16]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NFLInterceptions;
                                                goto open_enum_is_done;
                                              }
                                        case 'L':
                                            if (strcmp(&(json_string->getData()[17]), "ongestInterception") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLInterceptionsLongestInterception;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'T':
                                            if (strcmp(&(json_string->getData()[17]), "ouchdowns") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLInterceptionsTouchdowns;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'Y':
                                            if (strcmp(&(json_string->getData()[17]), "ards") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLInterceptionsYards;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'K':
                                if (strncmp(&(json_string->getData()[4]), "ickoff", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 'R':
                                            if (strncmp(&(json_string->getData()[11]), "eturns", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[17]))
                                                  {
                                                    case '1':
                                                        if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturns10PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '2':
                                                        if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturns20PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '3':
                                                        if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturns30PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '4':
                                                        if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturns40PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case '5':
                                                        if (strcmp(&(json_string->getData()[18]), "0PlusYards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturns50PlusYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'A':
                                                        if (strcmp(&(json_string->getData()[18]), "verageRun") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturnsAverageRun;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[18]), "airCatches") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturnsFairCatches;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'L':
                                                        if (strcmp(&(json_string->getData()[18]), "ongestKickReturn") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturnsLongestKickReturn;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'R':
                                                        if (strcmp(&(json_string->getData()[18]), "eturns") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturnsReturns;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if (strcmp(&(json_string->getData()[18]), "ouchdowns") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturnsTouchdowns;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'Y':
                                                        if (strcmp(&(json_string->getData()[18]), "ards") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NFLKickoffReturnsYards;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[11]))
                                              {
                                                case 'A':
                                                    if (strncmp(&(json_string->getData()[12]), "verage", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[18]))
                                                          {
                                                            case 'G':
                                                                if (strcmp(&(json_string->getData()[19]), "rossYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLKickoffsAverageGrossYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(json_string->getData()[19]), "etYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLKickoffsAverageNetYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'R':
                                                                if (strcmp(&(json_string->getData()[19]), "eturnYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLKickoffsAverageReturnYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'E':
                                                    if (strcmp(&(json_string->getData()[12]), "ndZoneKicks") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLKickoffsEndZoneKicks;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'G':
                                                    if (strcmp(&(json_string->getData()[12]), "rossYards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLKickoffsGrossYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'I':
                                                    if (strncmp(&(json_string->getData()[12]), "nsideOpponents20YardLine", 24) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[36]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLKickoffsInsideOpponents20YardLine;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[37]), "erc") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLKickoffsInsideOpponents20YardLinePerc;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'K':
                                                    if (strcmp(&(json_string->getData()[12]), "icks") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLKickoffsKicks;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'L':
                                                    if (strcmp(&(json_string->getData()[12]), "ongestKick") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLKickoffsLongestKick;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'N':
                                                    if (strcmp(&(json_string->getData()[12]), "etYards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLKickoffsNetYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'R':
                                                    if (strcmp(&(json_string->getData()[12]), "eturned") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLKickoffsReturned;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'T':
                                                    if (strncmp(&(json_string->getData()[12]), "o", 1) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[13]))
                                                          {
                                                            case 't':
                                                                if (strcmp(&(json_string->getData()[14]), "alReturnYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLKickoffsTotalReturnYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'u':
                                                                if (strncmp(&(json_string->getData()[14]), "chbacks", 7) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[21]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLKickoffsTouchbacks;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[22]), "erc") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLKickoffsTouchbacksPerc;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(json_string->getData()[4]), "isc", 3) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[7]))
                                      {
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[8]), "ssistedTackles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLMiscAssistedTackles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'C':
                                            if (strcmp(&(json_string->getData()[8]), "ombinedTackles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLMiscCombinedTackles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'F':
                                            switch ((unsigned char)(json_string->getData()[8]))
                                              {
                                                case 'o':
                                                    if (strcmp(&(json_string->getData()[9]), "rcedFumbles") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLMiscForcedFumbles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'u':
                                                    if (strcmp(&(json_string->getData()[9]), "mblesRecovered") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLMiscFumblesRecovered;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        case 'T':
                                            if (strcmp(&(json_string->getData()[8]), "ackles") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLMiscTackles;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'P':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "ss", 2) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'e':
                                                    if (strcmp(&(json_string->getData()[8]), "sDefended") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLPassesDefended;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[8]), "ng", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[10]))
                                                          {
                                                            case '1':
                                                                switch ((unsigned char)(json_string->getData()[11]))
                                                                  {
                                                                    case '0':
                                                                        if (strcmp(&(json_string->getData()[12]), "PlusYards") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassing10PlusYards;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 's':
                                                                        if (strcmp(&(json_string->getData()[12]), "tDowns") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassing1stDowns;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassing20PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassing30PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassing40PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassing50PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'A':
                                                                switch ((unsigned char)(json_string->getData()[11]))
                                                                  {
                                                                    case 't':
                                                                        if (strcmp(&(json_string->getData()[12]), "tempts") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassingAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'v':
                                                                        if (strncmp(&(json_string->getData()[12]), "erageYardsPer", 13) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[25]))
                                                                              {
                                                                                case 'A':
                                                                                    if (strcmp(&(json_string->getData()[26]), "ttempt") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NFLPassingAverageYardsPerAttempt;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'C':
                                                                                    if (strcmp(&(json_string->getData()[26]), "ompletion") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NFLPassingAverageYardsPerCompletion;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'C':
                                                                if (strncmp(&(json_string->getData()[11]), "ompletion", 9) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[20]))
                                                                      {
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPassingCompletionPerc;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 's':
                                                                            if (json_string->getData()[21] == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPassingCompletions;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'G':
                                                                if (strcmp(&(json_string->getData()[11]), "rossYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassingGrossYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'I':
                                                                if (strncmp(&(json_string->getData()[11]), "nterception", 11) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[22]))
                                                                      {
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[23]), "erc") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPassingInterceptionPerc;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 's':
                                                                            switch ((unsigned char)(json_string->getData()[23]))
                                                                              {
                                                                                case 0:
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NFLPassingInterceptions;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                case 'R':
                                                                                    if (strcmp(&(json_string->getData()[24]), "eturnedForTouchdown") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NFLPassingInterceptionsReturnedForTouchdown;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[11]), "ongestPass") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassingLongestPass;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(json_string->getData()[11]), "etYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPassingNetYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'R':
                                                                switch ((unsigned char)(json_string->getData()[11]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(json_string->getData()[12]), "ting") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassingRating;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'e':
                                                                        if (strcmp(&(json_string->getData()[12]), "dZoneAttempts") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassingRedZoneAttempts;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'S':
                                                                if (strncmp(&(json_string->getData()[11]), "acked", 5) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[16]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassingSacked;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'Y':
                                                                            if (strcmp(&(json_string->getData()[17]), "ardsLost") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPassingSackedYardsLost;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'T':
                                                                switch ((unsigned char)(json_string->getData()[11]))
                                                                  {
                                                                    case 'a':
                                                                        if (strcmp(&(json_string->getData()[12]), "ckledForSafety") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPassingTackledForSafety;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'o':
                                                                        switch ((unsigned char)(json_string->getData()[12]))
                                                                          {
                                                                            case 't':
                                                                                if (strcmp(&(json_string->getData()[13]), "alYards") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NFLPassingTotalYards;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'u':
                                                                                if (strncmp(&(json_string->getData()[13]), "chdown", 6) == 0)
                                                                                  {
                                                                                    switch ((unsigned char)(json_string->getData()[19]))
                                                                                      {
                                                                                        case 'P':
                                                                                            if (strcmp(&(json_string->getData()[20]), "erc") == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NFLPassingTouchdownPerc;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        case 's':
                                                                                            if (json_string->getData()[20] == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NFLPassingTouchdowns;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'e':
                                        if (strncmp(&(json_string->getData()[5]), "nalties", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NFLPenalties;
                                                        goto open_enum_is_done;
                                                      }
                                                case '1':
                                                    if (strcmp(&(json_string->getData()[13]), "stDowns") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLPenalties1stDowns;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'Y':
                                                    if (strcmp(&(json_string->getData()[13]), "ards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLPenaltiesYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'u':
                                        if (strncmp(&(json_string->getData()[5]), "nt", 2) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'R':
                                                    if (strncmp(&(json_string->getData()[8]), "eturns", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[14]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLPuntReturns;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case '1':
                                                                if (strcmp(&(json_string->getData()[15]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturns10PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '2':
                                                                if (strcmp(&(json_string->getData()[15]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturns20PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '3':
                                                                if (strcmp(&(json_string->getData()[15]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturns30PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '4':
                                                                if (strcmp(&(json_string->getData()[15]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturns40PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case '5':
                                                                if (strcmp(&(json_string->getData()[15]), "0PlusYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturns50PlusYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'A':
                                                                if (strcmp(&(json_string->getData()[15]), "verageRun") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturnsAverageRun;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'F':
                                                                if (strcmp(&(json_string->getData()[15]), "airCatches") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturnsFairCatches;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[15]), "ongestKickReturn") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturnsLongestKickReturn;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'T':
                                                                if (strcmp(&(json_string->getData()[15]), "ouchdowns") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturnsTouchdowns;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'Y':
                                                                if (strcmp(&(json_string->getData()[15]), "ards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntReturnsYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[8]), "ng", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[10]))
                                                          {
                                                            case 'A':
                                                                if (strncmp(&(json_string->getData()[11]), "verage", 6) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[17]))
                                                                      {
                                                                        case 'G':
                                                                            if (strcmp(&(json_string->getData()[18]), "rossYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingAverageGrossYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'N':
                                                                            if (strcmp(&(json_string->getData()[18]), "etYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingAverageNetYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'R':
                                                                            if (strcmp(&(json_string->getData()[18]), "eturnYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingAverageReturnYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'B':
                                                                if (strcmp(&(json_string->getData()[11]), "locked") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntingBlocked;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'G':
                                                                if (strcmp(&(json_string->getData()[11]), "rossYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntingGrossYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'I':
                                                                if (strncmp(&(json_string->getData()[11]), "nsideOpponents20YardLine", 24) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[35]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPuntingInsideOpponents20YardLine;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[36]), "erc") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingInsideOpponents20YardLinePerc;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[11]), "ongestPunt") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntingLongestPunt;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'N':
                                                                if (strcmp(&(json_string->getData()[11]), "etYards") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntingNetYards;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[11]), "unts") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NFLPuntingPunts;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'R':
                                                                if (strncmp(&(json_string->getData()[11]), "eturn", 5) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[16]))
                                                                      {
                                                                        case 'Y':
                                                                            if (strcmp(&(json_string->getData()[17]), "ards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingReturnYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'e':
                                                                            if (strcmp(&(json_string->getData()[17]), "d") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingReturned;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(json_string->getData()[11]), "ouchbacks", 9) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[20]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLPuntingTouchbacks;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLPuntingTouchbacksPerc;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'Q':
                                if (strcmp(&(json_string->getData()[4]), "uarterbackHits") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_NFLQuarterbackHits;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'R':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'c':
                                                if (strncmp(&(json_string->getData()[6]), "eiving", 6) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[12]))
                                                      {
                                                        case '1':
                                                            switch ((unsigned char)(json_string->getData()[13]))
                                                              {
                                                                case '0':
                                                                    if (strcmp(&(json_string->getData()[14]), "PlusYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLReceiving10PlusYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 's':
                                                                    if (strcmp(&(json_string->getData()[14]), "tDowns") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLReceiving1stDowns;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case '2':
                                                            if (strcmp(&(json_string->getData()[13]), "0PlusYards") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceiving20PlusYards;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '3':
                                                            if (strcmp(&(json_string->getData()[13]), "0PlusYards") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceiving30PlusYards;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '4':
                                                            if (strcmp(&(json_string->getData()[13]), "0PlusYards") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceiving40PlusYards;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case '5':
                                                            if (strcmp(&(json_string->getData()[13]), "0PlusYards") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceiving50PlusYards;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'A':
                                                            if (strcmp(&(json_string->getData()[13]), "verageReception") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceivingAverageReception;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if (strcmp(&(json_string->getData()[13]), "umbledOnReception") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceivingFumbledOnReception;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'L':
                                                            if (strcmp(&(json_string->getData()[13]), "ongestReception") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceivingLongestReception;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'R':
                                                            if (strncmp(&(json_string->getData()[13]), "e", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[14]))
                                                                  {
                                                                    case 'c':
                                                                        if (strcmp(&(json_string->getData()[15]), "eptions") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLReceivingReceptions;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'd':
                                                                        if (strcmp(&(json_string->getData()[15]), "ZoneTargets") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLReceivingRedZoneTargets;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'T':
                                                            switch ((unsigned char)(json_string->getData()[13]))
                                                              {
                                                                case 'a':
                                                                    if (strcmp(&(json_string->getData()[14]), "rgets") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLReceivingTargets;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'o':
                                                                    switch ((unsigned char)(json_string->getData()[14]))
                                                                      {
                                                                        case 't':
                                                                            if (strcmp(&(json_string->getData()[15]), "alYards") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLReceivingTotalYards;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'u':
                                                                            if (strcmp(&(json_string->getData()[15]), "chdowns") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NFLReceivingTouchdowns;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        case 'Y':
                                                            if (strcmp(&(json_string->getData()[13]), "ardsAfterCompletion") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLReceivingYardsAfterCompletion;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'd':
                                                if (strncmp(&(json_string->getData()[6]), "ZoneEfficiency", 14) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[20]))
                                                      {
                                                        case 'A':
                                                            if (strcmp(&(json_string->getData()[21]), "ttempts") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRedZoneEfficiencyAttempts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'C':
                                                            if (strcmp(&(json_string->getData()[21]), "onversions") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRedZoneEfficiencyConversions;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[21]), "erc") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRedZoneEfficiencyPerc;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'u':
                                        if (strncmp(&(json_string->getData()[5]), "shing", 5) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[10]))
                                              {
                                                case '1':
                                                    switch ((unsigned char)(json_string->getData()[11]))
                                                      {
                                                        case '0':
                                                            if (strcmp(&(json_string->getData()[12]), "PlusYards") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRushing10PlusYards;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 's':
                                                            if (strncmp(&(json_string->getData()[12]), "tDown", 5) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[17]))
                                                                  {
                                                                    case 'P':
                                                                        if (strcmp(&(json_string->getData()[18]), "erc") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLRushing1stDownPerc;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 's':
                                                                        if (json_string->getData()[18] == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NFLRushing1stDowns;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case '2':
                                                    if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushing20PlusYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case '3':
                                                    if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushing30PlusYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case '4':
                                                    if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushing40PlusYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case '5':
                                                    if (strcmp(&(json_string->getData()[11]), "0PlusYards") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushing50PlusYards;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'A':
                                                    switch ((unsigned char)(json_string->getData()[11]))
                                                      {
                                                        case 't':
                                                            if (strcmp(&(json_string->getData()[12]), "tempts") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRushingAttempts;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'v':
                                                            if (strcmp(&(json_string->getData()[12]), "erageRush") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRushingAverageRush;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'F':
                                                    if (strcmp(&(json_string->getData()[11]), "umbledOnRush") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushingFumbledOnRush;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'L':
                                                    if (strcmp(&(json_string->getData()[11]), "ongestRush") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushingLongestRush;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'R':
                                                    if (strcmp(&(json_string->getData()[11]), "edZoneAttempts") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLRushingRedZoneAttempts;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'T':
                                                    switch ((unsigned char)(json_string->getData()[11]))
                                                      {
                                                        case 'a':
                                                            if (strcmp(&(json_string->getData()[12]), "ckledForSafety") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLRushingTackledForSafety;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'o':
                                                            switch ((unsigned char)(json_string->getData()[12]))
                                                              {
                                                                case 't':
                                                                    if (strcmp(&(json_string->getData()[13]), "alYards") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLRushingTotalYards;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'u':
                                                                    if (strcmp(&(json_string->getData()[13]), "chdowns") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NFLRushingTouchdowns;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'S':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'c':
                                                if (strncmp(&(json_string->getData()[6]), "k", 1) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[7]))
                                                      {
                                                        case 'Y':
                                                            if (strcmp(&(json_string->getData()[8]), "ards") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLSackYards;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 's':
                                                            if (json_string->getData()[8] == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLSacks;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'f':
                                                if (strcmp(&(json_string->getData()[6]), "eties") == 0)
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NFLSafeties;
                                                        goto open_enum_is_done;
                                                      }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    case 'p':
                                        if (strncmp(&(json_string->getData()[5]), "ecialTeams", 10) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[15]))
                                              {
                                                case 'A':
                                                    if (strcmp(&(json_string->getData()[16]), "ssistedTackles") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLSpecialTeamsAssistedTackles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'C':
                                                    if (strcmp(&(json_string->getData()[16]), "ombinedTackles") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLSpecialTeamsCombinedTackles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'F':
                                                    switch ((unsigned char)(json_string->getData()[16]))
                                                      {
                                                        case 'o':
                                                            if (strcmp(&(json_string->getData()[17]), "rcedFumbles") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLSpecialTeamsForcedFumbles;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'u':
                                                            if (strcmp(&(json_string->getData()[17]), "mblesRecovered") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NFLSpecialTeamsFumblesRecovered;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 'T':
                                                    if (strcmp(&(json_string->getData()[16]), "otalTackles") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NFLSpecialTeamsTotalTackles;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'T':
                                if (strncmp(&(json_string->getData()[4]), "ackles", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NFLTackles;
                                                goto open_enum_is_done;
                                              }
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[11]), "ssisted") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLTacklesAssisted;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'C':
                                            if (strcmp(&(json_string->getData()[11]), "ombined") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLTacklesCombined;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'F':
                                            if (strcmp(&(json_string->getData()[11]), "orLoss") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NFLTacklesForLoss;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                case 'H':
                    if (strncmp(&(json_string->getData()[2]), "L", 1) == 0)
                      {
                        switch ((unsigned char)(json_string->getData()[3]))
                          {
                            case 'A':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 's':
                                        if (strncmp(&(json_string->getData()[5]), "sists", 5) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[10]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NHLAssists;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[11]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLAssistsPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'v':
                                        if (strcmp(&(json_string->getData()[5]), "erageTimeOnIce") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NHLAverageTimeOnIce;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'B':
                                if (strncmp(&(json_string->getData()[4]), "locked", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 'A':
                                            if (strncmp(&(json_string->getData()[11]), "ttempts", 7) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[18]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLBlockedAttempts;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[19]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NHLBlockedAttemptsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (strncmp(&(json_string->getData()[11]), "hots", 4) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[15]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLBlockedShots;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'P':
                                                        if (strcmp(&(json_string->getData()[16]), "erGame") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NHLBlockedShotsPerGame;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'E':
                                if (strncmp(&(json_string->getData()[4]), "venStrength", 11) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[15]))
                                      {
                                        case 'A':
                                            if (strcmp(&(json_string->getData()[16]), "ssists") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLEvenStrengthAssists;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'F':
                                            if (strncmp(&(json_string->getData()[16]), "aceoff", 6) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[22]))
                                                  {
                                                    case 'W':
                                                        if (strcmp(&(json_string->getData()[23]), "inPerc") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NHLEvenStrengthFaceoffWinPerc;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 's':
                                                        switch ((unsigned char)(json_string->getData()[23]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLEvenStrengthFaceoffs;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[24]), "ost") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLEvenStrengthFaceoffsLost;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'W':
                                                                if (strcmp(&(json_string->getData()[24]), "on") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLEvenStrengthFaceoffsWon;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'G':
                                            if (strcmp(&(json_string->getData()[16]), "oals") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLEvenStrengthGoals;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'M':
                                            if (strcmp(&(json_string->getData()[16]), "issedShots") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLEvenStrengthMissedShots;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'S':
                                            if (strcmp(&(json_string->getData()[16]), "hotsOnGoal") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLEvenStrengthShotsOnGoal;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'T':
                                            if (strcmp(&(json_string->getData()[16]), "imeOnIce") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLEvenStrengthTimeOnIce;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'F':
                                if (strncmp(&(json_string->getData()[4]), "aceoff", 6) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[10]))
                                      {
                                        case 'W':
                                            if (strcmp(&(json_string->getData()[11]), "inPerc") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLFaceoffWinPerc;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 's':
                                            switch ((unsigned char)(json_string->getData()[11]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NHLFaceoffs;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'L':
                                                    if (strcmp(&(json_string->getData()[12]), "ost") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLFaceoffsLost;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'W':
                                                    if (strcmp(&(json_string->getData()[12]), "on") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLFaceoffsWon;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'G':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "me", 2) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 'W':
                                                    if (strncmp(&(json_string->getData()[8]), "inningGoal", 10) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[18]))
                                                          {
                                                            case 'F':
                                                                if (strcmp(&(json_string->getData()[19]), "lag") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLGameWinningGoalFlag;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 's':
                                                                if (json_string->getData()[19] == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLGameWinningGoals;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 's':
                                                    if (strcmp(&(json_string->getData()[8]), "Played") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLGamesPlayed;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'i':
                                        if (strncmp(&(json_string->getData()[5]), "veaways", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NHLGiveaways;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[13]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLGiveawaysPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strncmp(&(json_string->getData()[5]), "al", 2) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[7]))
                                              {
                                                case 's':
                                                    switch ((unsigned char)(json_string->getData()[8]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NHLGoals;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[9]), "erGame") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLGoalsPerGame;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                case 't':
                                                    if (strncmp(&(json_string->getData()[8]), "ending", 6) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[14]))
                                                          {
                                                            case 'E':
                                                                switch ((unsigned char)(json_string->getData()[15]))
                                                                  {
                                                                    case 'm':
                                                                        if (strncmp(&(json_string->getData()[16]), "ptyNet", 6) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[22]))
                                                                              {
                                                                                case 'E':
                                                                                    if (strcmp(&(json_string->getData()[23]), "venStrengthGoalsAgainst") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingEmptyNetEvenStrengthGoalsAgainst;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'G':
                                                                                    if (strcmp(&(json_string->getData()[23]), "oalsAgainst") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingEmptyNetGoalsAgainst;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'P':
                                                                                    if (strcmp(&(json_string->getData()[23]), "owerPlayGoalsAgainst") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingEmptyNetPowerPlayGoalsAgainst;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'S':
                                                                                    if (strncmp(&(json_string->getData()[23]), "ho", 2) == 0)
                                                                                      {
                                                                                        switch ((unsigned char)(json_string->getData()[25]))
                                                                                          {
                                                                                            case 'r':
                                                                                                if (strcmp(&(json_string->getData()[26]), "tHandedGoalsAgainst") == 0)
                                                                                                      {
                                                                                                        the_open_enum.in_known_list = true;
                                                                                                        the_open_enum.list_value = Value_NHLGoaltendingEmptyNetShortHandedGoalsAgainst;
                                                                                                        goto open_enum_is_done;
                                                                                                      }
                                                                                                break;
                                                                                            case 't':
                                                                                                if (strcmp(&(json_string->getData()[26]), "sAgainst") == 0)
                                                                                                      {
                                                                                                        the_open_enum.in_known_list = true;
                                                                                                        the_open_enum.list_value = Value_NHLGoaltendingEmptyNetShotsAgainst;
                                                                                                        goto open_enum_is_done;
                                                                                                      }
                                                                                                break;
                                                                                            default:
                                                                                                break;
                                                                                          }
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'v':
                                                                        if (strncmp(&(json_string->getData()[16]), "enStrength", 10) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[26]))
                                                                              {
                                                                                case 'G':
                                                                                    if (strcmp(&(json_string->getData()[27]), "oalsAgainst") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingEvenStrengthGoalsAgainst;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'S':
                                                                                    switch ((unsigned char)(json_string->getData()[27]))
                                                                                      {
                                                                                        case 'a':
                                                                                            if (strncmp(&(json_string->getData()[28]), "ve", 2) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(json_string->getData()[30]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(json_string->getData()[31]), "erc") == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingEvenStrengthSavePerc;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (json_string->getData()[31] == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingEvenStrengthSaves;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        case 'h':
                                                                                            if (strcmp(&(json_string->getData()[28]), "otsAgainst") == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingEvenStrengthShotsAgainst;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'G':
                                                                if (strncmp(&(json_string->getData()[15]), "oalsAgainst", 11) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[26]))
                                                                      {
                                                                        case 0:
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NHLGoaltendingGoalsAgainst;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        case 'A':
                                                                            if (strcmp(&(json_string->getData()[27]), "verage") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NHLGoaltendingGoalsAgainstAverage;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'P':
                                                                            if (strcmp(&(json_string->getData()[27]), "erGame") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NHLGoaltendingGoalsAgainstPerGame;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'L':
                                                                if (strcmp(&(json_string->getData()[15]), "osses") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLGoaltendingLosses;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            case 'O':
                                                                switch ((unsigned char)(json_string->getData()[15]))
                                                                  {
                                                                    case 'u':
                                                                        if (strcmp(&(json_string->getData()[16]), "tcome") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NHLGoaltendingOutcome;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 'v':
                                                                        if (strcmp(&(json_string->getData()[16]), "ertimeLosses") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NHLGoaltendingOvertimeLosses;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'P':
                                                                switch ((unsigned char)(json_string->getData()[15]))
                                                                  {
                                                                    case 'e':
                                                                        if (strncmp(&(json_string->getData()[16]), "nalty", 5) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[21]))
                                                                              {
                                                                                case 'G':
                                                                                    if (strcmp(&(json_string->getData()[22]), "oalsAgainst") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingPenaltyGoalsAgainst;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'S':
                                                                                    switch ((unsigned char)(json_string->getData()[22]))
                                                                                      {
                                                                                        case 'a':
                                                                                            if (strncmp(&(json_string->getData()[23]), "ve", 2) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(json_string->getData()[25]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(json_string->getData()[26]), "erc") == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingPenaltySavePerc;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (json_string->getData()[26] == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingPenaltySaves;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        case 'h':
                                                                                            if (strcmp(&(json_string->getData()[23]), "otsAgainst") == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingPenaltyShotsAgainst;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'o':
                                                                        if (strncmp(&(json_string->getData()[16]), "werPlay", 7) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[23]))
                                                                              {
                                                                                case 'G':
                                                                                    if (strcmp(&(json_string->getData()[24]), "oalsAgainst") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingPowerPlayGoalsAgainst;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 'S':
                                                                                    switch ((unsigned char)(json_string->getData()[24]))
                                                                                      {
                                                                                        case 'a':
                                                                                            if (strncmp(&(json_string->getData()[25]), "ve", 2) == 0)
                                                                                              {
                                                                                                switch ((unsigned char)(json_string->getData()[27]))
                                                                                                  {
                                                                                                    case 'P':
                                                                                                        if (strcmp(&(json_string->getData()[28]), "erc") == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingPowerPlaySavePerc;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    case 's':
                                                                                                        if (json_string->getData()[28] == 0)
                                                                                                              {
                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingPowerPlaySaves;
                                                                                                                goto open_enum_is_done;
                                                                                                              }
                                                                                                        break;
                                                                                                    default:
                                                                                                        break;
                                                                                                  }
                                                                                              }
                                                                                            break;
                                                                                        case 'h':
                                                                                            if (strcmp(&(json_string->getData()[25]), "otsAgainst") == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingPowerPlayShotsAgainst;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'S':
                                                                switch ((unsigned char)(json_string->getData()[15]))
                                                                  {
                                                                    case 'a':
                                                                        if (strncmp(&(json_string->getData()[16]), "ve", 2) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[18]))
                                                                              {
                                                                                case 'P':
                                                                                    if (strcmp(&(json_string->getData()[19]), "erc") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingSavePerc;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                case 's':
                                                                                    if (json_string->getData()[19] == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLGoaltendingSaves;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 'h':
                                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                                          {
                                                                            case 'o':
                                                                                switch ((unsigned char)(json_string->getData()[17]))
                                                                                  {
                                                                                    case 'o':
                                                                                        if (strncmp(&(json_string->getData()[18]), "tout", 4) == 0)
                                                                                          {
                                                                                            switch ((unsigned char)(json_string->getData()[22]))
                                                                                              {
                                                                                                case 'G':
                                                                                                    if (strcmp(&(json_string->getData()[23]), "oalsAgainst") == 0)
                                                                                                          {
                                                                                                            the_open_enum.in_known_list = true;
                                                                                                            the_open_enum.list_value = Value_NHLGoaltendingShootoutGoalsAgainst;
                                                                                                            goto open_enum_is_done;
                                                                                                          }
                                                                                                    break;
                                                                                                case 'S':
                                                                                                    switch ((unsigned char)(json_string->getData()[23]))
                                                                                                      {
                                                                                                        case 'a':
                                                                                                            if (strncmp(&(json_string->getData()[24]), "ve", 2) == 0)
                                                                                                              {
                                                                                                                switch ((unsigned char)(json_string->getData()[26]))
                                                                                                                  {
                                                                                                                    case 'P':
                                                                                                                        if (strcmp(&(json_string->getData()[27]), "erc") == 0)
                                                                                                                              {
                                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingShootoutSavePerc;
                                                                                                                                goto open_enum_is_done;
                                                                                                                              }
                                                                                                                        break;
                                                                                                                    case 's':
                                                                                                                        if (json_string->getData()[27] == 0)
                                                                                                                              {
                                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingShootoutSaves;
                                                                                                                                goto open_enum_is_done;
                                                                                                                              }
                                                                                                                        break;
                                                                                                                    default:
                                                                                                                        break;
                                                                                                                  }
                                                                                                              }
                                                                                                            break;
                                                                                                        case 'h':
                                                                                                            if (strcmp(&(json_string->getData()[24]), "otsAgainst") == 0)
                                                                                                                  {
                                                                                                                    the_open_enum.in_known_list = true;
                                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingShootoutShotsAgainst;
                                                                                                                    goto open_enum_is_done;
                                                                                                                  }
                                                                                                            break;
                                                                                                        default:
                                                                                                            break;
                                                                                                      }
                                                                                                    break;
                                                                                                default:
                                                                                                    break;
                                                                                              }
                                                                                          }
                                                                                        break;
                                                                                    case 'r':
                                                                                        if (strncmp(&(json_string->getData()[18]), "tHanded", 7) == 0)
                                                                                          {
                                                                                            switch ((unsigned char)(json_string->getData()[25]))
                                                                                              {
                                                                                                case 'G':
                                                                                                    if (strcmp(&(json_string->getData()[26]), "oalsAgainst") == 0)
                                                                                                          {
                                                                                                            the_open_enum.in_known_list = true;
                                                                                                            the_open_enum.list_value = Value_NHLGoaltendingShortHandedGoalsAgainst;
                                                                                                            goto open_enum_is_done;
                                                                                                          }
                                                                                                    break;
                                                                                                case 'S':
                                                                                                    switch ((unsigned char)(json_string->getData()[26]))
                                                                                                      {
                                                                                                        case 'a':
                                                                                                            if (strncmp(&(json_string->getData()[27]), "ve", 2) == 0)
                                                                                                              {
                                                                                                                switch ((unsigned char)(json_string->getData()[29]))
                                                                                                                  {
                                                                                                                    case 'P':
                                                                                                                        if (strcmp(&(json_string->getData()[30]), "erc") == 0)
                                                                                                                              {
                                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingShortHandedSavePerc;
                                                                                                                                goto open_enum_is_done;
                                                                                                                              }
                                                                                                                        break;
                                                                                                                    case 's':
                                                                                                                        if (json_string->getData()[30] == 0)
                                                                                                                              {
                                                                                                                                the_open_enum.in_known_list = true;
                                                                                                                                the_open_enum.list_value = Value_NHLGoaltendingShortHandedSaves;
                                                                                                                                goto open_enum_is_done;
                                                                                                                              }
                                                                                                                        break;
                                                                                                                    default:
                                                                                                                        break;
                                                                                                                  }
                                                                                                              }
                                                                                                            break;
                                                                                                        case 'h':
                                                                                                            if (strcmp(&(json_string->getData()[27]), "otsAgainst") == 0)
                                                                                                                  {
                                                                                                                    the_open_enum.in_known_list = true;
                                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingShortHandedShotsAgainst;
                                                                                                                    goto open_enum_is_done;
                                                                                                                  }
                                                                                                            break;
                                                                                                        default:
                                                                                                            break;
                                                                                                      }
                                                                                                    break;
                                                                                                default:
                                                                                                    break;
                                                                                              }
                                                                                          }
                                                                                        break;
                                                                                    case 't':
                                                                                        if (strncmp(&(json_string->getData()[18]), "sAgainst", 8) == 0)
                                                                                          {
                                                                                            switch ((unsigned char)(json_string->getData()[26]))
                                                                                              {
                                                                                                case 0:
                                                                                                      {
                                                                                                        the_open_enum.in_known_list = true;
                                                                                                        the_open_enum.list_value = Value_NHLGoaltendingShotsAgainst;
                                                                                                        goto open_enum_is_done;
                                                                                                      }
                                                                                                case 'P':
                                                                                                    if (strcmp(&(json_string->getData()[27]), "erGame") == 0)
                                                                                                          {
                                                                                                            the_open_enum.in_known_list = true;
                                                                                                            the_open_enum.list_value = Value_NHLGoaltendingShotsAgainstPerGame;
                                                                                                            goto open_enum_is_done;
                                                                                                          }
                                                                                                    break;
                                                                                                default:
                                                                                                    break;
                                                                                              }
                                                                                          }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                                break;
                                                                            case 'u':
                                                                                if (strncmp(&(json_string->getData()[17]), "tout", 4) == 0)
                                                                                  {
                                                                                    switch ((unsigned char)(json_string->getData()[21]))
                                                                                      {
                                                                                        case 'F':
                                                                                            if (strcmp(&(json_string->getData()[22]), "lag") == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingShutoutFlag;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        case 's':
                                                                                            if (json_string->getData()[22] == 0)
                                                                                                  {
                                                                                                    the_open_enum.in_known_list = true;
                                                                                                    the_open_enum.list_value = Value_NHLGoaltendingShutouts;
                                                                                                    goto open_enum_is_done;
                                                                                                  }
                                                                                            break;
                                                                                        default:
                                                                                            break;
                                                                                      }
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                                break;
                                                            case 'T':
                                                                if (strncmp(&(json_string->getData()[15]), "otal", 4) == 0)
                                                                  {
                                                                    switch ((unsigned char)(json_string->getData()[19]))
                                                                      {
                                                                        case 'G':
                                                                            if (strcmp(&(json_string->getData()[20]), "oalsAgainst") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NHLGoaltendingTotalGoalsAgainst;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        case 'S':
                                                                            if (strcmp(&(json_string->getData()[20]), "hotsAgainst") == 0)
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NHLGoaltendingTotalShotsAgainst;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            break;
                                                                        default:
                                                                            break;
                                                                      }
                                                                  }
                                                                break;
                                                            case 'W':
                                                                if (strcmp(&(json_string->getData()[15]), "ins") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLGoaltendingWins;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'H':
                                if (strncmp(&(json_string->getData()[4]), "its", 3) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[7]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NHLHits;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[8]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLHitsPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'M':
                                if (strncmp(&(json_string->getData()[4]), "issedShots", 10) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[14]))
                                      {
                                        case 0:
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NHLMissedShots;
                                                goto open_enum_is_done;
                                              }
                                        case 'P':
                                            if (strcmp(&(json_string->getData()[15]), "erGame") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_NHLMissedShotsPerGame;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'P':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'e':
                                        if (strncmp(&(json_string->getData()[5]), "nalt", 4) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[9]))
                                              {
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[10]), "es", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[12]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPenalties;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[13]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLPenaltiesPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'y':
                                                    switch ((unsigned char)(json_string->getData()[10]))
                                                      {
                                                        case 'G':
                                                            if (strcmp(&(json_string->getData()[11]), "oals") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPenaltyGoals;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'M':
                                                            if (strncmp(&(json_string->getData()[11]), "i", 1) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[12]))
                                                                  {
                                                                    case 'n':
                                                                        if (strncmp(&(json_string->getData()[13]), "utes", 4) == 0)
                                                                          {
                                                                            switch ((unsigned char)(json_string->getData()[17]))
                                                                              {
                                                                                case 0:
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLPenaltyMinutes;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                case 'P':
                                                                                    if (strcmp(&(json_string->getData()[18]), "erGame") == 0)
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLPenaltyMinutesPerGame;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    break;
                                                                                default:
                                                                                    break;
                                                                              }
                                                                          }
                                                                        break;
                                                                    case 's':
                                                                        if (strcmp(&(json_string->getData()[13]), "sedShots") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NHLPenaltyMissedShots;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(json_string->getData()[11]), "hotsOnGoal") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPenaltyShotsOnGoal;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'l':
                                        if (strcmp(&(json_string->getData()[5]), "usMinus") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NHLPlusMinus;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'o':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'i':
                                                if (strncmp(&(json_string->getData()[6]), "nts", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[9]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NHLPoints;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[10]), "erGame") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPointsPerGame;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'w':
                                                if (strncmp(&(json_string->getData()[6]), "erPlay", 6) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[12]))
                                                      {
                                                        case 'A':
                                                            if (strcmp(&(json_string->getData()[13]), "ssists") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayAssists;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'F':
                                                            if (strncmp(&(json_string->getData()[13]), "aceoff", 6) == 0)
                                                              {
                                                                switch ((unsigned char)(json_string->getData()[19]))
                                                                  {
                                                                    case 'W':
                                                                        if (strcmp(&(json_string->getData()[20]), "inPerc") == 0)
                                                                              {
                                                                                the_open_enum.in_known_list = true;
                                                                                the_open_enum.list_value = Value_NHLPowerPlayFaceoffWinPerc;
                                                                                goto open_enum_is_done;
                                                                              }
                                                                        break;
                                                                    case 's':
                                                                        switch ((unsigned char)(json_string->getData()[20]))
                                                                          {
                                                                            case 0:
                                                                                  {
                                                                                    the_open_enum.in_known_list = true;
                                                                                    the_open_enum.list_value = Value_NHLPowerPlayFaceoffs;
                                                                                    goto open_enum_is_done;
                                                                                  }
                                                                            case 'L':
                                                                                if (strcmp(&(json_string->getData()[21]), "ost") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLPowerPlayFaceoffsLost;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'W':
                                                                                if (strcmp(&(json_string->getData()[21]), "on") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLPowerPlayFaceoffsWon;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                        break;
                                                                    default:
                                                                        break;
                                                                  }
                                                              }
                                                            break;
                                                        case 'G':
                                                            if (strcmp(&(json_string->getData()[13]), "oals") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayGoals;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'M':
                                                            if (strcmp(&(json_string->getData()[13]), "issedShots") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayMissedShots;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'O':
                                                            if (strcmp(&(json_string->getData()[13]), "pportunities") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayOpportunities;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[13]), "oints") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayPoints;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'S':
                                                            if (strcmp(&(json_string->getData()[13]), "hotsOnGoal") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayShotsOnGoal;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        case 'T':
                                                            if (strcmp(&(json_string->getData()[13]), "imeOnIce") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLPowerPlayTimeOnIce;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'S':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'c':
                                        if (strcmp(&(json_string->getData()[5]), "ratches") == 0)
                                              {
                                                the_open_enum.in_known_list = true;
                                                the_open_enum.list_value = Value_NHLScratches;
                                                goto open_enum_is_done;
                                              }
                                        break;
                                    case 'h':
                                        switch ((unsigned char)(json_string->getData()[5]))
                                          {
                                            case 'i':
                                                if (strncmp(&(json_string->getData()[6]), "fts", 3) == 0)
                                                  {
                                                    switch ((unsigned char)(json_string->getData()[9]))
                                                      {
                                                        case 0:
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_NHLShifts;
                                                                goto open_enum_is_done;
                                                              }
                                                        case 'P':
                                                            if (strcmp(&(json_string->getData()[10]), "erGame") == 0)
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLShiftsPerGame;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            break;
                                                        default:
                                                            break;
                                                      }
                                                  }
                                                break;
                                            case 'o':
                                                switch ((unsigned char)(json_string->getData()[6]))
                                                  {
                                                    case 'o':
                                                        if (strncmp(&(json_string->getData()[7]), "t", 1) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[8]))
                                                              {
                                                                case 'i':
                                                                    if (strcmp(&(json_string->getData()[9]), "ngPerc") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShootingPerc;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'o':
                                                                    if (strncmp(&(json_string->getData()[9]), "ut", 2) == 0)
                                                                      {
                                                                        switch ((unsigned char)(json_string->getData()[11]))
                                                                          {
                                                                            case 'G':
                                                                                if (strcmp(&(json_string->getData()[12]), "oals") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLShootoutGoals;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'M':
                                                                                if (strcmp(&(json_string->getData()[12]), "issedShots") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLShootoutMissedShots;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 'S':
                                                                                if (strcmp(&(json_string->getData()[12]), "hotsOnGoal") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLShootoutShotsOnGoal;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 'r':
                                                        if (strncmp(&(json_string->getData()[7]), "tHanded", 7) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[14]))
                                                              {
                                                                case 'A':
                                                                    if (strcmp(&(json_string->getData()[15]), "ssists") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShortHandedAssists;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'F':
                                                                    if (strncmp(&(json_string->getData()[15]), "aceoff", 6) == 0)
                                                                      {
                                                                        switch ((unsigned char)(json_string->getData()[21]))
                                                                          {
                                                                            case 'W':
                                                                                if (strcmp(&(json_string->getData()[22]), "inPerc") == 0)
                                                                                      {
                                                                                        the_open_enum.in_known_list = true;
                                                                                        the_open_enum.list_value = Value_NHLShortHandedFaceoffWinPerc;
                                                                                        goto open_enum_is_done;
                                                                                      }
                                                                                break;
                                                                            case 's':
                                                                                switch ((unsigned char)(json_string->getData()[22]))
                                                                                  {
                                                                                    case 0:
                                                                                          {
                                                                                            the_open_enum.in_known_list = true;
                                                                                            the_open_enum.list_value = Value_NHLShortHandedFaceoffs;
                                                                                            goto open_enum_is_done;
                                                                                          }
                                                                                    case 'L':
                                                                                        if (strcmp(&(json_string->getData()[23]), "ost") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NHLShortHandedFaceoffsLost;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    case 'W':
                                                                                        if (strcmp(&(json_string->getData()[23]), "on") == 0)
                                                                                              {
                                                                                                the_open_enum.in_known_list = true;
                                                                                                the_open_enum.list_value = Value_NHLShortHandedFaceoffsWon;
                                                                                                goto open_enum_is_done;
                                                                                              }
                                                                                        break;
                                                                                    default:
                                                                                        break;
                                                                                  }
                                                                                break;
                                                                            default:
                                                                                break;
                                                                          }
                                                                      }
                                                                    break;
                                                                case 'G':
                                                                    if (strcmp(&(json_string->getData()[15]), "oals") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShortHandedGoals;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'M':
                                                                    if (strcmp(&(json_string->getData()[15]), "issedShots") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShortHandedMissedShots;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'P':
                                                                    if (strcmp(&(json_string->getData()[15]), "oints") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShortHandedPoints;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'S':
                                                                    if (strcmp(&(json_string->getData()[15]), "hotsOnGoal") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShortHandedShotsOnGoal;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case 'T':
                                                                    if (strcmp(&(json_string->getData()[15]), "imeOnIce") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShortHandedTimeOnIce;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    case 't':
                                                        if (strncmp(&(json_string->getData()[7]), "sOnGoal", 7) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[14]))
                                                              {
                                                                case 0:
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLShotsOnGoal;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                case 'P':
                                                                    if (strcmp(&(json_string->getData()[15]), "erGame") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_NHLShotsOnGoalPerGame;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                                break;
                                            default:
                                                break;
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            case 'T':
                                switch ((unsigned char)(json_string->getData()[4]))
                                  {
                                    case 'a':
                                        if (strncmp(&(json_string->getData()[5]), "keaways", 7) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NHLTakeaways;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[13]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLTakeawaysPerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'e':
                                        if (strncmp(&(json_string->getData()[5]), "amPenalt", 8) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[13]))
                                              {
                                                case 'i':
                                                    if (strncmp(&(json_string->getData()[14]), "es", 2) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[16]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLTeamPenalties;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[17]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLTeamPenaltiesPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                case 'y':
                                                    if (strncmp(&(json_string->getData()[14]), "Minutes", 7) == 0)
                                                      {
                                                        switch ((unsigned char)(json_string->getData()[21]))
                                                          {
                                                            case 0:
                                                                  {
                                                                    the_open_enum.in_known_list = true;
                                                                    the_open_enum.list_value = Value_NHLTeamPenaltyMinutes;
                                                                    goto open_enum_is_done;
                                                                  }
                                                            case 'P':
                                                                if (strcmp(&(json_string->getData()[22]), "erGame") == 0)
                                                                      {
                                                                        the_open_enum.in_known_list = true;
                                                                        the_open_enum.list_value = Value_NHLTeamPenaltyMinutesPerGame;
                                                                        goto open_enum_is_done;
                                                                      }
                                                                break;
                                                            default:
                                                                break;
                                                          }
                                                      }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    case 'o':
                                        if (strncmp(&(json_string->getData()[5]), "talTimeOnIce", 12) == 0)
                                          {
                                            switch ((unsigned char)(json_string->getData()[17]))
                                              {
                                                case 0:
                                                      {
                                                        the_open_enum.in_known_list = true;
                                                        the_open_enum.list_value = Value_NHLTotalTimeOnIce;
                                                        goto open_enum_is_done;
                                                      }
                                                case 'P':
                                                    if (strcmp(&(json_string->getData()[18]), "erGame") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_NHLTotalTimeOnIcePerGame;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                          }
                                        break;
                                    default:
                                        break;
                                  }
                                break;
                            default:
                                break;
                          }
                      }
                    break;
                default:
                    break;
              }
            break;
        case 'S':
            if (strncmp(&(json_string->getData()[1]), "occer", 5) == 0)
              {
                switch ((unsigned char)(json_string->getData()[6]))
                  {
                    case 'B':
                        if (strcmp(&(json_string->getData()[7]), "allPossessions") == 0)
                              {
                                the_open_enum.in_known_list = true;
                                the_open_enum.list_value = Value_SoccerBallPossessions;
                                goto open_enum_is_done;
                              }
                        break;
                    case 'C':
                        switch ((unsigned char)(json_string->getData()[7]))
                          {
                            case 'a':
                                if (strcmp(&(json_string->getData()[8]), "rdsGiven") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_SoccerCardsGiven;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'o':
                                if (strcmp(&(json_string->getData()[8]), "rnerKicks") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_SoccerCornerKicks;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'F':
                        if (strcmp(&(json_string->getData()[7]), "reeKicks") == 0)
                              {
                                the_open_enum.in_known_list = true;
                                the_open_enum.list_value = Value_SoccerFreeKicks;
                                goto open_enum_is_done;
                              }
                        break;
                    case 'G':
                        if (strncmp(&(json_string->getData()[7]), "oal", 3) == 0)
                          {
                            switch ((unsigned char)(json_string->getData()[10]))
                              {
                                case 'A':
                                    if (strcmp(&(json_string->getData()[11]), "ttempts") == 0)
                                          {
                                            the_open_enum.in_known_list = true;
                                            the_open_enum.list_value = Value_SoccerGoalAttempts;
                                            goto open_enum_is_done;
                                          }
                                    break;
                                case 's':
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'B':
                                            if (strncmp(&(json_string->getData()[12]), "y", 1) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[13]))
                                                  {
                                                    case 'F':
                                                        if (strcmp(&(json_string->getData()[14]), "oot") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_SoccerGoalsByFoot;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'H':
                                                        if (strcmp(&(json_string->getData()[14]), "eaders") == 0)
                                                              {
                                                                the_open_enum.in_known_list = true;
                                                                the_open_enum.list_value = Value_SoccerGoalsByHeaders;
                                                                goto open_enum_is_done;
                                                              }
                                                        break;
                                                    case 'T':
                                                        if (strncmp(&(json_string->getData()[14]), "ime", 3) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[17]))
                                                              {
                                                                case '0':
                                                                    if (strcmp(&(json_string->getData()[18]), "0To15") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsByTime00To15;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '1':
                                                                    if (strcmp(&(json_string->getData()[18]), "6To30") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsByTime16To30;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(json_string->getData()[18]), "1To45") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsByTime31To45;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(json_string->getData()[18]), "6To60") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsByTime46To60;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '6':
                                                                    if (strcmp(&(json_string->getData()[18]), "1To75") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsByTime61To75;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '7':
                                                                    if (strcmp(&(json_string->getData()[18]), "6To90") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsByTime76To90;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'C':
                                            if (strncmp(&(json_string->getData()[12]), "onceded", 7) == 0)
                                              {
                                                switch ((unsigned char)(json_string->getData()[19]))
                                                  {
                                                    case 0:
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_SoccerGoalsConceded;
                                                            goto open_enum_is_done;
                                                          }
                                                    case 'B':
                                                        if (strncmp(&(json_string->getData()[20]), "yTime", 5) == 0)
                                                          {
                                                            switch ((unsigned char)(json_string->getData()[25]))
                                                              {
                                                                case '0':
                                                                    if (strcmp(&(json_string->getData()[26]), "0To15") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsConcededByTime00To15;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '1':
                                                                    if (strcmp(&(json_string->getData()[26]), "6To30") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsConcededByTime16To30;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '3':
                                                                    if (strcmp(&(json_string->getData()[26]), "1To45") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsConcededByTime31To45;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '4':
                                                                    if (strcmp(&(json_string->getData()[26]), "6To60") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsConcededByTime46To60;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '6':
                                                                    if (strcmp(&(json_string->getData()[26]), "1To75") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsConcededByTime61To75;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                case '7':
                                                                    if (strcmp(&(json_string->getData()[26]), "6To90") == 0)
                                                                          {
                                                                            the_open_enum.in_known_list = true;
                                                                            the_open_enum.list_value = Value_SoccerGoalsConcededByTime76To90;
                                                                            goto open_enum_is_done;
                                                                          }
                                                                    break;
                                                                default:
                                                                    break;
                                                              }
                                                          }
                                                        break;
                                                    default:
                                                        break;
                                                  }
                                              }
                                            break;
                                        case 'S':
                                            if (strcmp(&(json_string->getData()[12]), "cored") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_SoccerGoalsScored;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                    break;
                                default:
                                    break;
                              }
                          }
                        break;
                    case 'M':
                        if (strcmp(&(json_string->getData()[7]), "atchesPlayed") == 0)
                              {
                                the_open_enum.in_known_list = true;
                                the_open_enum.list_value = Value_SoccerMatchesPlayed;
                                goto open_enum_is_done;
                              }
                        break;
                    case 'O':
                        switch ((unsigned char)(json_string->getData()[7]))
                          {
                            case 'f':
                                if (strcmp(&(json_string->getData()[8]), "fsides") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_SoccerOffsides;
                                        goto open_enum_is_done;
                                      }
                                break;
                            case 'w':
                                if (strcmp(&(json_string->getData()[8]), "nGoals") == 0)
                                      {
                                        the_open_enum.in_known_list = true;
                                        the_open_enum.list_value = Value_SoccerOwnGoals;
                                        goto open_enum_is_done;
                                      }
                                break;
                            default:
                                break;
                          }
                        break;
                    case 'S':
                        switch ((unsigned char)(json_string->getData()[7]))
                          {
                            case 'h':
                                if (strncmp(&(json_string->getData()[8]), "ots", 3) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[11]))
                                      {
                                        case 'B':
                                            if (strcmp(&(json_string->getData()[12]), "locked") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_SoccerShotsBlocked;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'O':
                                            switch ((unsigned char)(json_string->getData()[12]))
                                              {
                                                case 'f':
                                                    if (strcmp(&(json_string->getData()[13]), "fGoal") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_SoccerShotsOffGoal;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                case 'n':
                                                    if (strcmp(&(json_string->getData()[13]), "Goal") == 0)
                                                          {
                                                            the_open_enum.in_known_list = true;
                                                            the_open_enum.list_value = Value_SoccerShotsOnGoal;
                                                            goto open_enum_is_done;
                                                          }
                                                    break;
                                                default:
                                                    break;
                                              }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            case 'u':
                                if (strncmp(&(json_string->getData()[8]), "bstituted", 9) == 0)
                                  {
                                    switch ((unsigned char)(json_string->getData()[17]))
                                      {
                                        case 'I':
                                            if (strcmp(&(json_string->getData()[18]), "n") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_SoccerSubstitutedIn;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        case 'O':
                                            if (strcmp(&(json_string->getData()[18]), "ut") == 0)
                                                  {
                                                    the_open_enum.in_known_list = true;
                                                    the_open_enum.list_value = Value_SoccerSubstitutedOut;
                                                    goto open_enum_is_done;
                                                  }
                                            break;
                                        default:
                                            break;
                                      }
                                  }
                                break;
                            default:
                                break;
                          }
                        break;
                    default:
                        break;
                  }
              }
            break;
        default:
            break;
      }
    the_open_enum.in_known_list = false;
    the_open_enum.string_value = json_string->getData();
  open_enum_is_done:;
    setValue(the_open_enum);
  }

SportsStatsTypeJSON::SportsStatsTypeJSON(void) :
        flagHasValue(false)
  {
  }

SportsStatsTypeJSON::SportsStatsTypeJSON(TypeValue init_value) :
        flagHasValue(true),
        storeValue(init_value)
  {
  }

SportsStatsTypeJSON::SportsStatsTypeJSON(const char *init_value) :
        flagHasValue(true)
  {
    TypeValueKnownValues known = stringToValue(init_value);
    if (known == Value__none)
      {
        storeValue.in_known_list = false;
        storeValue.string_value = init_value;
      }
    else
      {
        storeValue.in_known_list = true;
        storeValue.list_value = known;
      }
  }

SportsStatsTypeJSON::SportsStatsTypeJSON(std::string init_value) :
        flagHasValue(true)
  {
    TypeValueKnownValues known = stringToValue(init_value.c_str());
    if (known == Value__none)
      {
        storeValue.in_known_list = false;
        storeValue.string_value = init_value;
      }
    else
      {
        storeValue.in_known_list = true;
        storeValue.list_value = known;
      }
  }

SportsStatsTypeJSON::SportsStatsTypeJSON(TypeValueKnownValues init_value) :
        flagHasValue(true)
  {
    assert(init_value != Value__none);
    storeValue.in_known_list = true;
    storeValue.list_value = init_value;
  }

SportsStatsTypeJSON::~SportsStatsTypeJSON(void)
  {
  }

bool SportsStatsTypeJSON::hasValue(void) const
  {
    return flagHasValue;
  }

SportsStatsTypeJSON::TypeValue SportsStatsTypeJSON::getValue(void)
  {
    assert(flagHasValue);
    return storeValue;
  }

const SportsStatsTypeJSON::TypeValue SportsStatsTypeJSON::getValue(void) const
  {
    assert(flagHasValue);
    return storeValue;
  }

const char *SportsStatsTypeJSON::getValueAsChars(void) const
  {
    TypeValue result = getValue();
    if (result.in_known_list)
        return stringFromValue(result.list_value);
    else
        return result.string_value.c_str();
  }

std::string SportsStatsTypeJSON::getValueAsString(void) const
  {
    return getValueAsChars();
  }

SportsStatsTypeJSON *SportsStatsTypeJSON::from_json(JSONValue *json_value, bool ignore_extras)
  {
    SportsStatsTypeJSON *result;
      {
        JSONHoldingGenerator<Generator, RCHandle<SportsStatsTypeJSON>, SportsStatsTypeJSON *, bool> generator("Type SportsStatsType", ignore_extras);
        json_value->write(&generator);
        assert(generator.have_value);
        result = generator.value.referenced();
        result->add_reference();
      };
    result->remove_reference_no_delete();
    return result;
  }
